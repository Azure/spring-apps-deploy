{"version":3,"file":"index.js","sources":["../src/AccountSASPermissions.ts","../src/AccountSASResourceTypes.ts","../src/AccountSASServices.ts","../src/SasIPRange.ts","../src/utils/constants.ts","../src/utils/utils.common.ts","../src/SASQueryParameters.ts","../src/AccountSASSignatureValues.ts","../src/FileSASPermissions.ts","../src/ShareSASPermissions.ts","../src/FileSASSignatureValues.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/service.ts","../src/generated/src/operations/share.ts","../src/generated/src/operations/directory.ts","../src/generated/src/operations/file.ts","../src/log.ts","../src/policies/StorageBrowserPolicy.ts","../src/StorageBrowserPolicyFactory.ts","../src/policies/StorageRetryPolicy.ts","../src/StorageRetryPolicyFactory.ts","../src/policies/TelemetryPolicy.ts","../src/TelemetryPolicyFactory.ts","../src/utils/cache.ts","../src/policies/CredentialPolicy.ts","../src/policies/AnonymousCredentialPolicy.ts","../src/credentials/Credential.ts","../src/credentials/AnonymousCredential.ts","../src/Pipeline.ts","../src/policies/StorageSharedKeyCredentialPolicy.ts","../src/credentials/StorageSharedKeyCredential.ts","../src/utils/tracing.ts","../src/generated/src/storageClientContext.ts","../src/StorageClient.ts","../src/FileSystemAttributes.ts","../src/utils/RetriableReadableStream.ts","../src/FileDownloadResponse.ts","../src/Range.ts","../src/models.ts","../src/utils/Batch.ts","../src/utils/BufferScheduler.ts","../src/utils/utils.node.ts","../src/Clients.ts","../src/ShareClientInternal.ts","../src/ShareServiceClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @param services -\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Allowed IP range for a SAS.\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange - A range of IP addresses.\n * @returns string representation of the IP range.\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"12.8.0\";\nexport const SERVICE_VERSION: string = \"2020-10-02\";\n\nexport const FILE_MAX_SIZE_BYTES: number = 4 * 1024 * 1024 * 1024 * 1024; // 4TB\nexport const FILE_RANGE_MAX_SIZE_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\nexport const DEFAULT_HIGH_LEVEL_CONCURRENCY: number = 5;\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SHARE_SNAPSHOT: \"sharesnapshot\",\n    SIGNATURE: \"sig\",\n    TIMEOUT: \"timeout\"\n  }\n};\n\nexport const HttpUrlConnection = {\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"content-encoding\",\n  CONTENT_LANGUAGE: \"content-language\",\n  CONTENT_LENGTH: \"content-length\",\n  CONTENT_MD5: \"content-md5\",\n  CONTENT_TYPE: \"content-type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\"\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const StorageFileLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"x-ms-cache-control\",\n  \"x-ms-content-disposition\",\n  \"x-ms-content-encoding\",\n  \"x-ms-content-language\",\n  \"x-ms-content-length\",\n  \"x-ms-content-md5\",\n  \"x-ms-content-type\",\n  \"x-ms-file-attributes\",\n  \"x-ms-file-change-time\",\n  \"x-ms-file-creation-time\",\n  \"x-ms-file-id\",\n  \"x-ms-file-last-write-time\",\n  \"x-ms-file-parent-id\",\n  \"x-ms-handle-id\",\n  \"x-ms-number-of-handles-closed\",\n  \"x-ms-recursive\",\n  \"x-ms-share-quota\",\n  \"x-ms-type\",\n  \"x-ms-write\"\n];\n\nexport const StorageFileLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"copyid\",\n  \"restype\"\n];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\nimport { HttpAuthorization } from \"../models\";\nimport { HeaderConstants, URLConstants } from \"./constants\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XXXClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `ContainerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n}\n\nfunction getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"FileEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\"\n) {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  // Matching FileEndpoint in the Account connection string\n  let fileEndpoint = getValueInConnString(connectionString, \"FileEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  fileEndpoint = fileEndpoint.endsWith(\"/\") ? fileEndpoint.slice(0, -1) : fileEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!fileEndpoint) {\n      // FileEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      fileEndpoint = `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: fileEndpoint,\n      accountName,\n      accountKey\n    };\n  } else {\n    // SAS connection string\n    const accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    const accountName = getAccountNameFromUrl(fileEndpoint);\n    if (!fileEndpoint) {\n      throw new Error(\"Invalid FileEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    }\n\n    return { kind: \"SASConnString\", url: fileEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url: string, queryParts: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let query = urlParsed.getQuery();\n  if (query) {\n    query += \"&\" + queryParts;\n  } else {\n    query = queryParts;\n  }\n\n  urlParsed.setQuery(query);\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual;\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(\n  timeInMs: number,\n  aborter?: AbortSignalLike,\n  abortError?: Error\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    /* eslint-disable-next-line prefer-const */\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    /* eslint-disable-next-line prefer-const */\n    timeout = setTimeout(resolveHandler, timeInMs);\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl: URLBuilder = URLBuilder.parse(url);\n  let accountName;\n  try {\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"file\") {\n      // `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`;\n      // Slicing off '/' at the end if exists\n      url = url.endsWith(\"/\") ? url.slice(0, -1) : url;\n\n      accountName = parsedUrl.getHost()!.split(\".\")[0];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.getPath()!.split(\"/\")[1];\n    } else {\n      // Custom domain case: \"https://customdomain.com/containername/blob\".\n      accountName = \"\";\n    }\n    return accountName;\n  } catch (error) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function isIpEndpointStyle(parsedUrl: URLBuilder): boolean {\n  if (parsedUrl.getHost() === undefined) {\n    return false;\n  }\n\n  const host =\n    parsedUrl.getHost()! + (parsedUrl.getPort() === undefined ? \"\" : \":\" + parsedUrl.getPort());\n\n  // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n  // Case 2: localhost(:port), use broad regex to match port part.\n  // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n  // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n  return /^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(\n    host\n  );\n}\n\nexport function getShareNameAndPathFromUrl(\n  url: string\n): { baseName: string; shareName: string; path: string } {\n  //  URL may look like the following\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory\";\n  // \"https://myaccount.file.core.windows.net/myshare?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare\";\n  // IPv4/IPv6 address hosts, Endpoints - `http://187.24.0.1:1000/devstoreaccount1/mydirectory/file`\n  // http://localhost:1000/devstoreaccount1/mydirectory/file\n  // mydirectory can consist of multiple directories - dir1/dir2/dir3\n\n  let shareName;\n  let path;\n  let baseName;\n\n  try {\n    const parsedUrl = URLBuilder.parse(url);\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"file\") {\n      // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\";\n      // .getPath() -> /myshare/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n      shareName = pathComponents![1];\n      path = pathComponents![3];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://187.24.0.1:1000/devstoreaccount1/mydirectory/file\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:1000/devstoreaccount1/mydirectory/file\n      // .getPath() -> /devstoreaccount1/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n      shareName = pathComponents![2];\n      path = pathComponents![4];\n    } else {\n      // \"https://customdomain.com/myshare/mydirectory/file\";\n      // .getPath() -> /myshare/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n      shareName = pathComponents![1];\n      path = pathComponents![3];\n    }\n\n    // decode the encoded shareName and filePath - to get all the special characters that might be present in it\n    shareName = decodeURIComponent(shareName);\n    path = decodeURIComponent(path);\n\n    // Cast to string is required as TypeScript cannot infer that split() always returns\n    // an array with length >= 1\n    baseName = path.split(\"/\").pop() as string;\n\n    if (!shareName) {\n      throw new Error(\"Provided shareName is invalid.\");\n    } else {\n      return { baseName, shareName, path };\n    }\n  } catch (error) {\n    throw new Error(\n      \"Unable to extract shareName and filePath/directoryPath with provided information.\"\n    );\n  }\n}\n\nexport function httpAuthorizationToString(\n  httpAuthorization?: HttpAuthorization\n): string | undefined {\n  return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link FileSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link FileSASPermissions}, or {@link ShareSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link FileSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage share or file path (only for {@link FileSASSignatureValues}).\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiresOn = expiresOn;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startsOn = startsOn;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation of the SAS\n * which can actually be applied to file urls. Note: that both this class and {@link SASQueryParameters} exist because\n * the former is mutable and a logical representation while the latter is immutable and used to generate actual REST\n * requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString()\n  ).toString();\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  const stringToSign = [\n    sharedKeyCredential.accountName,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.startsOn\n      ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n      : \"\",\n    truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n    accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n    accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n    version,\n    \"\" // Account SAS requires an additional newline character\n  ].join(\"\\n\");\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a file. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link FileSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class FileSASPermissions {\n  /**\n   * Creates a FileSASPermissions from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): FileSASPermissions {\n    const fileSASPermissions = new FileSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          fileSASPermissions.read = true;\n          break;\n        case \"c\":\n          fileSASPermissions.create = true;\n          break;\n        case \"w\":\n          fileSASPermissions.write = true;\n          break;\n        case \"d\":\n          fileSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return fileSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns A string which represents the FileSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a share.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link FileSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ShareSASPermissions {\n  /**\n   * Creates an {@link ShareSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ShareSASPermissions {\n    const shareSASPermissions = new ShareSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          shareSASPermissions.read = true;\n          break;\n        case \"c\":\n          shareSASPermissions.create = true;\n          break;\n        case \"w\":\n          shareSASPermissions.write = true;\n          break;\n        case \"d\":\n          shareSASPermissions.delete = true;\n          break;\n        case \"l\":\n          shareSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return shareSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { FileSASPermissions } from \"./FileSASPermissions\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { ShareSASPermissions } from \"./ShareSASPermissions\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * FileSASSignatureValues is used to help generating File service SAS tokens for shares or files.\n */\n\nexport interface FileSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ShareSASPermissions} or {@link FileSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   */\n  permissions?: FileSASPermissions | ShareSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the share the SAS user may access.\n   */\n  shareName: string;\n\n  /**\n   * Optional. The path of the file like, \"directory/FileName\" or \"FileName\".\n   */\n  filePath?: string;\n\n  /**\n   * Optional. The name of the access policy on the share this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param fileSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateFileSASQueryParameters(\n  fileSASSignatureValues: FileSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !fileSASSignatureValues.identifier &&\n    !(fileSASSignatureValues.permissions && fileSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for File SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = fileSASSignatureValues.version ? fileSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"s\";\n  if (fileSASSignatureValues.filePath) {\n    resource = \"f\";\n  }\n\n  let verifiedPermissions: string | undefined;\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (fileSASSignatureValues.permissions) {\n    if (fileSASSignatureValues.filePath) {\n      verifiedPermissions = FileSASPermissions.parse(\n        fileSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ShareSASPermissions.parse(\n        fileSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions,\n    fileSASSignatureValues.startsOn\n      ? truncatedISO8061Date(fileSASSignatureValues.startsOn, false)\n      : \"\",\n    fileSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(fileSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      fileSASSignatureValues.shareName,\n      fileSASSignatureValues.filePath\n    ),\n    fileSASSignatureValues.identifier,\n    fileSASSignatureValues.ipRange ? ipRangeToString(fileSASSignatureValues.ipRange) : \"\",\n    fileSASSignatureValues.protocol,\n    version,\n    fileSASSignatureValues.cacheControl,\n    fileSASSignatureValues.contentDisposition,\n    fileSASSignatureValues.contentEncoding,\n    fileSASSignatureValues.contentLanguage,\n    fileSASSignatureValues.contentType\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    fileSASSignatureValues.protocol,\n    fileSASSignatureValues.startsOn,\n    fileSASSignatureValues.expiresOn,\n    fileSASSignatureValues.ipRange,\n    fileSASSignatureValues.identifier,\n    resource,\n    fileSASSignatureValues.cacheControl,\n    fileSASSignatureValues.contentDisposition,\n    fileSASSignatureValues.contentEncoding,\n    fileSASSignatureValues.contentLanguage,\n    fileSASSignatureValues.contentType\n  );\n}\n\nfunction getCanonicalName(accountName: string, shareName: string, filePath?: string): string {\n  // Share: \"/file/account/sharename\"\n  // File:  \"/file/account/sharename/filename\"\n  // File:  \"/file/account/sharename/directoryname/filename\"\n  const elements: string[] = [`/file/${accountName}/${shareName}`];\n  if (filePath) {\n    elements.push(`/${filePath}`);\n  }\n  return elements.join(\"\");\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const FileServiceProperties: coreHttp.CompositeMapper = {\n  serializedName: \"FileServiceProperties\",\n  xmlName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"FileServiceProperties\",\n    modelProperties: {\n      hourMetrics: {\n        serializedName: \"HourMetrics\",\n        xmlName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        serializedName: \"MinuteMetrics\",\n        xmlName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        serializedName: \"Cors\",\n        xmlName: \"Cors\",\n        xmlIsWrapped: true,\n        xmlElementName: \"CorsRule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      },\n      protocol: {\n        serializedName: \"Protocol\",\n        xmlName: \"ProtocolSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ShareProtocolSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: coreHttp.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        required: true,\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        serializedName: \"IncludeAPIs\",\n        xmlName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        constraints: {\n          InclusiveMaximum: 365,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"Days\",\n        xmlName: \"Days\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreHttp.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"AllowedOrigins\",\n        required: true,\n        xmlName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        serializedName: \"AllowedMethods\",\n        required: true,\n        xmlName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        serializedName: \"AllowedHeaders\",\n        required: true,\n        xmlName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        serializedName: \"ExposedHeaders\",\n        required: true,\n        xmlName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"MaxAgeInSeconds\",\n        required: true,\n        xmlName: \"MaxAgeInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareProtocolSettings: coreHttp.CompositeMapper = {\n  serializedName: \"ShareProtocolSettings\",\n  xmlName: \"ProtocolSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareProtocolSettings\",\n    modelProperties: {\n      smb: {\n        serializedName: \"Smb\",\n        xmlName: \"SMB\",\n        type: {\n          name: \"Composite\",\n          className: \"ShareSmbSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSmbSettings: coreHttp.CompositeMapper = {\n  serializedName: \"ShareSmbSettings\",\n  xmlName: \"SMB\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSmbSettings\",\n    modelProperties: {\n      multichannel: {\n        serializedName: \"Multichannel\",\n        xmlName: \"Multichannel\",\n        type: {\n          name: \"Composite\",\n          className: \"SmbMultichannel\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmbMultichannel: coreHttp.CompositeMapper = {\n  serializedName: \"SmbMultichannel\",\n  xmlName: \"Multichannel\",\n  type: {\n    name: \"Composite\",\n    className: \"SmbMultichannel\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        serializedName: \"Message\",\n        xmlName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"Code\",\n        xmlName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListSharesResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListSharesResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListSharesResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      shareItems: {\n        serializedName: \"ShareItems\",\n        xmlName: \"Shares\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Share\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ShareItemInternal\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        required: true,\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareItemInternal: coreHttp.CompositeMapper = {\n  serializedName: \"ShareItemInternal\",\n  xmlName: \"Share\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareItemInternal\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      snapshot: {\n        serializedName: \"Snapshot\",\n        xmlName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SharePropertiesInternal\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const SharePropertiesInternal: coreHttp.CompositeMapper = {\n  serializedName: \"SharePropertiesInternal\",\n  type: {\n    name: \"Composite\",\n    className: \"SharePropertiesInternal\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quota: {\n        serializedName: \"Quota\",\n        required: true,\n        xmlName: \"Quota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIops: {\n        serializedName: \"ProvisionedIops\",\n        xmlName: \"ProvisionedIops\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIngressMBps: {\n        serializedName: \"ProvisionedIngressMBps\",\n        xmlName: \"ProvisionedIngressMBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedEgressMBps: {\n        serializedName: \"ProvisionedEgressMBps\",\n        xmlName: \"ProvisionedEgressMBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextAllowedQuotaDowngradeTime: {\n        serializedName: \"NextAllowedQuotaDowngradeTime\",\n        xmlName: \"NextAllowedQuotaDowngradeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      deletedTime: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        serializedName: \"AccessTier\",\n        xmlName: \"AccessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"AccessTierChangeTime\",\n        xmlName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      accessTierTransitionState: {\n        serializedName: \"AccessTierTransitionState\",\n        xmlName: \"AccessTierTransitionState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      enabledProtocols: {\n        serializedName: \"EnabledProtocols\",\n        xmlName: \"EnabledProtocols\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootSquash: {\n        serializedName: \"RootSquash\",\n        xmlName: \"RootSquash\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NoRootSquash\", \"RootSquash\", \"AllSquash\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SharePermission: coreHttp.CompositeMapper = {\n  serializedName: \"SharePermission\",\n  type: {\n    name: \"Composite\",\n    className: \"SharePermission\",\n    modelProperties: {\n      permission: {\n        serializedName: \"permission\",\n        required: true,\n        xmlName: \"permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreHttp.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        required: true,\n        xmlName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        serializedName: \"AccessPolicy\",\n        xmlName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        xmlName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"Permission\",\n        xmlName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareStats: coreHttp.CompositeMapper = {\n  serializedName: \"ShareStats\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareStats\",\n    modelProperties: {\n      shareUsageBytes: {\n        serializedName: \"ShareUsageBytes\",\n        required: true,\n        xmlName: \"ShareUsageBytes\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListFilesAndDirectoriesSegmentResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListFilesAndDirectoriesSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListFilesAndDirectoriesSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shareName: {\n        serializedName: \"ShareName\",\n        required: true,\n        xmlName: \"ShareName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shareSnapshot: {\n        serializedName: \"ShareSnapshot\",\n        xmlName: \"ShareSnapshot\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      directoryPath: {\n        serializedName: \"DirectoryPath\",\n        required: true,\n        xmlName: \"DirectoryPath\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        required: true,\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Entries\",\n        type: {\n          name: \"Composite\",\n          className: \"FilesAndDirectoriesListSegment\"\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        required: true,\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      directoryId: {\n        serializedName: \"DirectoryId\",\n        xmlName: \"DirectoryId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FilesAndDirectoriesListSegment: coreHttp.CompositeMapper = {\n  serializedName: \"FilesAndDirectoriesListSegment\",\n  xmlName: \"Entries\",\n  type: {\n    name: \"Composite\",\n    className: \"FilesAndDirectoriesListSegment\",\n    modelProperties: {\n      directoryItems: {\n        serializedName: \"DirectoryItems\",\n        required: true,\n        xmlName: \"DirectoryItems\",\n        xmlElementName: \"Directory\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DirectoryItem\"\n            }\n          }\n        }\n      },\n      fileItems: {\n        serializedName: \"FileItems\",\n        required: true,\n        xmlName: \"FileItems\",\n        xmlElementName: \"File\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryItem: coreHttp.CompositeMapper = {\n  serializedName: \"DirectoryItem\",\n  xmlName: \"Directory\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"FileId\",\n        xmlName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FileProperty\"\n        }\n      },\n      attributes: {\n        serializedName: \"Attributes\",\n        xmlName: \"Attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissionKey: {\n        serializedName: \"PermissionKey\",\n        xmlName: \"PermissionKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileProperty: coreHttp.CompositeMapper = {\n  serializedName: \"FileProperty\",\n  type: {\n    name: \"Composite\",\n    className: \"FileProperty\",\n    modelProperties: {\n      contentLength: {\n        serializedName: \"Content-Length\",\n        required: true,\n        xmlName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"CreationTime\",\n        xmlName: \"CreationTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastAccessTime: {\n        serializedName: \"LastAccessTime\",\n        xmlName: \"LastAccessTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastWriteTime: {\n        serializedName: \"LastWriteTime\",\n        xmlName: \"LastWriteTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      changeTime: {\n        serializedName: \"ChangeTime\",\n        xmlName: \"ChangeTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"Etag\",\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileItem: coreHttp.CompositeMapper = {\n  serializedName: \"FileItem\",\n  xmlName: \"File\",\n  type: {\n    name: \"Composite\",\n    className: \"FileItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"FileId\",\n        xmlName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FileProperty\"\n        }\n      },\n      attributes: {\n        serializedName: \"Attributes\",\n        xmlName: \"Attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissionKey: {\n        serializedName: \"PermissionKey\",\n        xmlName: \"PermissionKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListHandlesResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListHandlesResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListHandlesResponse\",\n    modelProperties: {\n      handleList: {\n        serializedName: \"HandleList\",\n        xmlName: \"Entries\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Handle\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HandleItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        required: true,\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HandleItem: coreHttp.CompositeMapper = {\n  serializedName: \"HandleItem\",\n  xmlName: \"Handle\",\n  type: {\n    name: \"Composite\",\n    className: \"HandleItem\",\n    modelProperties: {\n      handleId: {\n        serializedName: \"HandleId\",\n        required: true,\n        xmlName: \"HandleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"Path\",\n        required: true,\n        xmlName: \"Path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"FileId\",\n        required: true,\n        xmlName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parentId: {\n        serializedName: \"ParentId\",\n        xmlName: \"ParentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sessionId: {\n        serializedName: \"SessionId\",\n        required: true,\n        xmlName: \"SessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientIp: {\n        serializedName: \"ClientIp\",\n        required: true,\n        xmlName: \"ClientIp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      openTime: {\n        serializedName: \"OpenTime\",\n        required: true,\n        xmlName: \"OpenTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastReconnectTime: {\n        serializedName: \"LastReconnectTime\",\n        xmlName: \"LastReconnectTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareFileRangeList: coreHttp.CompositeMapper = {\n  serializedName: \"ShareFileRangeList\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareFileRangeList\",\n    modelProperties: {\n      ranges: {\n        serializedName: \"Ranges\",\n        xmlName: \"Ranges\",\n        xmlElementName: \"Range\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileRange\"\n            }\n          }\n        }\n      },\n      clearRanges: {\n        serializedName: \"ClearRanges\",\n        xmlName: \"ClearRanges\",\n        xmlElementName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FileRange: coreHttp.CompositeMapper = {\n  serializedName: \"FileRange\",\n  xmlName: \"Range\",\n  type: {\n    name: \"Composite\",\n    className: \"FileRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClearRange: coreHttp.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  xmlName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListSharesSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_listSharesSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListSharesSegmentHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListSharesSegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_listSharesSegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListSharesSegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      quota: {\n        serializedName: \"x-ms-share-quota\",\n        xmlName: \"x-ms-share-quota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIops: {\n        serializedName: \"x-ms-share-provisioned-iops\",\n        xmlName: \"x-ms-share-provisioned-iops\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIngressMBps: {\n        serializedName: \"x-ms-share-provisioned-ingress-mbps\",\n        xmlName: \"x-ms-share-provisioned-ingress-mbps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedEgressMBps: {\n        serializedName: \"x-ms-share-provisioned-egress-mbps\",\n        xmlName: \"x-ms-share-provisioned-egress-mbps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextAllowedQuotaDowngradeTime: {\n        serializedName: \"x-ms-share-next-allowed-quota-downgrade-time\",\n        xmlName: \"x-ms-share-next-allowed-quota-downgrade-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        xmlName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      accessTierTransitionState: {\n        serializedName: \"x-ms-access-tier-transition-state\",\n        xmlName: \"x-ms-access-tier-transition-state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledProtocols: {\n        serializedName: \"x-ms-enabled-protocols\",\n        xmlName: \"x-ms-enabled-protocols\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootSquash: {\n        serializedName: \"x-ms-root-squash\",\n        xmlName: \"x-ms-root-squash\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NoRootSquash\", \"RootSquash\", \"AllSquash\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareAcquireLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareReleaseLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareChangeLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRenewLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTimeInSeconds: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareBreakLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateSnapshotHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createSnapshotHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        xmlName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateSnapshotExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createSnapshotExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateSnapshotExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreatePermissionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createPermissionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreatePermissionHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreatePermissionExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createPermissionExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreatePermissionExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPermissionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPermissionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPermissionHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPermissionExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPermissionExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPermissionExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetPropertiesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetAccessPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getAccessPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetAccessPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetAccessPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setAccessPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetAccessPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetStatisticsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getStatisticsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetStatisticsHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetStatisticsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getStatisticsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetStatisticsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRestoreHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_restoreHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRestoreHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRestoreExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_restoreExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRestoreExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetPropertiesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListFilesAndDirectoriesSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listFilesAndDirectoriesSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListFilesAndDirectoriesSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListFilesAndDirectoriesSegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listFilesAndDirectoriesSegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListFilesAndDirectoriesSegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListHandlesHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryForceCloseHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_forceCloseHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryForceCloseHandlesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      marker: {\n        serializedName: \"x-ms-marker\",\n        xmlName: \"x-ms-marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfHandlesClosed: {\n        serializedName: \"x-ms-number-of-handles-closed\",\n        xmlName: \"x-ms-number-of-handles-closed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfHandlesFailedToClose: {\n        serializedName: \"x-ms-number-of-handles-failed\",\n        xmlName: \"x-ms-number-of-handles-failed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryForceCloseHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_forceCloseHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryForceCloseHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDownloadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_downloadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      fileContentMD5: {\n        serializedName: \"x-ms-content-md5\",\n        xmlName: \"x-ms-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDownloadExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_downloadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDownloadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      fileType: {\n        serializedName: \"x-ms-type\",\n        xmlName: \"x-ms-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetHttpHeadersHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setHttpHeadersHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetHttpHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetHttpHeadersExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setHttpHeadersExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetHttpHeadersExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAcquireLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileReleaseLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileChangeLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileBreakLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetRangeListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getRangeListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetRangeListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileContentLength: {\n        serializedName: \"x-ms-content-length\",\n        xmlName: \"x-ms-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetRangeListExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getRangeListExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetRangeListExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileStartCopyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_startCopyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileStartCopyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileStartCopyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_startCopyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileStartCopyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAbortCopyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_abortCopyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAbortCopyHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAbortCopyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_abortCopyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAbortCopyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileListHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_listHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileListHandlesHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileListHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_listHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileListHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileForceCloseHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_forceCloseHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileForceCloseHandlesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      marker: {\n        serializedName: \"x-ms-marker\",\n        xmlName: \"x-ms-marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfHandlesClosed: {\n        serializedName: \"x-ms-number-of-handles-closed\",\n        xmlName: \"x-ms-number-of-handles-closed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfHandlesFailedToClose: {\n        serializedName: \"x-ms-number-of-handles-failed\",\n        xmlName: \"x-ms-number-of-handles-failed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileForceCloseHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_forceCloseHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileForceCloseHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n  QueryCollectionFormat\n} from \"@azure/core-http\";\nimport {\n  FileServiceProperties as FileServicePropertiesMapper,\n  SharePermission as SharePermissionMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: FileServicePropertiesMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const url: OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    serializedName: \"url\",\n    required: true,\n    xmlName: \"url\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const restype: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"service\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"properties\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const timeoutInSeconds: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timeoutInSeconds\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    serializedName: \"timeout\",\n    xmlName: \"timeout\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const version: OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    defaultValue: \"2020-10-02\",\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp1: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"list\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    xmlName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const marker: OperationQueryParameter = {\n  parameterPath: [\"options\", \"marker\"],\n  mapper: {\n    serializedName: \"marker\",\n    xmlName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maxResults: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxResults\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"maxresults\",\n    xmlName: \"maxresults\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListSharesIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"snapshots\", \"metadata\", \"deleted\"]\n        }\n      }\n    }\n  },\n  collectionFormat: QueryCollectionFormat.Csv\n};\n\nexport const restype1: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"share\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const metadata: OperationParameter = {\n  parameterPath: [\"options\", \"metadata\"],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    xmlName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"String\" } }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\n\nexport const quota: OperationParameter = {\n  parameterPath: [\"options\", \"quota\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"x-ms-share-quota\",\n    xmlName: \"x-ms-share-quota\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const accessTier: OperationParameter = {\n  parameterPath: [\"options\", \"accessTier\"],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"TransactionOptimized\", \"Hot\", \"Cool\"]\n    }\n  }\n};\n\nexport const enabledProtocols: OperationParameter = {\n  parameterPath: [\"options\", \"enabledProtocols\"],\n  mapper: {\n    serializedName: \"x-ms-enabled-protocols\",\n    xmlName: \"x-ms-enabled-protocols\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const rootSquash: OperationParameter = {\n  parameterPath: [\"options\", \"rootSquash\"],\n  mapper: {\n    serializedName: \"x-ms-root-squash\",\n    xmlName: \"x-ms-root-squash\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"NoRootSquash\", \"RootSquash\", \"AllSquash\"]\n    }\n  }\n};\n\nexport const shareSnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"shareSnapshot\"],\n  mapper: {\n    serializedName: \"sharesnapshot\",\n    xmlName: \"sharesnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const leaseId: OperationParameter = {\n  parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deleteSnapshots: OperationParameter = {\n  parameterPath: [\"options\", \"deleteSnapshots\"],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    xmlName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"include\", \"include-leased\"]\n    }\n  }\n};\n\nexport const comp2: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"lease\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"acquire\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const duration: OperationParameter = {\n  parameterPath: [\"options\", \"duration\"],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    xmlName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const proposedLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"proposedLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    xmlName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action1: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"release\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const leaseId1: OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    required: true,\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action2: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"change\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action3: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"renew\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action4: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"break\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const breakPeriod: OperationParameter = {\n  parameterPath: [\"options\", \"breakPeriod\"],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    xmlName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const comp3: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"snapshot\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sharePermission: OperationParameter = {\n  parameterPath: \"sharePermission\",\n  mapper: SharePermissionMapper\n};\n\nexport const comp4: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"filepermission\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermissionKey: OperationParameter = {\n  parameterPath: \"filePermissionKey\",\n  mapper: {\n    serializedName: \"x-ms-file-permission-key\",\n    required: true,\n    xmlName: \"x-ms-file-permission-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp5: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"metadata\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp6: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"acl\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const shareAcl: OperationParameter = {\n  parameterPath: [\"options\", \"shareAcl\"],\n  mapper: {\n    serializedName: \"shareAcl\",\n    xmlName: \"SignedIdentifiers\",\n    xmlIsWrapped: true,\n    xmlElementName: \"SignedIdentifier\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"SignedIdentifier\"\n        }\n      }\n    }\n  }\n};\n\nexport const comp7: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"stats\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp8: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"undelete\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedShareName: OperationParameter = {\n  parameterPath: [\"options\", \"deletedShareName\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-share-name\",\n    xmlName: \"x-ms-deleted-share-name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedShareVersion: OperationParameter = {\n  parameterPath: [\"options\", \"deletedShareVersion\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-share-version\",\n    xmlName: \"x-ms-deleted-share-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const restype2: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"directory\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermission: OperationParameter = {\n  parameterPath: [\"options\", \"filePermission\"],\n  mapper: {\n    serializedName: \"x-ms-file-permission\",\n    xmlName: \"x-ms-file-permission\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermissionKey1: OperationParameter = {\n  parameterPath: [\"options\", \"filePermissionKey\"],\n  mapper: {\n    serializedName: \"x-ms-file-permission-key\",\n    xmlName: \"x-ms-file-permission-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileAttributes: OperationParameter = {\n  parameterPath: \"fileAttributes\",\n  mapper: {\n    serializedName: \"x-ms-file-attributes\",\n    required: true,\n    xmlName: \"x-ms-file-attributes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileCreatedOn: OperationParameter = {\n  parameterPath: \"fileCreatedOn\",\n  mapper: {\n    serializedName: \"x-ms-file-creation-time\",\n    required: true,\n    xmlName: \"x-ms-file-creation-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileLastWriteOn: OperationParameter = {\n  parameterPath: \"fileLastWriteOn\",\n  mapper: {\n    serializedName: \"x-ms-file-last-write-time\",\n    required: true,\n    xmlName: \"x-ms-file-last-write-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListFilesIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Timestamps\", \"Etag\", \"Attributes\", \"PermissionKey\"]\n        }\n      }\n    }\n  },\n  collectionFormat: QueryCollectionFormat.Csv\n};\n\nexport const includeExtendedInfo: OperationParameter = {\n  parameterPath: [\"options\", \"includeExtendedInfo\"],\n  mapper: {\n    serializedName: \"x-ms-file-extended-info\",\n    xmlName: \"x-ms-file-extended-info\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp9: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"listhandles\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recursive: OperationParameter = {\n  parameterPath: [\"options\", \"recursive\"],\n  mapper: {\n    serializedName: \"x-ms-recursive\",\n    xmlName: \"x-ms-recursive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp10: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"forceclosehandles\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const handleId: OperationParameter = {\n  parameterPath: \"handleId\",\n  mapper: {\n    serializedName: \"x-ms-handle-id\",\n    required: true,\n    xmlName: \"x-ms-handle-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentLength: OperationParameter = {\n  parameterPath: \"fileContentLength\",\n  mapper: {\n    serializedName: \"x-ms-content-length\",\n    required: true,\n    xmlName: \"x-ms-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const fileTypeConstant: OperationParameter = {\n  parameterPath: \"fileTypeConstant\",\n  mapper: {\n    defaultValue: \"file\",\n    isConstant: true,\n    serializedName: \"x-ms-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentType: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentType\"],\n  mapper: {\n    serializedName: \"x-ms-content-type\",\n    xmlName: \"x-ms-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentEncoding: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentEncoding\"],\n  mapper: {\n    serializedName: \"x-ms-content-encoding\",\n    xmlName: \"x-ms-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentLanguage: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentLanguage\"],\n  mapper: {\n    serializedName: \"x-ms-content-language\",\n    xmlName: \"x-ms-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileCacheControl: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileCacheControl\"],\n  mapper: {\n    serializedName: \"x-ms-cache-control\",\n    xmlName: \"x-ms-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-content-md5\",\n    xmlName: \"x-ms-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const fileContentDisposition: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentDisposition\"],\n  mapper: {\n    serializedName: \"x-ms-content-disposition\",\n    xmlName: \"x-ms-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const range: OperationParameter = {\n  parameterPath: [\"options\", \"range\"],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const rangeGetContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    xmlName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const fileContentLength1: OperationParameter = {\n  parameterPath: [\"options\", \"fileContentLength\"],\n  mapper: {\n    serializedName: \"x-ms-content-length\",\n    xmlName: \"x-ms-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/octet-stream\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: {\n    serializedName: \"body\",\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\n\nexport const accept3: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp11: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"range\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const range1: OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    serializedName: \"x-ms-range\",\n    required: true,\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileRangeWrite: OperationParameter = {\n  parameterPath: \"fileRangeWrite\",\n  mapper: {\n    defaultValue: \"update\",\n    serializedName: \"x-ms-write\",\n    required: true,\n    xmlName: \"x-ms-write\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"update\", \"clear\"]\n    }\n  }\n};\n\nexport const contentLength: OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    serializedName: \"Content-Length\",\n    required: true,\n    xmlName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const contentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"contentMD5\"],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    xmlName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const copySource: OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceRange: OperationParameter = {\n  parameterPath: [\"options\", \"sourceRange\"],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileRangeWriteFromUrl: OperationParameter = {\n  parameterPath: \"fileRangeWriteFromUrl\",\n  mapper: {\n    defaultValue: \"update\",\n    isConstant: true,\n    serializedName: \"x-ms-write\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    xmlName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const sourceIfMatchCrc64: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatchCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match-crc64\",\n    xmlName: \"x-ms-source-if-match-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const sourceIfNoneMatchCrc64: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatchCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match-crc64\",\n    xmlName: \"x-ms-source-if-none-match-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const copySourceAuthorization: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceAuthorization\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-authorization\",\n    xmlName: \"x-ms-copy-source-authorization\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp12: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rangelist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prevsharesnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prevsharesnapshot\"],\n  mapper: {\n    serializedName: \"prevsharesnapshot\",\n    xmlName: \"prevsharesnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermissionCopyMode: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"filePermissionCopyMode\"],\n  mapper: {\n    serializedName: \"x-ms-file-permission-copy-mode\",\n    xmlName: \"x-ms-file-permission-copy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"source\", \"override\"]\n    }\n  }\n};\n\nexport const ignoreReadOnly: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"ignoreReadOnly\"],\n  mapper: {\n    serializedName: \"x-ms-file-copy-ignore-read-only\",\n    xmlName: \"x-ms-file-copy-ignore-read-only\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const fileAttributes1: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"fileAttributes\"],\n  mapper: {\n    serializedName: \"x-ms-file-attributes\",\n    xmlName: \"x-ms-file-attributes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileCreationTime: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"fileCreationTime\"],\n  mapper: {\n    serializedName: \"x-ms-file-creation-time\",\n    xmlName: \"x-ms-file-creation-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileLastWriteTime: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"fileLastWriteTime\"],\n  mapper: {\n    serializedName: \"x-ms-file-last-write-time\",\n    xmlName: \"x-ms-file-last-write-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const setArchiveAttribute: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"setArchiveAttribute\"],\n  mapper: {\n    serializedName: \"x-ms-file-copy-set-archive\",\n    xmlName: \"x-ms-file-copy-set-archive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp13: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"copy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copyId: OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    serializedName: \"copyid\",\n    required: true,\n    xmlName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copyActionAbortConstant: OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    defaultValue: \"abort\",\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  FileServiceProperties,\n  ServiceSetPropertiesOptionalParams,\n  ServiceSetPropertiesResponse,\n  ServiceGetPropertiesOptionalParams,\n  ServiceGetPropertiesResponse,\n  ServiceListSharesSegmentOptionalParams,\n  ServiceListSharesSegmentResponse\n} from \"../models\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Service class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's File service endpoint, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param properties The StorageService properties.\n   * @param options The options parameters.\n   */\n  setProperties(\n    properties: FileServiceProperties,\n    options?: ServiceSetPropertiesOptionalParams\n  ): Promise<ServiceSetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      properties,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * Gets the properties of a storage account's File service, including properties for Storage Analytics\n   * metrics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ServiceGetPropertiesOptionalParams\n  ): Promise<ServiceGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * The List Shares Segment operation returns a list of the shares and share snapshots under the\n   * specified account.\n   * @param options The options parameters.\n   */\n  listSharesSegment(\n    options?: ServiceListSharesSegmentOptionalParams\n  ): Promise<ServiceListSharesSegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listSharesSegmentOperationSpec\n    ) as Promise<ServiceListSharesSegmentResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listSharesSegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSharesResponse,\n      headersMapper: Mappers.ServiceListSharesSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListSharesSegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.include\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  ShareCreateOptionalParams,\n  ShareCreateResponse,\n  ShareGetPropertiesOptionalParams,\n  ShareGetPropertiesResponse,\n  ShareDeleteOptionalParams,\n  ShareDeleteResponse,\n  ShareAcquireLeaseOptionalParams,\n  ShareAcquireLeaseResponse,\n  ShareReleaseLeaseOptionalParams,\n  ShareReleaseLeaseResponse,\n  ShareChangeLeaseOptionalParams,\n  ShareChangeLeaseResponse,\n  ShareRenewLeaseOptionalParams,\n  ShareRenewLeaseResponse,\n  ShareBreakLeaseOptionalParams,\n  ShareBreakLeaseResponse,\n  ShareCreateSnapshotOptionalParams,\n  ShareCreateSnapshotResponse,\n  SharePermission,\n  ShareCreatePermissionOptionalParams,\n  ShareCreatePermissionResponse,\n  ShareGetPermissionOptionalParams,\n  ShareGetPermissionResponse,\n  ShareSetPropertiesOptionalParams,\n  ShareSetPropertiesResponse,\n  ShareSetMetadataOptionalParams,\n  ShareSetMetadataResponse,\n  ShareGetAccessPolicyOptionalParams,\n  ShareGetAccessPolicyResponse,\n  ShareSetAccessPolicyOptionalParams,\n  ShareSetAccessPolicyResponse,\n  ShareGetStatisticsOptionalParams,\n  ShareGetStatisticsResponse,\n  ShareRestoreOptionalParams,\n  ShareRestoreResponse\n} from \"../models\";\n\n/** Class representing a Share. */\nexport class Share {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Share class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with the same name already exists, the\n   * operation fails.\n   * @param options The options parameters.\n   */\n  create(options?: ShareCreateOptionalParams): Promise<ShareCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<ShareCreateResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified share or share snapshot.\n   * The data returned does not include the share's list of files.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ShareGetPropertiesOptionalParams\n  ): Promise<ShareGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<ShareGetPropertiesResponse>;\n  }\n\n  /**\n   * Operation marks the specified share or share snapshot for deletion. The share or share snapshot and\n   * any files contained within it are later deleted during garbage collection.\n   * @param options The options parameters.\n   */\n  delete(options?: ShareDeleteOptionalParams): Promise<ShareDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<ShareDeleteResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: ShareAcquireLeaseOptionalParams\n  ): Promise<ShareAcquireLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      acquireLeaseOperationSpec\n    ) as Promise<ShareAcquireLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: ShareReleaseLeaseOptionalParams\n  ): Promise<ShareReleaseLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      releaseLeaseOperationSpec\n    ) as Promise<ShareReleaseLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    options?: ShareChangeLeaseOptionalParams\n  ): Promise<ShareChangeLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      changeLeaseOperationSpec\n    ) as Promise<ShareChangeLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: ShareRenewLeaseOptionalParams\n  ): Promise<ShareRenewLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renewLeaseOperationSpec\n    ) as Promise<ShareRenewLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: ShareBreakLeaseOptionalParams\n  ): Promise<ShareBreakLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      breakLeaseOperationSpec\n    ) as Promise<ShareBreakLeaseResponse>;\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   * @param options The options parameters.\n   */\n  createSnapshot(\n    options?: ShareCreateSnapshotOptionalParams\n  ): Promise<ShareCreateSnapshotResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createSnapshotOperationSpec\n    ) as Promise<ShareCreateSnapshotResponse>;\n  }\n\n  /**\n   * Create a permission (a security descriptor).\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param options The options parameters.\n   */\n  createPermission(\n    sharePermission: SharePermission,\n    options?: ShareCreatePermissionOptionalParams\n  ): Promise<ShareCreatePermissionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      sharePermission,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createPermissionOperationSpec\n    ) as Promise<ShareCreatePermissionResponse>;\n  }\n\n  /**\n   * Returns the permission (security descriptor) for a given key\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param options The options parameters.\n   */\n  getPermission(\n    filePermissionKey: string,\n    options?: ShareGetPermissionOptionalParams\n  ): Promise<ShareGetPermissionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      filePermissionKey,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPermissionOperationSpec\n    ) as Promise<ShareGetPermissionResponse>;\n  }\n\n  /**\n   * Sets properties for the specified share.\n   * @param options The options parameters.\n   */\n  setProperties(\n    options?: ShareSetPropertiesOptionalParams\n  ): Promise<ShareSetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<ShareSetPropertiesResponse>;\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: ShareSetMetadataOptionalParams\n  ): Promise<ShareSetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<ShareSetMetadataResponse>;\n  }\n\n  /**\n   * Returns information about stored access policies specified on the share.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    options?: ShareGetAccessPolicyOptionalParams\n  ): Promise<ShareGetAccessPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getAccessPolicyOperationSpec\n    ) as Promise<ShareGetAccessPolicyResponse>;\n  }\n\n  /**\n   * Sets a stored access policy for use with shared access signatures.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    options?: ShareSetAccessPolicyOptionalParams\n  ): Promise<ShareSetAccessPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setAccessPolicyOperationSpec\n    ) as Promise<ShareSetAccessPolicyResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   * @param options The options parameters.\n   */\n  getStatistics(\n    options?: ShareGetStatisticsOptionalParams\n  ): Promise<ShareGetStatisticsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getStatisticsOperationSpec\n    ) as Promise<ShareGetStatisticsResponse>;\n  }\n\n  /**\n   * Restores a previously deleted Share.\n   * @param options The options parameters.\n   */\n  restore(options?: ShareRestoreOptionalParams): Promise<ShareRestoreResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      restoreOperationSpec\n    ) as Promise<ShareRestoreResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype1],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.quota,\n    Parameters.accessTier,\n    Parameters.enabledProtocols,\n    Parameters.rootSquash\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ShareDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.deleteSnapshots\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareAcquireLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.requestId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareReleaseLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.leaseId1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareChangeLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.proposedLeaseId,\n    Parameters.requestId,\n    Parameters.leaseId1,\n    Parameters.action2\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareRenewLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.leaseId1,\n    Parameters.action3\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ShareBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareBreakLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.breakPeriod\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateSnapshotExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp3\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst createPermissionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreatePermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreatePermissionExceptionHeaders\n    }\n  },\n  requestBody: Parameters.sharePermission,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp4\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version\n  ],\n  isXML: false,\n  contentType: \"application/xml; charset=utf-8\",\n  serializer: xmlSerializer\n};\nconst getPermissionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharePermission,\n      headersMapper: Mappers.ShareGetPermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPermissionExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp4\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept2,\n    Parameters.filePermissionKey\n  ],\n  serializer\n};\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.quota,\n    Parameters.accessTier,\n    Parameters.rootSquash,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp5\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" }\n          }\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\"\n      },\n      headersMapper: Mappers.ShareGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetAccessPolicyExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp6\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetAccessPolicyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.shareAcl,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp6\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareStats,\n      headersMapper: Mappers.ShareGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetStatisticsExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp7\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst restoreOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareRestoreHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareRestoreExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp8\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.deletedShareName,\n    Parameters.deletedShareVersion\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  DirectoryCreateOptionalParams,\n  DirectoryCreateResponse,\n  DirectoryGetPropertiesOptionalParams,\n  DirectoryGetPropertiesResponse,\n  DirectoryDeleteOptionalParams,\n  DirectoryDeleteResponse,\n  DirectorySetPropertiesOptionalParams,\n  DirectorySetPropertiesResponse,\n  DirectorySetMetadataOptionalParams,\n  DirectorySetMetadataResponse,\n  DirectoryListFilesAndDirectoriesSegmentOptionalParams,\n  DirectoryListFilesAndDirectoriesSegmentResponse,\n  DirectoryListHandlesOptionalParams,\n  DirectoryListHandlesResponse,\n  DirectoryForceCloseHandlesOptionalParams,\n  DirectoryForceCloseHandlesResponse\n} from \"../models\";\n\n/** Class representing a Directory. */\nexport class Directory {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Directory class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  create(\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: DirectoryCreateOptionalParams\n  ): Promise<DirectoryCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<DirectoryCreateResponse>;\n  }\n\n  /**\n   * Returns all system properties for the specified directory, and can also be used to check the\n   * existence of a directory. The data returned does not include the files in the directory or any\n   * subdirectories.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: DirectoryGetPropertiesOptionalParams\n  ): Promise<DirectoryGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<DirectoryGetPropertiesResponse>;\n  }\n\n  /**\n   * Removes the specified empty directory. Note that the directory must be empty before it can be\n   * deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    options?: DirectoryDeleteOptionalParams\n  ): Promise<DirectoryDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<DirectoryDeleteResponse>;\n  }\n\n  /**\n   * Sets properties on the directory.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  setProperties(\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: DirectorySetPropertiesOptionalParams\n  ): Promise<DirectorySetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<DirectorySetPropertiesResponse>;\n  }\n\n  /**\n   * Updates user defined metadata for the specified directory.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: DirectorySetMetadataOptionalParams\n  ): Promise<DirectorySetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<DirectorySetMetadataResponse>;\n  }\n\n  /**\n   * Returns a list of files or directories under the specified share or directory. It lists the contents\n   * only for a single level of the directory hierarchy.\n   * @param options The options parameters.\n   */\n  listFilesAndDirectoriesSegment(\n    options?: DirectoryListFilesAndDirectoriesSegmentOptionalParams\n  ): Promise<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listFilesAndDirectoriesSegmentOperationSpec\n    ) as Promise<DirectoryListFilesAndDirectoriesSegmentResponse>;\n  }\n\n  /**\n   * Lists handles for directory.\n   * @param options The options parameters.\n   */\n  listHandles(\n    options?: DirectoryListHandlesOptionalParams\n  ): Promise<DirectoryListHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listHandlesOperationSpec\n    ) as Promise<DirectoryListHandlesResponse>;\n  }\n\n  /**\n   * Closes all handles open for given directory.\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is\n   *                 a wildcard that specifies all handles.\n   * @param options The options parameters.\n   */\n  forceCloseHandles(\n    handleId: string,\n    options?: DirectoryForceCloseHandlesOptionalParams\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      handleId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      forceCloseHandlesOperationSpec\n    ) as Promise<DirectoryForceCloseHandlesResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.DirectoryCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.shareSnapshot,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.DirectoryDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectorySetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectorySetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectorySetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectorySetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listFilesAndDirectoriesSegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListFilesAndDirectoriesSegmentResponse,\n      headersMapper: Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper:\n        Mappers.DirectoryListFilesAndDirectoriesSegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.shareSnapshot,\n    Parameters.restype2,\n    Parameters.include1\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.includeExtendedInfo\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListHandlesResponse,\n      headersMapper: Mappers.DirectoryListHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryListHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.shareSnapshot,\n    Parameters.comp9\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.recursive\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst forceCloseHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryForceCloseHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryForceCloseHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.shareSnapshot,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.recursive,\n    Parameters.handleId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  FileCreateOptionalParams,\n  FileCreateResponse,\n  FileDownloadOptionalParams,\n  FileDownloadResponse,\n  FileGetPropertiesOptionalParams,\n  FileGetPropertiesResponse,\n  FileDeleteOptionalParams,\n  FileDeleteResponse,\n  FileSetHttpHeadersOptionalParams,\n  FileSetHttpHeadersResponse,\n  FileSetMetadataOptionalParams,\n  FileSetMetadataResponse,\n  FileAcquireLeaseOptionalParams,\n  FileAcquireLeaseResponse,\n  FileReleaseLeaseOptionalParams,\n  FileReleaseLeaseResponse,\n  FileChangeLeaseOptionalParams,\n  FileChangeLeaseResponse,\n  FileBreakLeaseOptionalParams,\n  FileBreakLeaseResponse,\n  FileRangeWriteType,\n  FileUploadRangeOptionalParams,\n  FileUploadRangeResponse,\n  FileUploadRangeFromURLOptionalParams,\n  FileUploadRangeFromURLResponse,\n  FileGetRangeListOptionalParams,\n  FileGetRangeListResponse,\n  FileStartCopyOptionalParams,\n  FileStartCopyResponse,\n  FileAbortCopyOptionalParams,\n  FileAbortCopyResponse,\n  FileListHandlesOptionalParams,\n  FileListHandlesResponse,\n  FileForceCloseHandlesOptionalParams,\n  FileForceCloseHandlesResponse\n} from \"../models\";\n\n/** Class representing a File. */\nexport class File {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class File class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new file or replaces a file. Note it only initializes the file with no content.\n   * @param fileContentLength Specifies the maximum size for the file, up to 4 TB.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  create(\n    fileContentLength: number,\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: FileCreateOptionalParams\n  ): Promise<FileCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileContentLength,\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<FileCreateResponse>;\n  }\n\n  /**\n   * Reads or downloads a file from the system, including its metadata and properties.\n   * @param options The options parameters.\n   */\n  download(\n    options?: FileDownloadOptionalParams\n  ): Promise<FileDownloadResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      downloadOperationSpec\n    ) as Promise<FileDownloadResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties for the file. It\n   * does not return the content of the file.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: FileGetPropertiesOptionalParams\n  ): Promise<FileGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<FileGetPropertiesResponse>;\n  }\n\n  /**\n   * removes the file from the storage account.\n   * @param options The options parameters.\n   */\n  delete(options?: FileDeleteOptionalParams): Promise<FileDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<FileDeleteResponse>;\n  }\n\n  /**\n   * Sets HTTP headers on the file.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  setHttpHeaders(\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: FileSetHttpHeadersOptionalParams\n  ): Promise<FileSetHttpHeadersResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setHttpHeadersOperationSpec\n    ) as Promise<FileSetHttpHeadersResponse>;\n  }\n\n  /**\n   * Updates user-defined metadata for the specified file.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: FileSetMetadataOptionalParams\n  ): Promise<FileSetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<FileSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: FileAcquireLeaseOptionalParams\n  ): Promise<FileAcquireLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      acquireLeaseOperationSpec\n    ) as Promise<FileAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: FileReleaseLeaseOptionalParams\n  ): Promise<FileReleaseLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      releaseLeaseOperationSpec\n    ) as Promise<FileReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    options?: FileChangeLeaseOptionalParams\n  ): Promise<FileChangeLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      changeLeaseOperationSpec\n    ) as Promise<FileChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: FileBreakLeaseOptionalParams\n  ): Promise<FileBreakLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      breakLeaseOperationSpec\n    ) as Promise<FileBreakLeaseResponse>;\n  }\n\n  /**\n   * Upload a range of bytes to a file.\n   * @param range Specifies the range of bytes to be written. Both the start and end of the range must be\n   *              specified. For an update operation, the range can be up to 4 MB in size. For a clear operation, the\n   *              range can be up to the value of the file's full size. The File service accepts only a single byte\n   *              range for the Range and 'x-ms-range' headers, and the byte range must be specified in the following\n   *              format: bytes=startByte-endByte.\n   * @param fileRangeWrite Specify one of the following options: - Update: Writes the bytes specified by\n   *                       the request body into the specified range. The Range and Content-Length headers must match to\n   *                       perform the update. - Clear: Clears the specified range and releases the space used in storage for\n   *                       that range. To clear a range, set the Content-Length header to zero, and set the Range header to a\n   *                       value that indicates the range to clear, up to maximum file size.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When the\n   *                      x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param options The options parameters.\n   */\n  uploadRange(\n    range: string,\n    fileRangeWrite: FileRangeWriteType,\n    contentLength: number,\n    options?: FileUploadRangeOptionalParams\n  ): Promise<FileUploadRangeResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      range,\n      fileRangeWrite,\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadRangeOperationSpec\n    ) as Promise<FileUploadRangeResponse>;\n  }\n\n  /**\n   * Upload a range of bytes to a file where the contents are read from a URL.\n   * @param range Writes data to the specified byte range in the file.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file\n   *                   to another file within the same storage account, you may use Shared Key to authenticate the source\n   *                   file. If you are copying a file from another storage account, or if you are copying a blob from the\n   *                   same storage account or another storage account, then you must authenticate the source file or blob\n   *                   using a shared access signature. If the source is a public blob, no authentication is required to\n   *                   perform the copy operation. A file in a share snapshot can also be specified as a copy source.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When the\n   *                      x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param options The options parameters.\n   */\n  uploadRangeFromURL(\n    range: string,\n    copySource: string,\n    contentLength: number,\n    options?: FileUploadRangeFromURLOptionalParams\n  ): Promise<FileUploadRangeFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      range,\n      copySource,\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadRangeFromURLOperationSpec\n    ) as Promise<FileUploadRangeFromURLResponse>;\n  }\n\n  /**\n   * Returns the list of valid ranges for a file.\n   * @param options The options parameters.\n   */\n  getRangeList(\n    options?: FileGetRangeListOptionalParams\n  ): Promise<FileGetRangeListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getRangeListOperationSpec\n    ) as Promise<FileGetRangeListResponse>;\n  }\n\n  /**\n   * Copies a blob or file to a destination file within the storage account.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file\n   *                   to another file within the same storage account, you may use Shared Key to authenticate the source\n   *                   file. If you are copying a file from another storage account, or if you are copying a blob from the\n   *                   same storage account or another storage account, then you must authenticate the source file or blob\n   *                   using a shared access signature. If the source is a public blob, no authentication is required to\n   *                   perform the copy operation. A file in a share snapshot can also be specified as a copy source.\n   * @param options The options parameters.\n   */\n  startCopy(\n    copySource: string,\n    options?: FileStartCopyOptionalParams\n  ): Promise<FileStartCopyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copySource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      startCopyOperationSpec\n    ) as Promise<FileStartCopyResponse>;\n  }\n\n  /**\n   * Aborts a pending Copy File operation, and leaves a destination file with zero length and full\n   * metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy File\n   *               operation.\n   * @param options The options parameters.\n   */\n  abortCopy(\n    copyId: string,\n    options?: FileAbortCopyOptionalParams\n  ): Promise<FileAbortCopyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copyId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      abortCopyOperationSpec\n    ) as Promise<FileAbortCopyResponse>;\n  }\n\n  /**\n   * Lists handles for file\n   * @param options The options parameters.\n   */\n  listHandles(\n    options?: FileListHandlesOptionalParams\n  ): Promise<FileListHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listHandlesOperationSpec\n    ) as Promise<FileListHandlesResponse>;\n  }\n\n  /**\n   * Closes all handles open for given file\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is\n   *                 a wildcard that specifies all handles.\n   * @param options The options parameters.\n   */\n  forceCloseHandles(\n    handleId: string,\n    options?: FileForceCloseHandlesOptionalParams\n  ): Promise<FileForceCloseHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      handleId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      forceCloseHandlesOperationSpec\n    ) as Promise<FileForceCloseHandlesResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn,\n    Parameters.fileContentLength,\n    Parameters.fileTypeConstant,\n    Parameters.fileContentType,\n    Parameters.fileContentEncoding,\n    Parameters.fileContentLanguage,\n    Parameters.fileCacheControl,\n    Parameters.fileContentMD5,\n    Parameters.fileContentDisposition\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst downloadOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.FileDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.FileDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileDownloadExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.range,\n    Parameters.rangeGetContentMD5\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.shareSnapshot],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FileDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setHttpHeadersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSetHttpHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSetHttpHeadersExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn,\n    Parameters.fileContentType,\n    Parameters.fileContentEncoding,\n    Parameters.fileContentLanguage,\n    Parameters.fileCacheControl,\n    Parameters.fileContentMD5,\n    Parameters.fileContentDisposition,\n    Parameters.fileContentLength1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp5],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileAcquireLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.requestId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileReleaseLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.leaseId1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileChangeLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.proposedLeaseId,\n    Parameters.requestId,\n    Parameters.leaseId1,\n    Parameters.action2\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FileBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileBreakLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.requestId,\n    Parameters.action4\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst uploadRangeOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileUploadRangeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileUploadRangeExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.contentType1,\n    Parameters.accept3,\n    Parameters.range1,\n    Parameters.fileRangeWrite,\n    Parameters.contentLength,\n    Parameters.contentMD5\n  ],\n  contentType: \"application/octet-stream\",\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst uploadRangeFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileUploadRangeFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileUploadRangeFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.range1,\n    Parameters.contentLength,\n    Parameters.copySource,\n    Parameters.sourceRange,\n    Parameters.fileRangeWriteFromUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.sourceIfMatchCrc64,\n    Parameters.sourceIfNoneMatchCrc64,\n    Parameters.copySourceAuthorization\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getRangeListOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareFileRangeList,\n      headersMapper: Mappers.FileGetRangeListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileGetRangeListExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.shareSnapshot,\n    Parameters.comp12,\n    Parameters.prevsharesnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.range\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst startCopyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FileStartCopyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileStartCopyExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.copySource,\n    Parameters.filePermissionCopyMode,\n    Parameters.ignoreReadOnly,\n    Parameters.fileAttributes1,\n    Parameters.fileCreationTime,\n    Parameters.fileLastWriteTime,\n    Parameters.setArchiveAttribute\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst abortCopyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.FileAbortCopyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileAbortCopyExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp13,\n    Parameters.copyId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.copyActionAbortConstant\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListHandlesResponse,\n      headersMapper: Mappers.FileListHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileListHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.shareSnapshot,\n    Parameters.comp9\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst forceCloseHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileForceCloseHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileForceCloseHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.shareSnapshot,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.handleId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-file-share\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewStorageRetryPolicyFactory(\n  retryOptions?: StorageRetryOptions\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    }\n  };\n}\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED\n}\n\n// Default values of RetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  tryTimeoutInMs: undefined // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param retryOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @param request -\n   * @param response -\n   * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry = true; // File doesn't support secondary endpoint\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param response -\n   * @param err -\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\" // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    if (err?.code === \"PARSE_ERROR\" && err?.message.startsWith(`Error \"Error: Unclosed root tag`)) {\n      logger.info(\n        \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\"\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param abortSignal -\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Retry options interface.\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means that you accept our default timeout, 60s or 60 * 1000ms.\n   *\n   * NOTE: When transferring large amounts of data, the default TryTimeout will probably\n   * not be sufficient. You should override this value based on the bandwidth available to\n   * the host machine and proximity to the Storage service. A good starting point may be something\n   * like (60 seconds per MB of anticipated-payload-size)\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   */\n  readonly maxRetryDelayInMs?: number;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating StorageRetryPolicy objects.\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param retryOptions -\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param telemetry -\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param telemetry -\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.userAgentPrefix || \"\";\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storagefile/11.0.0\n      const libInfo = `azsdk-js-storagefile/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a {@link RequestPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DefaultHttpClient } from \"@azure/core-http\";\nimport { IHttpClient } from \"../Pipeline\";\n\nconst _defaultHttpClient = new DefaultHttpClient();\n\nexport function getCachedDefaultHttpClient(): IHttpClient {\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param _nextPolicy -\n   * @param _options -\n   */\n  public create(_nextPolicy: RequestPolicy, _options: RequestPolicyOptions): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * {@link AnonymousCredentialPolicy} objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  disableResponseDecompressionPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource,\n  proxyPolicy,\n  isNode,\n  tracingPolicy,\n  logPolicy,\n  ProxyOptions,\n  UserAgentOptions,\n  KeepAliveOptions,\n  keepAlivePolicy,\n  generateClientRequestIdPolicy\n} from \"@azure/core-http\";\n\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport {\n  StorageFileLoggingAllowedHeaderNames,\n  StorageFileLoggingAllowedQueryParameters\n} from \"./utils/constants\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  deserializationPolicy,\n  IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  WebResource,\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n};\n\n/**\n * Option interface for Pipeline constructor.\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies as reference before\n * implementing your customized Pipeline.\n */\nexport class Pipeline {\n  /**\n   * A list of chained request policy factories.\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param factories -\n   * @param options -\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    this.options = {\n      ...options,\n      httpClient: options.httpClient || getCachedDefaultHttpClient()\n    };\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories\n    };\n  }\n}\n\n/**\n * Option interface for {@link newPipeline} function.\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * Creates a new {@link Pipeline} object with {@link Credential} provided.\n *\n * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(\n  credential?: Credential,\n  pipelineOptions: StoragePipelineOptions = {}\n): Pipeline {\n  if (credential === undefined) {\n    credential = new AnonymousCredential();\n  }\n\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n  const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n  const factories: RequestPolicyFactory[] = [\n    tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n    keepAlivePolicy(pipelineOptions.keepAliveOptions),\n    telemetryPolicy,\n    generateClientRequestIdPolicy(),\n    new StorageBrowserPolicyFactory(),\n    new StorageRetryPolicyFactory(pipelineOptions.retryOptions), // Retry policy should be above any policy that throws retryable errors\n    deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n    logPolicy({\n      logger: logger.info,\n      allowedHeaderNames: StorageFileLoggingAllowedHeaderNames,\n      allowedQueryParameters: StorageFileLoggingAllowedQueryParameters\n    })\n  ];\n\n  if (isNode) {\n    // policies only available in Node.js runtime, not in browsers\n    factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n    factories.push(disableResponseDecompressionPolicy());\n  }\n  factories.push(credential);\n\n  return new Pipeline(factories, pipelineOptions);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to {@link StorageSharedKeyCredential} which generates StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param factory -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (request.body && typeof request.body === \"string\" && request.body.length > 0) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE)\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @param request -\n   * @param headerName -\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (Object.prototype.hasOwnProperty.call(queries, key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHmac } from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param accountName -\n   * @param accountKey -\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a {@link StorageSharedKeyCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param stringToSign -\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, RequestOptionsBase } from \"@azure/core-http\";\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.File\",\n  namespace: \"Microsoft.Storage\"\n});\n\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(\n  options?: OperationOptions\n): Pick<RequestOptionsBase, \"spanOptions\" | \"tracingContext\"> {\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (options?.tracingOptions as any)?.spanOptions,\n    tracingContext: options?.tracingOptions?.tracingContext\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-storage-file-share\";\nconst packageVersion = \"12.8.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n  fileRangeWriteFromUrl: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, share, directory or file that is the target of the\n   *            desired operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{url}\";\n\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2020-10-02\";\n    this.fileRangeWriteFromUrl = options.fileRangeWriteFromUrl || \"update\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { escapeURLPath, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { Credential } from \"./credentials/Credential\";\nimport { isNode } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a base client class for ServiceClient, ContainerClient and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: Pipeline;\n\n  /**\n   * Credential in the pipleline to authenticate requests to the service, such as AnonymousCredential, StorageSharedKeyCredential.\n   * Initialized to an AnonymousCredential if not able to retrieve it from the pipeline.\n   *\n   * @internal\n   */\n  protected readonly credential: Credential;\n\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url -\n   * @param pipeline -\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(this.url, {\n      version: SERVICE_VERSION,\n      ...pipeline.toServiceClientOptions()\n    });\n\n    // Remove the default content-type in generated code of StorageClientContext\n    const storageClientContext = this.storageClientContext as any;\n    if (storageClientContext.requestContentType) {\n      storageClientContext.requestContentType = undefined;\n    }\n\n    // Retrieve credential from the pipeline.\n    this.credential = new AnonymousCredential();\n    for (const factory of this.pipeline.factories) {\n      if (\n        (isNode && factory instanceof StorageSharedKeyCredential) ||\n        factory instanceof AnonymousCredential\n      ) {\n        this.credential = factory;\n        break;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the NTFS attributes to a file or directory.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file#file-system-attributes\n */\nexport class FileSystemAttributes {\n  /**\n   * Creates a FileSystemAttributes from the specified attributes string. This method will throw an\n   * Error if it encounters a string that does not correspond to a valid attributes.\n   *\n   * @param fileAttributes - The value of header x-ms-file-attributes.\n   */\n  public static parse(fileAttributes: string): FileSystemAttributes {\n    if (!fileAttributes) {\n      throw new RangeError(`Invalid fileAttributes: '${fileAttributes}'.`);\n    }\n\n    const fileSystemAttributes = new FileSystemAttributes();\n\n    const attributes = fileAttributes.trim().split(\"|\");\n\n    for (let str of attributes) {\n      str = str.trim();\n      switch (str) {\n        case \"ReadOnly\":\n          fileSystemAttributes.readonly = true;\n          break;\n        case \"Hidden\":\n          fileSystemAttributes.hidden = true;\n          break;\n        case \"System\":\n          fileSystemAttributes.system = true;\n          break;\n        case \"None\":\n          fileSystemAttributes.none = true;\n          break;\n        case \"Temporary\":\n          fileSystemAttributes.temporary = true;\n          break;\n        case \"Offline\":\n          fileSystemAttributes.offline = true;\n          break;\n        case \"Directory\":\n          fileSystemAttributes.directory = true;\n          break;\n        case \"Archive\":\n          fileSystemAttributes.archive = true;\n          break;\n        case \"NotContentIndexed\":\n          fileSystemAttributes.notContentIndexed = true;\n          break;\n        case \"NoScrubData\":\n          fileSystemAttributes.noScrubData = true;\n          break;\n        default:\n          throw new RangeError(`Invalid attribute: ${str}`);\n      }\n    }\n\n    return fileSystemAttributes;\n  }\n\n  /**\n   * Specifies a directory or file that is read-only.\n   */\n  public readonly: boolean = false;\n\n  /**\n   * Specifies a directory or file is hidden.\n   */\n  public hidden: boolean = false;\n\n  /**\n   * Specifies a directory or file that the operating system uses a part of, or uses exclusively.\n   */\n  public system: boolean = false;\n\n  /**\n   * Specifies a directory or file that does not have other attributes set. This attribute is valid only when used alone.\n   */\n  public none: boolean = false;\n\n  /**\n   * Specifies the handle identifies a directory.\n   */\n  public directory: boolean = false;\n\n  /**\n   * Specifies a directory or file is an archive. Applications typically use this attribute to mark files for backup or removal.\n   */\n  public archive: boolean = false;\n\n  /**\n   * Specifies if a file is temporary.\n   */\n  public temporary: boolean = false;\n\n  /**\n   * Specifies the data of a directory or file is not available immediately.\n   * This file system attribute is presented primarily to provide compatibility with Windows - Azure Files does not support with offline storage options.\n   */\n  public offline: boolean = false;\n\n  /**\n   * Specifies the directory or file is not to be indexed by the content indexing service.\n   */\n  public notContentIndexed: boolean = false;\n\n  /**\n   * Specifies the user data stream not to be read by the background data integrity scanner.\n   * This file system attribute is presented primarily to provide compatibility with Windows.\n   * Applicable to directory or file.\n   */\n  public noScrubData: boolean = false;\n\n  /**\n   * Converts the given attributes to a string.\n   *\n   * @returns A string which represents the FileSystemAttributes\n   */\n  public toString(): string {\n    const attributes: string[] = [];\n    if (this.readonly) {\n      attributes.push(\"ReadOnly\");\n    }\n    if (this.hidden) {\n      attributes.push(\"Hidden\");\n    }\n    if (this.system) {\n      attributes.push(\"System\");\n    }\n    if (this.none) {\n      attributes.push(\"None\");\n    }\n    if (this.temporary) {\n      attributes.push(\"Temporary\");\n    }\n    if (this.directory) {\n      attributes.push(\"Directory\");\n    }\n    if (this.archive) {\n      attributes.push(\"Archive\");\n    }\n    if (this.offline) {\n      attributes.push(\"Offline\");\n    }\n    if (this.notContentIndexed) {\n      attributes.push(\"NotContentIndexed\");\n    }\n    if (this.noScrubData) {\n      attributes.push(\"NoScrubData\");\n    }\n    return attributes.join(\"|\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport { TransferProgressEvent } from \"@azure/core-http\";\nimport { Readable } from \"stream\";\nimport { AbortSignal, AbortSignalLike } from \"@azure/abort-controller\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  abortSignal?: AbortSignalLike;\n  /**\n   * Max retry count (greater than or equal to 0), undefined or invalid value means no retry\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   */\n  doInjectErrorOnce?: boolean;\n}\n\nconst ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n */\nexport class RetriableReadableStream extends Readable {\n  private aborter: AbortSignalLike;\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n  private abortHandler = () => {\n    this.source.pause();\n    this.emit(\"error\", ABORT_ERROR);\n  };\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param source - The current ReadableStream returned from getter\n   * @param getter - A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param offset - Offset position in original data source to read\n   * @param count - How much data in original data source to read\n   * @param options -\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    super();\n    const aborter = options.abortSignal || AbortSignal.none;\n    this.aborter = aborter;\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.onProgress = options.onProgress;\n    this.options = options;\n\n    aborter.addEventListener(\"abort\", this.abortHandler);\n\n    this.setSourceDataHandler();\n    this.setSourceEndHandler();\n    this.setSourceErrorHandler();\n  }\n\n  public _read(): void {\n    if (!this.aborter.aborted) {\n      this.source.resume();\n    }\n  }\n\n  private setSourceDataHandler() {\n    this.source.on(\"data\", (data: Buffer) => {\n      if (this.options.doInjectErrorOnce) {\n        this.options.doInjectErrorOnce = undefined;\n        this.source.pause();\n        this.source.removeAllListeners(\"data\");\n        this.source.emit(\"end\");\n        return;\n      }\n\n      // console.log(\n      //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n      // );\n      this.offset += data.length;\n      if (this.onProgress) {\n        this.onProgress({ loadedBytes: this.offset - this.start });\n      }\n      if (!this.push(data)) {\n        this.source.pause();\n      }\n    });\n  }\n\n  private setSourceEndHandler() {\n    this.source.on(\"end\", () => {\n      // console.log(\n      //   `Source stream emits end, offset: ${\n      //     this.offset\n      //   }, dest end : ${this.end}`\n      // );\n      if (this.offset - 1 === this.end) {\n        this.aborter.removeEventListener(\"abort\", this.abortHandler);\n        this.push(null);\n      } else if (this.offset <= this.end) {\n        // console.log(\n        //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n        // );\n        if (this.retries < this.maxRetryRequests) {\n          this.retries += 1;\n          this.getter(this.offset)\n            .then((newSource) => {\n              this.source = newSource;\n              this.setSourceDataHandler();\n              this.setSourceEndHandler();\n              this.setSourceErrorHandler();\n              return;\n            })\n            .catch((error) => {\n              this.emit(\"error\", error);\n            });\n        } else {\n          this.emit(\n            \"error\",\n            new Error(\n              `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${this\n                .offset - 1}, data needed offset: ${this.end}, retries: ${\n                this.retries\n              }, max retries: ${this.maxRetryRequests}`\n            )\n          );\n        }\n      } else {\n        this.emit(\n          \"error\",\n          new Error(\n            `Data corruption failure: Received more data than original request, data needed offset is ${\n              this.end\n            }, received offset: ${this.offset - 1}`\n          )\n        );\n      }\n    });\n  }\n\n  private setSourceErrorHandler() {\n    this.source.on(\"error\", (error) => {\n      this.emit(\"error\", error);\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\nimport {\n  CopyStatusType,\n  FileDownloadHeaders,\n  FileDownloadResponseModel,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType\n} from \"./generatedModels\";\nimport { Metadata } from \"./models\";\nimport {\n  ReadableStreamGetter,\n  RetriableReadableStream,\n  RetriableReadableStreamOptions\n} from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * FileDownloadResponse implements the `FileDownloadResponseModel` interface, and in a Node.js runtime it will\n * automatically retry when its internal read stream unexpectedly ends. (This kind of unexpected end cannot\n * trigger retries defined in the pipeline retry policy.)\n *\n * The {@link readableStreamBody} stream will retry beneath the `ReadableStream` layer, so you can just use it as\n * a normal Node.js Readable stream.\n */\nexport class FileDownloadResponse implements FileDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returnes if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return this.originalResponse.copyCompletedOn;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * If the file has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole file's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get fileContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.fileContentMD5;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * Attributes set for the file.\n   *\n   * @readonly\n   */\n  public get fileAttributes(): string | undefined {\n    return this.originalResponse.fileAttributes;\n  }\n\n  /**\n   * Creation time for the file.\n   *\n   * @readonly\n   */\n  public get fileCreatedOn(): Date | undefined {\n    return this.originalResponse.fileCreatedOn;\n  }\n\n  /**\n   * Last write time for the file.\n   *\n   * @readonly\n   */\n  public get fileLastWriteOn(): Date | undefined {\n    return this.originalResponse.fileLastWriteOn;\n  }\n\n  /**\n   * Change time for the file.\n   *\n   * @readonly\n   */\n  public get fileChangeOn(): Date | undefined {\n    return this.originalResponse.fileChangeOn;\n  }\n\n  /**\n   * Key of the permission set for the file.\n   *\n   * @readonly\n   */\n  public get filePermissionKey(): string | undefined {\n    return this.originalResponse.filePermissionKey;\n  }\n\n  /**\n   * The fileId of the file.\n   *\n   * @readonly\n   */\n  public get fileId(): string | undefined {\n    return this.originalResponse.fileId;\n  }\n\n  /**\n   * The parent fileId of the file.\n   *\n   * @readonly\n   */\n  public get fileParentId(): string | undefined {\n    return this.originalResponse.fileParentId;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get contentAsBlob(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * When a file is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the file. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the file. Possible values include: 'locked', 'unlocked'\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.fileDownloadStream : undefined;\n  }\n\n  public get _response(): HttpResponse & {\n    parsedHeaders: FileDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: FileDownloadResponseModel;\n  private fileDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of FileDownloadResponse.\n   *\n   * @param originalResponse -\n   * @param getter -\n   * @param offset -\n   * @param count -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: FileDownloadResponseModel,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.fileDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Range for Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-file-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param range - A range of byte positions.\n * @returns The string representation for the byte range.\n */\nexport function rangeToString(range: Range): string {\n  if (range.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (range.count && range.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return range.count\n    ? `bytes=${range.offset}-${range.offset + range.count - 1}`\n    : `bytes=${range.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { logger } from \"./log\";\n\nexport interface Metadata {\n  [propertyName: string]: string;\n}\n\nexport interface FileHttpHeaders {\n  /**\n   * Optional. Sets the file's cache\n   * control. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileCacheControl?: string;\n  /**\n   * Optional. Sets the file's content type.\n   * If specified, this property is stored with the file and returned with a\n   * read request.\n   */\n  fileContentType?: string;\n  /**\n   * Optional. An MD5 hash of the file\n   * content. Note that this hash is not validated, as the hashes for the\n   * individual blocks were validated when each was uploaded.\n   */\n  fileContentMD5?: Uint8Array;\n  /**\n   * Optional. Sets the file's content\n   * encoding. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentEncoding?: string;\n  /**\n   * Optional. Set the file's content\n   * language. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentLanguage?: string;\n  /**\n   * Optional. Sets the file's\n   * Content-Disposition header.\n   */\n  fileContentDisposition?: string;\n}\n\n/**\n * Indicates inherit file permission from the parent directory.\n */\nexport type FilePermissionInheritType = \"inherit\";\n\n/**\n * Indicates keep existing file permission value unchanged.\n */\nexport type FilePermissionPreserveType = \"preserve\";\n\n/**\n * Indicates setting as the time of the request.\n */\nexport type TimeNowType = \"now\";\n\n/**\n * Indicates keep existing time value unchanged.\n */\nexport type TimePreserveType = \"preserve\";\n\n/**\n * Indicates keep existing file attributes unchanged.\n */\nexport type FileAttributesPreserveType = \"preserve\";\n\nexport interface FileAndDirectoryCreateCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, inherit will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  creationTime?: Date | TimeNowType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  lastWriteTime?: Date | TimeNowType;\n}\n\nexport interface FileAndDirectorySetPropertiesCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   * A value of preserve may be passed to keep the value unchanged.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, preserve will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType | FilePermissionPreserveType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes | FileAttributesPreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  creationTime?: Date | TimeNowType | TimePreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  lastWriteTime?: Date | TimeNowType | TimePreserveType;\n}\n\n/**\n * Close handles result information.\n */\nexport interface CloseHandlesInfo {\n  closedHandlesCount: number;\n  /**\n   * Contains count of number of handles that failed to close.\n   */\n  closeFailureCount?: number;\n}\n\n/**\n * Protocols to enable on the share. For now, only support SMB or NFS.\n */\nexport interface ShareProtocols {\n  /**\n   * The share can be accessed by SMBv3.0, SMBv2.1 and REST.\n   */\n  smbEnabled?: boolean;\n  /**\n   * The share can be accessed by NFSv4.1.\n   */\n  nfsEnabled?: boolean;\n}\n\n/**\n * Convert protocols from joined string to ShareProtocols.\n *\n * @param protocolsString -\n */\nexport function toShareProtocols(protocolsString?: string): ShareProtocols | undefined {\n  if (protocolsString === undefined) {\n    return undefined;\n  }\n\n  const protocolStrArray = protocolsString.split(\";\");\n  const protocols: ShareProtocols = {};\n  for (const protocol of protocolStrArray) {\n    if (protocol === \"SMB\") {\n      protocols.smbEnabled = true;\n    } else if (protocol === \"NFS\") {\n      protocols.nfsEnabled = true;\n    }\n  }\n  return protocols;\n}\n\n/**\n * Convert ShareProtocols to joined string.\n *\n * @param protocols -\n */\nexport function toShareProtocolsString(protocols: ShareProtocols = {}): string | undefined {\n  let protocolStr = undefined;\n\n  if (protocols.smbEnabled === true) {\n    protocolStr = \"SMB\";\n  }\n  if (protocols.nfsEnabled === true) {\n    logger.info(\n      `Using \"NFS\" in favor of \"SMB\" for the share protocol as currently they can't be supported at the same time.`\n    );\n    protocolStr = \"NFS\";\n  }\n  return protocolStr;\n}\n\nexport function validateFilePermissionOptions(\n  filePermission?: string,\n  filePermissionKey?: string\n): void {\n  if (filePermission && filePermissionKey) {\n    throw new RangeError(\"Only one of filePermission or filePermissionKey can be specified.\");\n  }\n}\n\nexport function validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(\n  options: FileAndDirectoryCreateCommonOptions\n): FileAndDirectoryCreateCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"now\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"now\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"inherit\";\n  }\n\n  return options;\n}\n\nexport function validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(\n  options: FileAndDirectorySetPropertiesCommonOptions\n): FileAndDirectorySetPropertiesCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"preserve\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"preserve\";\n  }\n\n  if (!options.fileAttributes) {\n    options.fileAttributes = \"preserve\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"preserve\";\n  }\n\n  return options;\n}\n\nexport function fileAttributesToString(\n  fileAttributes: FileSystemAttributes | FileAttributesPreserveType\n): string {\n  return fileAttributes instanceof FileSystemAttributes\n    ? fileAttributes.toString()\n    : fileAttributes;\n}\n\nexport function fileCreationTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\nexport function fileLastWriteTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n */\nenum BatchStates {\n  Good,\n  Error\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param concurrency -\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param operation -\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (buffer: Buffer, offset?: number) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS lesser than or equal to maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. Concurrency should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 lesser than concurrency lesser than or equal to maxBuffers)\n   */\n  private readonly concurrency: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   */\n  private encoding?: BufferEncoding;\n\n  /**\n   * How many buffers have been allocated.\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   */\n  private incoming: Buffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   */\n  private outgoing: Buffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param readable - A Node.js Readable stream\n   * @param bufferSize - Buffer size of every maintained buffer\n   * @param maxBuffers - How many buffers can be allocated\n   * @param outgoingHandler - An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param concurrency - Concurrency of executing outgoingHandlers (greater than 0)\n   * @param encoding - [Optional] Encoding of Readable stream when it's a string stream\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    concurrency: number,\n    encoding?: BufferEncoding\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (concurrency <= 0) {\n      throw new RangeError(`concurrency must be larger than 0, current is ${concurrency}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.concurrency = concurrency;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            this.outgoingHandler(this.shiftBufferFromUnresolvedDataArray(), this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @param data -\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   */\n  private shiftBufferFromUnresolvedDataArray(): Buffer {\n    if (this.unresolvedLength >= this.bufferSize) {\n      if (this.bufferSize === this.unresolvedDataArray[0].length) {\n        this.unresolvedLength -= this.bufferSize;\n        return this.unresolvedDataArray.shift()!;\n      }\n\n      // Lazy concat because Buffer.concat highly drops performance\n      let merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      const buffer = merged.slice(0, this.bufferSize);\n      merged = merged.slice(this.bufferSize);\n      this.unresolvedDataArray = [merged];\n      this.unresolvedLength -= buffer.length;\n      return buffer;\n    } else if (this.unresolvedLength > 0) {\n      const merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      this.unresolvedDataArray = [];\n      this.unresolvedLength = 0;\n      return merged;\n    } else {\n      return Buffer.allocUnsafe(0);\n    }\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @returns Return false when buffers in incoming are not enough, else true.\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: Buffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = Buffer.allocUnsafe(this.bufferSize);\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * concurrency reaches.\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: Buffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.concurrency) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @param buffer -\n   */\n  private async triggerOutgoingHandler(buffer: Buffer): Promise<any> {\n    const bufferLength = buffer.length;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(buffer, this.offset - bufferLength);\n    } catch (err) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @param buffer -\n   */\n  private reuseBuffer(buffer: Buffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as fs from \"fs\";\nimport * as util from \"util\";\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @param stream - A Node.js Readable stream\n * @param buffer - Buffer to be filled, length must greater than or equal to offset\n * @param offset - From which position in the buffer to be filled, inclusive\n * @param end - To which position in the buffer to be filled, exclusive\n * @param encoding - Encoding of the Readable stream\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: BufferEncoding\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n *\n * @param rs - The read stream.\n * @param file - Destination file path.\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    rs.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"close\", resolve);\n\n    rs.pipe(ws);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Promisified version of fs.stat().\n */\nexport const fsStat = util.promisify(fs.stat);\n\nexport const fsCreateReadStream = fs.createReadStream;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpRequestBody, HttpResponse, isNode, TransferProgressEvent } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  CopyFileSmbInfo,\n  DeleteSnapshotsOptionType,\n  DirectoryCreateResponse,\n  DirectoryDeleteResponse,\n  DirectoryGetPropertiesResponse,\n  DirectoryItem,\n  DirectoryListFilesAndDirectoriesSegmentResponse,\n  DirectoryListHandlesResponse,\n  DirectorySetMetadataResponse,\n  DirectorySetPropertiesResponse,\n  DirectoryForceCloseHandlesHeaders,\n  FileAbortCopyResponse,\n  FileCreateResponse,\n  FileDeleteResponse,\n  FileDownloadOptionalParams,\n  FileDownloadResponseModel,\n  FileForceCloseHandlesHeaders,\n  FileGetPropertiesResponse,\n  FileGetRangeListHeaders,\n  FileGetRangeListDiffResponse,\n  FileItem,\n  FileListHandlesResponse,\n  FileSetHTTPHeadersResponse,\n  FileSetMetadataResponse,\n  FileStartCopyResponse,\n  FileUploadRangeFromURLResponse,\n  FileUploadRangeResponse,\n  HandleItem,\n  LeaseAccessConditions,\n  RangeModel,\n  ShareCreatePermissionResponse,\n  ShareCreateResponse,\n  ShareCreateSnapshotResponse,\n  ShareDeleteResponse,\n  ShareGetAccessPolicyHeaders,\n  ShareGetPermissionResponse,\n  ShareGetPropertiesResponseModel,\n  ShareGetStatisticsResponseModel,\n  ShareSetAccessPolicyResponse,\n  ShareSetMetadataResponse,\n  ShareSetQuotaResponse,\n  SignedIdentifierModel,\n  SourceModifiedAccessConditions,\n  ShareAccessTier,\n  ShareSetPropertiesResponse,\n  ShareRootSquash\n} from \"./generatedModels\";\nimport { Share, Directory, File } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport {\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  DEFAULT_HIGH_LEVEL_CONCURRENCY,\n  FILE_MAX_SIZE_BYTES,\n  FILE_RANGE_MAX_SIZE_BYTES,\n  URLConstants\n} from \"./utils/constants\";\nimport {\n  appendToURLPath,\n  setURLParameter,\n  truncatedISO8061Date,\n  extractConnectionStringParts,\n  getShareNameAndPathFromUrl,\n  appendToURLQuery,\n  httpAuthorizationToString\n} from \"./utils/utils.common\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { FileDownloadResponse } from \"./FileDownloadResponse\";\nimport { Range, rangeToString } from \"./Range\";\nimport {\n  CloseHandlesInfo,\n  FileAndDirectoryCreateCommonOptions,\n  FileAndDirectorySetPropertiesCommonOptions,\n  fileAttributesToString,\n  fileCreationTimeToString,\n  FileHttpHeaders,\n  fileLastWriteTimeToString,\n  Metadata,\n  validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions,\n  validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions,\n  ShareProtocols,\n  toShareProtocolsString,\n  toShareProtocols,\n  HttpAuthorization\n} from \"./models\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport { Readable } from \"stream\";\nimport {\n  fsStat,\n  fsCreateReadStream,\n  readStreamToLocalFile,\n  streamToBuffer\n} from \"./utils/utils.node\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { generateUuid } from \"@azure/core-http\";\nimport { generateFileSASQueryParameters } from \"./FileSASSignatureValues\";\nimport { ShareSASPermissions } from \"./ShareSASPermissions\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SasIPRange } from \"./SasIPRange\";\nimport { FileSASPermissions } from \"./FileSASPermissions\";\nimport { ListFilesIncludeType } from \"./generated/src\";\n\n/**\n * Options to configure the {@link ShareClient.create} operation.\n */\nexport interface ShareCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A name-value pair to associate with a file storage object.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Specifies the maximum size of the share, in\n   * gigabytes.\n   */\n  quota?: number;\n\n  /**\n   * Specifies the access tier of the share. Possible values include: 'TransactionOptimized',\n   * 'Hot', 'Cool'\n   */\n  accessTier?: ShareAccessTier;\n\n  /**\n   * Supported in version 2020-02-10 and above. Specifies the enabled protocols on the share. If not specified, the default is SMB.\n   */\n  protocols?: ShareProtocols;\n  /**\n   * Root squash to set on the share.  Only valid for NFS shares. Possible values include:\n   * 'NoRootSquash', 'RootSquash', 'AllSquash'.\n   */\n  rootSquash?: ShareRootSquash;\n}\n\n/**\n * Options to configure the {@link ShareClient.delete} operation.\n */\nexport interface ShareDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the option\n   * include to delete the base share and all of its snapshots. Possible values\n   * include: 'include'\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setMetadata} operation.\n */\nexport interface ShareSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setAccessPolicy} operation.\n */\nexport interface ShareSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.getAccessPolicy} operation.\n */\nexport interface ShareGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.exists} operation.\n */\nexport interface ShareExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.getProperties} operation.\n */\nexport interface ShareGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setQuota} operation.\n */\nexport interface ShareSetQuotaOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setProperties} operation.\n */\nexport interface ShareSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Specifies the access tier of the share. Possible values include: 'TransactionOptimized',\n   * 'Hot', 'Cool'.\n   */\n  accessTier?: ShareAccessTier;\n\n  /**\n   * Specifies the maximum size of the share, in gigabytes.\n   */\n  quotaInGB?: number;\n\n  /**\n   * Root squash to set on the share.  Only valid for NFS shares. Possible values include:\n   * 'NoRootSquash', 'RootSquash', 'AllSquash'.\n   */\n  rootSquash?: ShareRootSquash;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.getStatistics} operation.\n */\nexport interface ShareGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed Identifier\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  /**\n   * Access Policy\n   */\n  accessPolicy: {\n    /**\n     * the date-time the policy is active.\n     */\n    startsOn: Date;\n    /**\n     * the date-time the policy expires.\n     */\n    expiresOn: Date;\n    /**\n     * the permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl\n     */\n    permissions: string;\n  };\n}\n\nexport declare type ShareGetAccessPolicyResponse = {\n  signedIdentifiers: SignedIdentifier[];\n} & ShareGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ShareGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifierModel[];\n    };\n  };\n\n/**\n * Options to configure the {@link ShareClient.createSnapshot} operation.\n */\nexport interface ShareCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A name-value pair to associate with a file storage object.\n   */\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * Options to configure the {@link ShareClient.createPermission} operation.\n */\nexport interface ShareCreatePermissionOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n/**\n * Options to configure the {@link ShareClient.getPermission} operation.\n */\nexport interface ShareGetPermissionOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Response data for the {@link ShareClient.getStatistics} Operation.\n */\nexport type ShareGetStatisticsResponse = ShareGetStatisticsResponseModel & {\n  /**\n   * @deprecated shareUsage is going to be deprecated. Please use ShareUsageBytes instead.\n   *\n   * The approximate size of the data stored on the share, rounded up to the nearest gigabyte. Note\n   * that this value may not include all recently created or recently resized files.\n   */\n  shareUsage: number;\n};\n\n/**\n * Contains response data for the {@link ShareClient.createIfNotExists} operation.\n */\nexport interface ShareCreateIfNotExistsResponse extends ShareCreateResponse {\n  /**\n   * Indicate whether the share is successfully created. Is false when the share is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ShareClient.deleteIfExists} operation.\n */\nexport interface ShareDeleteIfExistsResponse extends ShareDeleteResponse {\n  /**\n   * Indicate whether the share is successfully deleted. Is false if the share does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ShareClient.getProperties} operation.\n */\nexport type ShareGetPropertiesResponse = ShareGetPropertiesResponseModel & {\n  /**\n   * The protocols that have been enabled on the share.\n   */\n  protocols?: ShareProtocols;\n};\n\n/**\n * Common options of the {@link ShareGenerateSasUrlOptions} and {@link FileGenerateSasUrlOptions}.\n */\nexport interface CommonGenerateSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * Optional. The name of the access policy on the share this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * Options to configure {@link ShareClient.generateSasUrl} operation.\n */\nexport interface ShareGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: ShareSASPermissions;\n}\n\n/**\n * A ShareClient represents a URL to the Azure Storage share allowing you to manipulate its directories and files.\n */\nexport class ShareClient extends StorageClient {\n  /**\n   * Share operation context provided by protocol layer.\n   */\n  private context: Share;\n\n  private _name: string;\n\n  /**\n   * The name of the share\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param name - Share name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(connectionString: string, name: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file share, such as\n   *                     \"https://myaccount.file.core.windows.net/share\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/share?sasString\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file share, such as\n   *                     \"https://myaccount.file.core.windows.net/share\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/share?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrShareName?: Credential | Pipeline | string,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    let url: string;\n    if (credentialOrPipelineOrShareName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrShareName;\n    } else if (credentialOrPipelineOrShareName instanceof Credential) {\n      // (url: string, credential?: Credential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrShareName, options);\n    } else if (\n      !credentialOrPipelineOrShareName &&\n      typeof credentialOrPipelineOrShareName !== \"string\"\n    ) {\n      // (url: string, credential?: Credential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrShareName &&\n      typeof credentialOrPipelineOrShareName === \"string\"\n    ) {\n      // (connectionString: string, name: string, options?: StoragePipelineOptions)\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      const name = credentialOrPipelineOrShareName;\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(extractedCreds.url, name);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url = appendToURLPath(extractedCreds.url, name) + \"?\" + extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for name parameter\");\n    }\n    super(url, pipeline);\n    this._name = getShareNameAndPathFromUrl(this.url).shareName;\n    this.context = new Share(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ShareClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base share.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new ShareClient object identical to the source but with the specified snapshot timestamp\n   */\n  public withSnapshot(snapshot: string): ShareClient {\n    return new ShareClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SHARE_SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-share\n   *\n   * @param options - Options to Share Create operation.\n   * @returns Response data for the Share Create operation.\n   */\n  public async create(options: ShareCreateOptions = {}): Promise<ShareCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-create\", options);\n    try {\n      return await this.context.create({\n        ...options,\n        enabledProtocols: toShareProtocolsString(options.protocols),\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with\n   * the same name already exists, it is not changed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-share\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: ShareCreateOptions = {}\n  ): Promise<ShareCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createIfNotExists\", options);\n    try {\n      const res = await this.create(updatedOptions);\n      return {\n        succeeded: true,\n        ...res\n      };\n    } catch (e) {\n      if (e.details?.errorCode === \"ShareAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when creating a share only if it doesn't already exist.\"\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link ShareDirectoryClient} object.\n   *\n   * @param directoryName - A directory name\n   * @returns The ShareDirectoryClient object for the given directory name.\n   */\n\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-subclients */\n  public getDirectoryClient(directoryName: string): ShareDirectoryClient {\n    return new ShareDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(directoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Gets the directory client for the root directory of this share.\n   * Note that the root directory always exists and cannot be deleted.\n   *\n   * @readonly A new ShareDirectoryClient object for the root directory.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-subclients */\n  public get rootDirectoryClient(): ShareDirectoryClient {\n    return this.getDirectoryClient(\"\");\n  }\n\n  /**\n   * Creates a new subdirectory under this share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Create operation.\n   * @returns Directory creation response data and the corresponding directory client.\n   */\n  public async createDirectory(\n    directoryName: string,\n    options: DirectoryCreateOptions = {}\n  ): Promise<{\n    directoryClient: ShareDirectoryClient;\n    directoryCreateResponse: DirectoryCreateResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createDirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      const directoryCreateResponse = await directoryClient.create(updatedOptions);\n      return {\n        directoryClient,\n        directoryCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty sub directory under this share.\n   * Note that the directory must be empty before it can be deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Delete operation.\n   * @returns Directory deletion response data.\n   */\n  public async deleteDirectory(\n    directoryName: string,\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-deleteDirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      return await directoryClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new file or replaces a file under the root directory of this share.\n   * Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param fileName -\n   * @param size - Specifies the maximum size in bytes for the file, up to 4 TB.\n   * @param options - Options to File Create operation.\n   * @returns File creation response data and the corresponding file client.\n   */\n  public async createFile(\n    fileName: string,\n    size: number,\n    options: FileCreateOptions = {}\n  ): Promise<{ fileClient: ShareFileClient; fileCreateResponse: FileCreateResponse }> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createFile\", options);\n    try {\n      const directoryClient = this.rootDirectoryClient;\n      const fileClient = directoryClient.getFileClient(fileName);\n      const fileCreateResponse = await fileClient.create(size, updatedOptions);\n      return {\n        fileClient,\n        fileCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes a file under the root directory of this share from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code `SharingViolation`\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400\n   * (`InvalidQueryParameterValue`)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param directoryName -\n   * @param fileName -\n   * @param options - Options to File Delete operation.\n   * @returns Promise<FileDeleteResponse> File Delete response data.\n   */\n  public async deleteFile(\n    fileName: string,\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-deleteFile\", options);\n    try {\n      const directoryClient = this.rootDirectoryClient;\n      const fileClient = directoryClient.getFileClient(fileName);\n      return await fileClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the Azrue share resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing share might be deleted by other clients or\n   * applications. Vice versa new shares might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: ShareExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-exists\", options);\n    try {\n      await this.getProperties(updatedOptions);\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking share existence\"\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listShares` method of {@link ShareServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @returns Response data for the Share Get Properties operation.\n   */\n  public async getProperties(\n    options: ShareGetPropertiesOptions = {}\n  ): Promise<ShareGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getProperties\", options);\n    try {\n      const res = await this.context.getProperties({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      // parse protocols\n      const protocols = toShareProtocols(res.enabledProtocols);\n      (res as any).protocols = protocols;\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified share for deletion. The share and any directories or files\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share\n   *\n   * @param options - Options to Share Delete operation.\n   * @returns Response data for the Share Delete operation.\n   */\n  public async delete(options: ShareDeleteMethodOptions = {}): Promise<ShareDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-delete\", options);\n    try {\n      return await this.context.delete({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified share for deletion if it exists. The share and any directories or files\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share\n   *\n   * @param options -\n   */\n  public async deleteIfExists(\n    options: ShareDeleteMethodOptions = {}\n  ): Promise<ShareDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res\n      };\n    } catch (e) {\n      if (e.details?.errorCode === \"ShareNotFound\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a share only if it exists.\"\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   *\n   * If no option provided, or no metadata defined in the option parameter, the share\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-metadata\n   *\n   * @param metadata - If no metadata provided, all existing directory metadata will be removed.\n   * @param option - Options to Share Set Metadata operation.\n   * @returns Response data for the Share Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ShareSetMetadataOptions = {}\n  ): Promise<ShareSetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setMetadata\", options);\n    try {\n      return await this.context.setMetadata({\n        ...options,\n        metadata,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the permissions for the specified share. The permissions indicate\n   * whether share data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-acl\n   *\n   * @param option - Options to Share Get Access Policy operation.\n   * @returns Response data for the Share Get Access Policy operation.\n   */\n  public async getAccessPolicy(\n    options: ShareGetAccessPolicyOptions = {}\n  ): Promise<ShareGetAccessPolicyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getAccessPolicy\", options);\n    try {\n      const response = await this.context.getAccessPolicy({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      const res: ShareGetAccessPolicyResponse = {\n        _response: response._response,\n        date: response.date,\n        etag: response.etag,\n        lastModified: response.lastModified,\n        requestId: response.requestId,\n        signedIdentifiers: [],\n        version: response.version\n      };\n\n      for (const identifier of response) {\n        let accessPolicy: any = undefined;\n        if (identifier.accessPolicy) {\n          accessPolicy = {\n            permissions: identifier.accessPolicy.permissions\n          };\n\n          if (identifier.accessPolicy.expiresOn) {\n            accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n          }\n\n          if (identifier.accessPolicy.startsOn) {\n            accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n          }\n        }\n\n        res.signedIdentifiers.push({\n          accessPolicy,\n          id: identifier.id\n        });\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the permissions for the specified share. The permissions indicate\n   * whether directories or files in a share may be accessed publicly.\n   *\n   * When you set permissions for a share, the existing permissions are replaced.\n   * If no shareAcl provided, the existing share ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a share, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl\n   *\n   * @param shareAcl - Array of signed identifiers, each having a unique Id and details of access policy.\n   * @param option - Options to Share Set Access Policy operation.\n   * @returns Response data for the Share Set Access Policy operation.\n   */\n  public async setAccessPolicy(\n    shareAcl?: SignedIdentifier[],\n    options: ShareSetAccessPolicyOptions = {}\n  ): Promise<ShareSetAccessPolicyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setAccessPolicy\", options);\n    try {\n      const acl: SignedIdentifierModel[] = [];\n      for (const identifier of shareAcl || []) {\n        acl.push({\n          accessPolicy: {\n            expiresOn: identifier.accessPolicy?.expiresOn\n              ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n              : undefined,\n            permissions: identifier.accessPolicy?.permissions,\n            startsOn: identifier.accessPolicy?.startsOn\n              ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n              : undefined\n          },\n          id: identifier.id\n        });\n      }\n\n      return await this.context.setAccessPolicy({\n        ...options,\n        shareAcl: acl,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   *\n   * @param options - Options to Share Create Snapshot operation.\n   * @returns Response data for the Share Create Snapshot operation.\n   */\n  public async createSnapshot(\n    options: ShareCreateSnapshotOptions = {}\n  ): Promise<ShareCreateSnapshotResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createSnapshot\", options);\n    try {\n      return await this.context.createSnapshot({\n        abortSignal: options.abortSignal,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets quota for the specified share.\n   *\n   * @deprecated Use {@link ShareClient.setProperties} instead.\n   *\n   * @param quotaInGB - Specifies the maximum size of the share in gigabytes\n   * @param option - Options to Share Set Quota operation.\n   * @returns Response data for the Share Get Quota operation.\n   */\n  public async setQuota(\n    quotaInGB: number,\n    options: ShareSetQuotaOptions = {}\n  ): Promise<ShareSetQuotaResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setQuota\", options);\n    try {\n      return await this.context.setProperties({\n        ...options,\n        quota: quotaInGB,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties of the share.\n   *\n   * @param option - Options to Share Set Properties operation.\n   * @returns Response data for the Share Set Properties operation.\n   */\n  public async setProperties(\n    options: ShareSetPropertiesOptions = {}\n  ): Promise<ShareSetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setProperties\", options);\n    try {\n      return await this.context.setProperties({\n        ...options,\n        quota: options.quotaInGB,\n        tracingOptions: updatedOptions.tracingOptions\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   *\n   * @param option - Options to Share Get Statistics operation.\n   * @returns Response data for the Share Get Statistics operation.\n   */\n  public async getStatistics(\n    options: ShareGetStatisticsOptions = {}\n  ): Promise<ShareGetStatisticsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getStatistics\", options);\n    try {\n      const response = await this.context.getStatistics({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      const GBBytes = 1024 * 1024 * 1024;\n      return { ...response, shareUsage: Math.ceil(response.shareUsageBytes / GBBytes) };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a file permission (a security descriptor) at the share level.\n   * The created security descriptor can be used for the files/directories in the share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-permission\n   *\n   * @param options - Options to Share Create Permission operation.\n   * @param filePermission - File permission described in the SDDL\n   */\n  public async createPermission(\n    filePermission: string,\n    options: ShareCreatePermissionOptions = {}\n  ): Promise<ShareCreatePermissionResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createPermission\", options);\n    try {\n      return await this.context.createPermission(\n        {\n          permission: filePermission\n        },\n        {\n          abortSignal: options.abortSignal,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the Security Descriptor Definition Language (SDDL) for a given file permission key\n   * which indicates a security descriptor.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-permission\n   *\n   * @param options - Options to Share Create Permission operation.\n   * @param filePermissionKey - File permission key which indicates the security descriptor of the permission.\n   */\n  public async getPermission(\n    filePermissionKey: string,\n    options: ShareGetPermissionOptions = {}\n  ): Promise<ShareGetPermissionResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getPermission\", options);\n    try {\n      return await this.context.getPermission(filePermissionKey, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Only available for ShareClient constructed with a shared key credential.\n   *\n   * Generates a Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: ShareGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    const sas = generateFileSASQueryParameters(\n      {\n        shareName: this.name,\n        ...options\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n\n/**\n * Options to configure {@link ShareDirectoryClient.create} operation.\n */\nexport interface DirectoryCreateOptions extends FileAndDirectoryCreateCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   */\n  metadata?: Metadata;\n}\n\nexport interface DirectoryProperties\n  extends FileAndDirectorySetPropertiesCommonOptions,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure Directory - List Files and Directories Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.iterateFilesAndDirectoriesSegments}\n * - {@link ShareDirectoryClient.listFilesAndDirectoriesItems}\n * - {@link ShareDirectoryClient.listFilesAndDirectoriesSegment}\n */\ninterface DirectoryListFilesAndDirectoriesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies the maximum number of entries to\n   * return. If the request does not specify maxResults, or specifies a value\n   * greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxResults?: number;\n  /** Include this parameter to specify one or more datasets to include in the response. */\n  include?: ListFilesIncludeType[];\n  /**\n   * Optional. Specified that extended info should be included in the returned {@link FileItem} or {@link DirectoryItem}.\n   * If true, the Content-Length property will be up-to-date, FileId will be returned in response.\n   */\n  includeExtendedInfo?: boolean;\n}\n\n/**\n * Options to configure {@link ShareDirectoryClient.listFilesAndDirectories} operation.\n */\nexport interface DirectoryListFilesAndDirectoriesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n  /*\n   * Optional. Specified that time stamps should be included in the response.\n   */\n  includeTimestamps?: boolean;\n  /*\n   * Optional. Specified that ETag should be included in the response.\n   */\n  includeEtag?: boolean;\n  /*\n   * Optional. Specified that file attributes should be included in the response.\n   */\n  includeAttributes?: boolean;\n  /*\n   * Optional. Specified that permission key should be included in the response.\n   */\n  includePermissionKey?: boolean;\n  /**\n   * Optional. Specified that extended info should be included in the returned {@link FileItem} or {@link DirectoryItem}.\n   * If true, the Content-Length property will be up-to-date, FileId will be returned in response.\n   */\n  includeExtendedInfo?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.delete} operation.\n */\nexport interface DirectoryDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.exists} operation.\n */\nexport interface DirectoryExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.getProperties} operation.\n */\nexport interface DirectoryGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.setMetadata} operation.\n */\nexport interface DirectorySetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure Directory - List Handles Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.listHandlesSegment}\n * - {@link ShareDirectoryClient.iterateHandleSegments}\n * - {@link ShareDirectoryClient.listHandleItems}\n *\n */\nexport interface DirectoryListHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of entries to return. If the request does not specify maxResults,\n   * or specifies a value greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxResults?: number;\n  /**\n   * Specifies operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   */\n  recursive?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.listHandles} operation.\n */\nexport interface DirectoryListHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies whether operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   */\n  recursive?: boolean;\n}\n\n/**\n * Options to configure Directory - Force Close Handles Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.forceCloseHandlesSegment}\n * - {@link ShareDirectoryClient.forceCloseAllHandles}\n */\nexport interface DirectoryForceCloseHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   */\n  recursive?: boolean;\n}\n\n/**\n * Additional response header values for close handles request.\n */\nexport interface DirectoryCloseHandlesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the File service used to execute the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A string describing next handle to be closed. It is returned when more handles need to be\n   * closed to complete the request.\n   */\n  marker?: string;\n}\n\n/**\n * Response type for {@link ShareDirectoryClient.forceCloseHandle}.\n */\nexport type DirectoryForceCloseHandlesResponse = CloseHandlesInfo &\n  DirectoryCloseHandlesHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DirectoryForceCloseHandlesHeaders;\n    };\n  };\n\n/**\n * Options to configure {@link ShareDirectoryClient.forceCloseHandle}.\n */\nexport interface DirectoryForceCloseHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Contains response data for the {@link DirectoryClient.createIfNotExists} operation.\n */\nexport interface DirectoryCreateIfNotExistsResponse extends DirectoryCreateResponse {\n  /**\n   * Indicate whether the directory is successfully created. Is false when the directory is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link DirectoryClient.deleteIfExists} operation.\n */\nexport interface DirectoryDeleteIfExistsResponse extends DirectoryDeleteResponse {\n  /**\n   * Indicate whether the directory is successfully deleted. Is false if the directory does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * A ShareDirectoryClient represents a URL to the Azure Storage directory allowing you to manipulate its files and directories.\n */\nexport class ShareDirectoryClient extends StorageClient {\n  /**\n   * context provided by protocol layer.\n   */\n  private context: Directory;\n\n  private _shareName: string;\n  private _path: string;\n  private _name: string;\n\n  /**\n   * The share name corresponding to this directory client\n   */\n  public get shareName(): string {\n    return this._shareName;\n  }\n\n  /**\n   * The full path of the directory\n   */\n  public get path(): string {\n    return this._path;\n  }\n\n  /**\n   * The name of the directory\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Creates an instance of DirectoryClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file directory, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a directory.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a directory name includes %, directory name must be encoded in the URL.\n   *                     Such as a directory named \"mydir%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydir%25\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of DirectoryClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file directory, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a directory.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a directory name includes %, directory name must be encoded in the URL.\n   *                     Such as a directory named \"mydir%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydir%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    options: StoragePipelineOptions = {}\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    ({\n      baseName: this._name,\n      shareName: this._shareName,\n      path: this._path\n    } = getShareNameAndPathFromUrl(this.url));\n    this.context = new Directory(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param options - Options to Directory Create operation.\n   * @returns Response data for the Directory  operation.\n   */\n  public async create(options: DirectoryCreateOptions = {}): Promise<DirectoryCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-create\", options);\n    try {\n      if (!options.fileAttributes) {\n        options = validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options);\n        // By default set it as a directory.\n        const attributes: FileSystemAttributes = new FileSystemAttributes();\n        attributes.directory = true;\n        options.fileAttributes = attributes;\n      }\n\n      return await this.context.create(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          metadata: options.metadata,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory if it does not already exists.\n   * If the directory already exists, it is not modified.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: DirectoryCreateOptions = {}\n  ): Promise<DirectoryCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-createIfNotExists\", options);\n    try {\n      const res = await this.create(updatedOptions);\n      return {\n        succeeded: true,\n        ...res\n      };\n    } catch (e) {\n      if (e.details?.errorCode === \"ResourceAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when creating a directory only if it does not already exist.\"\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties on the directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties\n   *\n   * @param DirectoryProperties - Directory properties. If no values are provided,\n   *                                            existing values will be preserved.\n   */\n  public async setProperties(\n    properties: DirectoryProperties = {}\n  ): Promise<DirectorySetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-setProperties\", properties);\n    try {\n      properties = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(properties);\n\n      return await this.context.setProperties(\n        fileAttributesToString(properties.fileAttributes!),\n        fileCreationTimeToString(properties.creationTime!),\n        fileLastWriteTimeToString(properties.lastWriteTime!),\n        {\n          abortSignal: properties.abortSignal,\n          filePermission: properties.filePermission,\n          filePermissionKey: properties.filePermissionKey,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a ShareDirectoryClient object for a sub directory.\n   *\n   * @param subDirectoryName - A subdirectory name\n   * @returns The ShareDirectoryClient object for the given subdirectory name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const directoryClient = shareClient.getDirectoryClient(\"<directory name>\");\n   * await directoryClient.create();\n   * console.log(\"Created directory successfully\");\n   * ```\n   */\n  public getDirectoryClient(subDirectoryName: string): ShareDirectoryClient {\n    return new ShareDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(subDirectoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new subdirectory under this directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Create operation.\n   * @returns Directory create response data and the corresponding DirectoryClient instance.\n   */\n  public async createSubdirectory(\n    directoryName: string,\n    options: DirectoryCreateOptions = {}\n  ): Promise<{\n    directoryClient: ShareDirectoryClient;\n    directoryCreateResponse: DirectoryCreateResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-createSubdirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      const directoryCreateResponse = await directoryClient.create(updatedOptions);\n      return {\n        directoryClient,\n        directoryCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty sub directory under this directory.\n   * Note that the directory must be empty before it can be deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Delete operation.\n   * @returns Directory deletion response data.\n   */\n  public async deleteSubdirectory(\n    directoryName: string,\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-deleteSubdirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      return await directoryClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new file or replaces a file under this directory. Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param fileName -\n   * @param size - Specifies the maximum size in bytes for the file, up to 4 TB.\n   * @param options - Options to File Create operation.\n   * @returns File creation response data and the corresponding file client.\n   */\n  public async createFile(\n    fileName: string,\n    size: number,\n    options: FileCreateOptions = {}\n  ): Promise<{ fileClient: ShareFileClient; fileCreateResponse: FileCreateResponse }> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-createFile\", options);\n    try {\n      const fileClient = this.getFileClient(fileName);\n      const fileCreateResponse = await fileClient.create(size, updatedOptions);\n      return {\n        fileClient,\n        fileCreateResponse\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified file under this directory from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param fileName - Name of the file to delete\n   * @param options - Options to File Delete operation.\n   * @returns File deletion response data.\n   */\n  public async deleteFile(\n    fileName: string,\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-deleteFile\", options);\n    try {\n      const fileClient = this.getFileClient(fileName);\n      return await fileClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link ShareFileClient} object.\n   *\n   * @param fileName - A file name.\n   * @returns A new ShareFileClient object for the given file name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\"\n   *\n   * const fileClient = directoryClient.getFileClient(\"<file name>\");\n   *\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-subclients */\n  public getFileClient(fileName: string): ShareFileClient {\n    return new ShareFileClient(\n      appendToURLPath(this.url, encodeURIComponent(fileName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Returns true if the specified directory exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing directory might be deleted by other clients or\n   * applications. Vice versa new directories might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: DirectoryExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-exists\", options);\n    try {\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        tracingOptions: {\n          ...options.tracingOptions,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      });\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking directory existence\"\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all system properties for the specified directory, and can also be used to check the\n   * existence of a directory. The data returned does not include the files in the directory or any\n   * subdirectories.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties\n   *\n   * @param options - Options to Directory Get Properties operation.\n   * @returns Response data for the Directory Get Properties operation.\n   */\n  public async getProperties(\n    options: DirectoryGetPropertiesOptions = {}\n  ): Promise<DirectoryGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-getProperties\", options);\n    try {\n      return await this.context.getProperties({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty directory. Note that the directory must be empty before it can be\n   * deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param options - Options to Directory Delete operation.\n   * @returns Response data for the Directory Delete operation.\n   */\n  public async delete(options: DirectoryDeleteOptions = {}): Promise<DirectoryDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-delete\", options);\n    try {\n      return await this.context.delete({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty directory if it exists. Note that the directory must be empty before it can be\n   * deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param options -\n   */\n  public async deleteIfExists(\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res\n      };\n    } catch (e) {\n      if (\n        e.details?.errorCode === \"ResourceNotFound\" ||\n        e.details?.errorCode === \"ParentNotFound\"\n      ) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a directory only if it exists.\"\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates user defined metadata for the specified directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-metadata\n   *\n   * @param metadata - If no metadata provided, all existing directory metadata will be removed\n   * @param options - Options to Directory Set Metadata operation.\n   * @returns Response data for the Directory Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: DirectorySetMetadataOptions = {}\n  ): Promise<DirectorySetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-setMetadata\", options);\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link DirectoryListFilesAndDirectoriesSegmentResponse} objects\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of files and directories to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all files and directories remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list files and directories operation.\n   */\n  private async *iterateFilesAndDirectoriesSegments(\n    marker?: string,\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): AsyncIterableIterator<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let listFilesAndDirectoriesResponse;\n    do {\n      listFilesAndDirectoriesResponse = await this.listFilesAndDirectoriesSegment(marker, options);\n      marker = listFilesAndDirectoriesResponse.continuationToken;\n      yield await listFilesAndDirectoriesResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for file and directory items\n   *\n   * @param options - Options to list files and directories operation.\n   */\n  private async *listFilesAndDirectoriesItems(\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): AsyncIterableIterator<\n    ({ kind: \"file\" } & FileItem) | ({ kind: \"directory\" } & DirectoryItem)\n  > {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let marker: string | undefined;\n    for await (const listFilesAndDirectoriesResponse of this.iterateFilesAndDirectoriesSegments(\n      marker,\n      options\n    )) {\n      for (const file of listFilesAndDirectoriesResponse.segment.fileItems) {\n        yield { kind: \"file\", ...file };\n      }\n      for (const directory of listFilesAndDirectoriesResponse.segment.directoryItems) {\n        yield { kind: \"directory\", ...directory };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the files and directories\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the files and directories in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const entity of directoryClient.listFilesAndDirectories()) {\n   *   if (entity.kind === \"directory\") {\n   *     console.log(`${i++} - directory\\t: ${entity.name}`);\n   *   } else {\n   *     console.log(`${i++} - file\\t: ${entity.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = directoryClient.listFilesAndDirectories();\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   if (entity.value.kind === \"directory\") {\n   *     console.log(`${i++} - directory\\t: ${entity.value.name}`);\n   *   } else {\n   *     console.log(`${i++} - file\\t: ${entity.value.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of directoryClient\n   *   .listFilesAndDirectories()\n   *   .byPage({ maxPageSize: 20 })) {\n   *   for (const fileItem of response.segment.fileItems) {\n   *     console.log(`${i++} - file\\t: ${fileItem.name}`);\n   *   }\n   *   for (const dirItem of response.segment.directoryItems) {\n   *     console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = directoryClient.listFilesAndDirectories().byPage({ maxPageSize: 3 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 3 file and directory names\n   * for (const fileItem of response.segment.fileItems) {\n   *   console.log(`${i++} - file\\t: ${fileItem.name}`);\n   * }\n   *\n   * for (const dirItem of response.segment.directoryItems) {\n   *   console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let dirMarker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * iterator = directoryClient\n   *   .listFilesAndDirectories()\n   *   .byPage({ continuationToken: dirMarker, maxPageSize: 4 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 file and directory names\n   * for (const fileItem of response.segment.fileItems) {\n   *   console.log(`${i++} - file\\t: ${fileItem.name}`);\n   * }\n   *\n   * for (const dirItem of response.segment.directoryItems) {\n   *   console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   * }\n   * ```\n   *\n   * @param options - Options to list files and directories operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listFilesAndDirectories(\n    options: DirectoryListFilesAndDirectoriesOptions = {}\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"file\" } & FileItem) | ({ kind: \"directory\" } & DirectoryItem),\n    DirectoryListFilesAndDirectoriesSegmentResponse\n  > {\n    const include: ListFilesIncludeType[] = [];\n    if (options.includeTimestamps) {\n      include.push(\"Timestamps\");\n    }\n    if (options.includeEtag) {\n      include.push(\"Etag\");\n    }\n    if (options.includeAttributes) {\n      include.push(\"Attributes\");\n    }\n    if (options.includePermissionKey) {\n      include.push(\"PermissionKey\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: DirectoryListFilesAndDirectoriesSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {})\n    };\n\n    // AsyncIterableIterator to iterate over files and directories\n    const iter = this.listFilesAndDirectoriesItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateFilesAndDirectoriesSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...updatedOptions\n        });\n      }\n    };\n  }\n\n  /**\n   * Returns a list of files or directories under the specified share or directory. It lists the\n   * contents only for a single level of the directory hierarchy.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files\n   *\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Directory List Files and Directories Segment operation.\n   * @returns Response data for the Directory List Files and Directories operation.\n   */\n  private async listFilesAndDirectoriesSegment(\n    marker?: string,\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): Promise<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareDirectoryClient-listFilesAndDirectoriesSegment\",\n      options\n    );\n\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    try {\n      return await this.context.listFilesAndDirectoriesSegment({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link DirectoryListHandlesResponse}\n   *\n   * @param marker - A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options - Options to list handles operation.\n   */\n  private async *iterateHandleSegments(\n    marker?: string,\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<DirectoryListHandlesResponse> {\n    let listHandlesResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listHandlesResponse = await this.listHandlesSegment(marker, options);\n        marker = listHandlesResponse.continuationToken;\n        yield await listHandlesResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for handles\n   *\n   * @param options - Options to list handles operation.\n   */\n  private async *listHandleItems(\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<HandleItem> {\n    let marker: string | undefined;\n    for await (const listHandlesResponse of this.iterateHandleSegments(marker, options)) {\n      if (listHandlesResponse.handleList) {\n        for (const handle of listHandlesResponse.handleList) {\n          yield handle;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the handles.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the handles in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = dirClient.listHandles();\n   * for await (const handle of iter) {\n   *   console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = dirClient.listHandles();\n   * let handleItem = await iter.next();\n   * while (!handleItem.done) {\n   *   console.log(`Handle ${i++}: ${handleItem.value.path}, opened time ${handleItem.value.openTime}, clientIp ${handleItem.value.clientIp}`);\n   *   handleItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of dirClient.listHandles({ recursive: true }).byPage({ maxPageSize: 20 })) {\n   *   if (response.handleList) {\n   *     for (const handle of response.handleList) {\n   *       console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = dirClient.listHandles().byPage({ maxPageSize: 2 });\n   * let response = await iterator.next();\n   *\n   * // Prints 2 handles\n   * if (response.value.handleList) {\n   *   for (const handle of response.value.handleList) {\n   *     console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.value.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * console.log(`    continuation`);\n   * iterator = dirClient.listHandles().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = await iterator.next();\n   *\n   * // Prints 2 more handles assuming you have more than four directory/files opened\n   * if (!response.done && response.value.handleList) {\n   *   for (const handle of response.value.handleList) {\n   *     console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list handles operation.\n   *\n   * An asyncIterableIterator that supports paging.\n   */\n  public listHandles(\n    options: DirectoryListHandlesOptions = {}\n  ): PagedAsyncIterableIterator<HandleItem, DirectoryListHandlesResponse> {\n    // an AsyncIterableIterator to iterate over handles\n    const iter = this.listHandleItems(options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateHandleSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  /**\n   * Lists handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles\n   *\n   * @param marker - Optional. A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options -\n   */\n  private async listHandlesSegment(\n    marker?: string,\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): Promise<DirectoryListHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-listHandlesSegment\", options);\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const response = await this.context.listHandles({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      // TODO: Protocol layer issue that when handle list is in returned XML\n      // response.handleList is an empty string\n      if ((response.handleList as any) === \"\") {\n        response.handleList = undefined;\n      }\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param marker - Optional. A string value that identifies the position of handles that will\n   *                          be closed with the next force close handles operation.\n   *                          The operation returns a marker value within the response\n   *                          body if there are more handles to close. The marker value\n   *                          may then be used in a subsequent call to close the next set of handles.\n   * @param options -\n   */\n  private async forceCloseHandlesSegment(\n    marker?: string,\n    options: DirectoryForceCloseHandlesSegmentOptions = {}\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseHandlesSegment\",\n      options\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const rawResponse = await this.context.forceCloseHandles(\"*\", {\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n      const response = rawResponse as DirectoryForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param options -\n   */\n  public async forceCloseAllHandles(\n    options: DirectoryForceCloseHandlesSegmentOptions = {}\n  ): Promise<CloseHandlesInfo> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseAllHandles\",\n      options\n    );\n    try {\n      let handlesClosed = 0;\n      let numberOfHandlesFailedToClose = 0;\n      let marker: string | undefined = \"\";\n\n      do {\n        const response: DirectoryForceCloseHandlesResponse = await this.forceCloseHandlesSegment(\n          marker,\n          updatedOptions\n        );\n        marker = response.marker;\n        if (response.closedHandlesCount) {\n          handlesClosed += response.closedHandlesCount;\n        }\n        if (response.closeFailureCount) {\n          numberOfHandlesFailedToClose += response.closeFailureCount;\n        }\n      } while (marker);\n\n      return { closedHandlesCount: handlesClosed, closeFailureCount: numberOfHandlesFailedToClose };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close a specific handle for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param aborter - Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param handleId - Specific handle ID, cannot be asterisk \"*\".\n   *                          Use forceCloseHandlesSegment() to close all handles.\n   * @param options -\n   */\n  public async forceCloseHandle(\n    handleId: string,\n    options: DirectoryForceCloseHandlesOptions = {}\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-forceCloseHandle\", options);\n    try {\n      if (handleId === \"*\") {\n        throw new RangeError(\n          `Parameter handleID should be a specified handle ID. Use forceCloseHandlesSegment() to close all handles.`\n        );\n      }\n\n      const rawResponse = await this.context.forceCloseHandles(handleId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n      const response = rawResponse as DirectoryForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure the {@link ShareFileClient.create} operation.\n */\nexport interface FileCreateOptions extends FileAndDirectoryCreateCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * File HTTP headers like Content-Type.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   */\n  metadata?: Metadata;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\nexport interface FileProperties extends FileAndDirectorySetPropertiesCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * File HTTP headers like Content-Type.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\nexport interface SetPropertiesResponse extends FileSetHTTPHeadersResponse {}\n\n/**\n * Options to configure the {@link ShareFileClient.delete} operation.\n */\nexport interface FileDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure File - Download operations.\n *\n * See:\n * - {@link ShareFileClient.download}\n * - {@link ShareFileClient.downloadToFile}\n */\nexport interface FileDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional ShareFileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * When this header is set to true and\n   * specified together with the Range header, the service returns the MD5 hash\n   * for the range, as long as the range is less than or equal to 4 MB in size.\n   */\n  rangeGetContentMD5?: boolean;\n\n  /**\n   * Download progress updating event handler.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.uploadRange} operation.\n */\nexport interface FileUploadRangeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An MD5 hash of the content. This hash is\n   * used to verify the integrity of the data during transport. When the\n   * Content-MD5 header is specified, the File service compares the hash of the\n   * content that has arrived with the header value that was sent. If the two\n   * hashes do not match, the operation will fail with error code 400 (Bad\n   * Request).\n   */\n  contentMD5?: Uint8Array;\n\n  /**\n   * Progress updating event handler.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.uploadRangeFromURL} operation.\n */\nexport interface FileUploadRangeFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\">Setting\n   * Timeouts for File Service Operations.</a>\n   */\n  timeoutInSeconds?: number;\n  /**\n   * Specify the crc64 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceConditions?: SourceModifiedAccessConditions;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * The option is defined as parity to REST definition.\n * While it's not ready to be used now, considering Crc64 of source content is\n * not accessible.\n */\n// export interface IFileUploadRangeFromURLOptions extends CommonOptions {\n//   /**\n//    * Crc64 of the source content.\n//    *\n//    * @type {Uint8Array}\n//    * @memberof IFileUploadRangeFromURLOptions\n//    */\n//   sourceContentCrc64?: Uint8Array;\n\n//   /**\n//    * Source modified access condition.\n//    *\n//    * @type {SourceModifiedAccessConditions}\n//    * @memberof IFileUploadRangeFromURLOptions\n//    */\n//   sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n// }\n\n/**\n * Options to configure the {@link ShareFileClient.getRangeList} operation.\n */\nexport interface FileGetRangeListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the range of bytes over which to list ranges, inclusively.\n   */\n  range?: Range;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.exists} operation.\n */\nexport interface FileExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.getProperties} operation.\n */\nexport interface FileGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link ShareFileClient.getRangeList} operation.\n */\nexport type FileGetRangeListResponse = FileGetRangeListHeaders & {\n  /**\n   * Range list for an Azure file.\n   */\n  rangeList: RangeModel[];\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: FileGetRangeListHeaders;\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: RangeModel[];\n  };\n};\n\n/**\n * Options to configure the {@link ShareFileClient.startCopyFromURL} operation.\n */\nexport interface FileStartCopyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   */\n  metadata?: Metadata;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * If specified the permission (security descriptor) shall be set for the directory/file. This\n   * header can be used if Permission size is lesser than or equal to 8KB, else x-ms-file-permission-key header shall be\n   * used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and\n   * dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be\n   * specified.\n   */\n  filePermission?: string;\n  /**\n   * Key of the permission to be set for the directory/file. Note: Only one of the\n   * x-ms-file-permission or x-ms-file-permission-key should be specified.\n   */\n  filePermissionKey?: string;\n  /**\n   * SMB info.\n   */\n  copyFileSmbInfo?: CopyFileSmbInfo;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.setMetadata} operation.\n */\nexport interface FileSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.setHttpHeaders} operation.\n */\nexport interface FileSetHttpHeadersOptions\n  extends FileAndDirectorySetPropertiesCommonOptions,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.abortCopyFromURL} operation.\n */\nexport interface FileAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.resize} operation.\n */\nexport interface FileResizeOptions\n  extends FileAndDirectorySetPropertiesCommonOptions,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.clearRange} operation.\n */\nexport interface FileClearRangeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure File - List Handles Segment operations.\n *\n * See:\n * - {@link ShareFileClient.listHandlesSegment}\n * - {@link ShareFileClient.iterateHandleSegments}\n * - {@link ShareFileClient.listHandleItems}\n */\nexport interface FileListHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of entries to return. If the request does not specify maxResults,\n   * or specifies a value greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxPageSize?: number;\n}\n\nexport interface FileListHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure File - Force Close Handles operations.\n *\n * See:\n * - {@link ShareFileClient.forceCloseHandlesSegment}\n * - {@link ShareFileClient.forceCloseAllHandles}\n * - {@link ShareFileClient.forceCloseHandle}\n */\nexport interface FileForceCloseHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Additional response header values for close handles request.\n */\nexport interface FileCloseHandlesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the File service used to execute the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A string describing next handle to be closed. It is returned when more handles need to be\n   * closed to complete the request.\n   */\n  marker?: string;\n}\n\n/**\n * Response type for {@link ShareFileClient.forceCloseHandle}.\n */\nexport type FileForceCloseHandlesResponse = CloseHandlesInfo &\n  FileCloseHandlesHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileForceCloseHandlesHeaders;\n    };\n  };\n\n/**\n * Option interface for ShareFileClient.uploadStream().\n */\nexport interface FileUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Azure File HTTP Headers.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * Metadata of the Azure file.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for File - Upload operations\n *\n * See:\n * - {@link ShareFileClient.uploadFile}\n * - {@link ShareFileClient.uploadSeekableStream}\n */\nexport interface FileParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * RangeSize specifies the range size to use in each parallel upload,\n   * the default (and maximum size) is FILE_RANGE_MAX_SIZE_BYTES.\n   */\n  rangeSize?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * File HTTP Headers.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * Metadata of an Azure file.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Concurrency indicates the maximum number of ranges to upload in parallel.\n   * If not provided, 5 concurrency will be used by default.\n   */\n  concurrency?: number;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for the {@link ShareFileClient.downloadToBuffer} operation.\n */\nexport interface FileDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * When downloading Azure files, download method will try to split large file into small ranges.\n   * Every small range will be downloaded via a separate request.\n   * This option defines size data every small request trying to download.\n   * Must be greater than 0, will use the default value if undefined,\n   */\n  rangeSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original range download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional ShareFileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or\n   * maxRetryRequestsPerRange is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   */\n  maxRetryRequestsPerRange?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Concurrency indicates the maximum number of ranges to download in parallel.\n   * If not provided, 5 concurrency will be used by default.\n   */\n  concurrency?: number;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link ShareFileClient.deleteIfExists} operation.\n */\nexport interface FileDeleteIfExistsResponse extends FileDeleteResponse {\n  /**\n   * Indicate whether the file is successfully deleted. Is false if the file does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Options to configure {@link ShareFileClient.generateSasUrl} operation.\n */\nexport interface FileGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: FileSASPermissions;\n}\n\n/**\n * A ShareFileClient represents a URL to an Azure Storage file.\n */\nexport class ShareFileClient extends StorageClient {\n  /**\n   * context provided by protocol layer.\n   */\n  private context: File;\n\n  private _shareName: string;\n  private _path: string;\n  private _name: string;\n\n  /**\n   * The share name corresponding to this file client\n   */\n  public get shareName(): string {\n    return this._shareName;\n  }\n\n  /**\n   * The full path of the file\n   */\n  public get path(): string {\n    return this._path;\n  }\n\n  /**\n   * The name of the file\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Creates an instance of ShareFileClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a file.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a file or directory name includes %, file or directory name must be encoded in the URL.\n   *                     Such as a file named \"myfile%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydirectory/myfile%25\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareFileClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a file.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a file or directory name includes %, file or directory name must be encoded in the URL.\n   *                     Such as a file named \"myfile%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydirectory/myfile%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    ({\n      baseName: this._name,\n      shareName: this._shareName,\n      path: this._path\n    } = getShareNameAndPathFromUrl(this.url));\n    this.context = new File(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ShareFileClient object identical to the source but with the specified share snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base ShareFileClient.\n   *\n   * @param shareSnapshot - The share snapshot timestamp.\n   * @returns A new ShareFileClient object identical to the source but with the specified share snapshot timestamp.\n   */\n  public withShareSnapshot(shareSnapshot: string): ShareFileClient {\n    return new ShareFileClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SHARE_SNAPSHOT,\n        shareSnapshot.length === 0 ? undefined : shareSnapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new file or replaces a file. Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param size - Specifies the maximum size in bytes for the file, up to 4 TB.\n   * @param options - Options to File Create operation.\n   * @returns Response data for the File Create  operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * // Create the file\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * // Then upload data to the file\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public async create(size: number, options: FileCreateOptions = {}): Promise<FileCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-create\", options);\n    try {\n      if (size < 0 || size > FILE_MAX_SIZE_BYTES) {\n        throw new RangeError(`File size must >= 0 and < ${FILE_MAX_SIZE_BYTES}.`);\n      }\n      options = validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options);\n\n      if (!options.fileAttributes) {\n        // Note: It would be Archive in service side if None is set.\n        const attributes: FileSystemAttributes = new FileSystemAttributes();\n        attributes.none = true;\n        options.fileAttributes = attributes;\n      }\n\n      options.fileHttpHeaders = options.fileHttpHeaders || {};\n\n      return await this.context.create(\n        size,\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileHttpHeaders: options.fileHttpHeaders,\n          metadata: options.metadata,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reads or downloads a file from the system, including its metadata and properties.\n   *\n   * * In Node.js, data returns in a Readable stream `readableStreamBody`\n   * * In browsers, data returns in a promise `contentAsBlob`\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file\n   *\n   * @param offset - From which position of the file to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Options to File Download operation.\n   * @returns Response data for the File Download operation.\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download a file to a string\n   * const downloadFileResponse = await fileClient.download();\n   * console.log(\n   *   \"Downloaded file content:\",\n   *   (await streamToBuffer(downloadFileResponse.readableStreamBody)).toString()}\n   * );\n   *\n   * // A helper method used to read a Node.js readable stream into string\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * Example usage (browsers):\n   *\n   * ```js\n   * // Download a file to a string\n   * const downloadFileResponse = await fileClient.download(0);\n   * console.log(\n   *   \"Downloaded file content:\",\n   *   await blobToString(await downloadFileResponse.blobBody)}\n   * );\n   *\n   * // A helper method used to convert a browser Blob into string.\n   * export async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: FileDownloadOptions = {}\n  ): Promise<FileDownloadResponseModel> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-download\", options);\n    try {\n      if (options.rangeGetContentMD5 && offset === 0 && count === undefined) {\n        throw new RangeError(`rangeGetContentMD5 only works with partial data downloading`);\n      }\n\n      const downloadFullFile = offset === 0 && !count;\n      const res = await this.context.download({\n        abortSignal: options.abortSignal,\n        requestOptions: {\n          onDownloadProgress: isNode ? undefined : options.onProgress // for Node.js, progress is reported by RetriableReadableStream\n        },\n        range: downloadFullFile ? undefined : rangeToString({ offset, count }),\n        rangeGetContentMD5: options.rangeGetContentMD5,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      // Return browser response immediately\n      if (!isNode) {\n        return res;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      return new FileDownloadResponse(\n        res,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedDownloadOptions: FileDownloadOptionalParams = {\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start\n            })\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     chunkDownloadOptions.range\n          //   }, options: ${JSON.stringify(chunkDownloadOptions)}`\n          // );\n\n          const downloadRes = await this.context.download({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.leaseAccessConditions,\n            ...updatedDownloadOptions,\n            ...convertTracingToRequestOptionsBase(updatedDownloadOptions)\n          });\n\n          if (!(downloadRes.etag === res.etag)) {\n            throw new Error(\"File has been modified concurrently\");\n          }\n          return downloadRes.readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          abortSignal: options.abortSignal,\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the specified file exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing file might be deleted by other clients or\n   * applications. Vice versa new files might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: FileExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-exists\", options);\n    try {\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        tracingOptions: {\n          ...options.tracingOptions,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      });\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking file existence\"\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the file. It does not return the content of the file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties\n   *\n   * @param options - Options to File Get Properties operation.\n   * @returns Response data for the File Get Properties operation.\n   */\n  public async getProperties(\n    options: FileGetPropertiesOptions = {}\n  ): Promise<FileGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-getProperties\", options);\n    try {\n      return this.context.getProperties({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties on the file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param properties - File properties. For file HTTP headers(e.g. Content-Type),\n   *                                       if no values are provided, existing HTTP headers will be removed.\n   *                                       For other file properties(e.g. fileAttributes), if no values are provided,\n   *                                       existing values will be preserved.\n   */\n  public async setProperties(properties: FileProperties = {}): Promise<SetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-setProperties\", properties);\n    try {\n      properties = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(properties);\n\n      properties.fileHttpHeaders = properties.fileHttpHeaders || {};\n\n      return await this.context.setHttpHeaders(\n        fileAttributesToString(properties.fileAttributes!),\n        fileCreationTimeToString(properties.creationTime!),\n        fileLastWriteTimeToString(properties.lastWriteTime!),\n        {\n          abortSignal: properties.abortSignal,\n          fileHttpHeaders: properties.fileHttpHeaders,\n          filePermission: properties.filePermission,\n          filePermissionKey: properties.filePermissionKey,\n          leaseAccessConditions: properties.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the file from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param options - Options to File Delete operation.\n   * @returns Response data for the File Delete operation.\n   */\n  public async delete(options: FileDeleteOptions = {}): Promise<FileDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-delete\", options);\n    try {\n      return await this.context.delete({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the file from the storage account if it exists.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param options -\n   */\n  public async deleteIfExists(\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res\n      };\n    } catch (e) {\n      if (\n        e.details?.errorCode === \"ResourceNotFound\" ||\n        e.details?.errorCode === \"ParentNotFound\"\n      ) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a file only if it exists.\"\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets HTTP headers on the file.\n   *\n   * If no option provided, or no value provided for the file HTTP headers in the options,\n   * these file HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param FileHttpHeaders - File HTTP headers like Content-Type.\n   *                                             Provide undefined will remove existing HTTP headers.\n   * @param options - Options to File Set HTTP Headers operation.\n   * @returns Response data for the File Set HTTP Headers operation.\n   */\n  public async setHttpHeaders(\n    fileHttpHeaders: FileHttpHeaders = {},\n    options: FileSetHttpHeadersOptions = {}\n  ): Promise<FileSetHTTPHeadersResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-setHTTPHeaders\", options);\n    try {\n      // FileAttributes, filePermission, createTime, lastWriteTime will all be preserved\n      options = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options);\n      return await this.context.setHttpHeaders(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileHttpHeaders,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Resize file.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param length - Resizes a file to the specified size in bytes.\n   *                        If the specified byte value is less than the current size of the file,\n   *                        then all ranges above the specified byte value are cleared.\n   * @param options - Options to File Resize operation.\n   * @returns Response data for the File Set HTTP Headers operation.\n   */\n  public async resize(\n    length: number,\n    options: FileResizeOptions = {}\n  ): Promise<FileSetHTTPHeadersResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-resize\", options);\n    try {\n      if (length < 0) {\n        throw new RangeError(`Size cannot less than 0 when resizing file.`);\n      }\n      // FileAttributes, filePermission, createTime, lastWriteTime will all be preserved.\n      options = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options);\n\n      return await this.context.setHttpHeaders(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileContentLength: length,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates user-defined metadata for the specified file.\n   *\n   * If no metadata defined in the option parameter, the file\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata\n   *\n   * @param metadata - If no metadata provided, all existing directory metadata will be removed\n   * @param options - Options to File Set Metadata operation.\n   * @returns Response data for the File Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata: Metadata = {},\n    options: FileSetMetadataOptions = {}\n  ): Promise<FileSetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-setMetadata\", options);\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Upload a range of bytes to a file. This operation can only be called on an existing file.\n   * It won't change the size, properties or metadata of the file.\n   * Both the start and count of the range must be specified. The range can be up to 4 MB in size.\n   *\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param offset - Offset position of the destination Azure File to upload.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to File Upload Range operation.\n   * @returns Response data for the File Upload Range operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * // Create the file\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * // Then upload data to the file\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public async uploadRange(\n    body: HttpRequestBody,\n    offset: number,\n    contentLength: number,\n    options: FileUploadRangeOptions = {}\n  ): Promise<FileUploadRangeResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadRange\", options);\n    try {\n      if (offset < 0) {\n        throw new RangeError(`offset must be >= 0`);\n      }\n\n      if (contentLength <= 0 || contentLength > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`contentLength must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      if (contentLength > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`offset must be < ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      return await this.context.uploadRange(\n        rangeToString({ count: contentLength, offset }),\n        \"update\",\n        contentLength,\n        {\n          abortSignal: options.abortSignal,\n          contentMD5: options.contentMD5,\n          requestOptions: {\n            onUploadProgress: options.onProgress\n          },\n          body: body,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n          leaseAccessConditions: options.leaseAccessConditions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Upload a range of bytes to a file where the contents are read from a another file's URL.\n   * The range can be up to 4 MB in size.\n   *\n   * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication.\n   * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source file.\n   * @param destOffset - Offset of destination file.\n   * @param count - Number of bytes to be uploaded from source file.\n   * @param options - Options to configure File - Upload Range from URL operation.\n   */\n  public async uploadRangeFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: FileUploadRangeFromURLOptions = {}\n  ): Promise<FileUploadRangeFromURLResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadRangeFromURL\", options);\n    try {\n      if (sourceOffset < 0 || destOffset < 0) {\n        throw new RangeError(`sourceOffset and destOffset must be >= 0`);\n      }\n\n      if (count <= 0 || count > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`count must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      return await this.context.uploadRangeFromURL(\n        rangeToString({ offset: destOffset, count }),\n        sourceURL,\n        0,\n        {\n          abortSignal: options.abortSignal,\n          sourceRange: rangeToString({ offset: sourceOffset, count }),\n          sourceModifiedAccessConditions: options.sourceConditions,\n          copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n          ...options,\n          ...convertTracingToRequestOptionsBase(updatedOptions)\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n  /**\n   * Clears the specified range and\n   * releases the space used in storage for that range.\n   *\n   * @param offset -\n   * @param contentLength -\n   * @param options - Options to File Clear Range operation.\n   */\n  public async clearRange(\n    offset: number,\n    contentLength: number,\n    options: FileClearRangeOptions = {}\n  ): Promise<FileUploadRangeResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-clearRange\", options);\n    try {\n      if (offset < 0 || contentLength <= 0) {\n        throw new RangeError(`offset must >= 0 and contentLength must be > 0`);\n      }\n\n      return await this.context.uploadRange(\n        rangeToString({ count: contentLength, offset }),\n        \"clear\",\n        0,\n        {\n          abortSignal: options.abortSignal,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n          leaseAccessConditions: options.leaseAccessConditions\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of valid ranges for a file.\n   *\n   * @param options - Options to File Get range List operation.\n   */\n  public async getRangeList(\n    options: FileGetRangeListOptions = {}\n  ): Promise<FileGetRangeListResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-getRangeList\", options);\n    try {\n      const originalResponse = await this.context.getRangeList({\n        abortSignal: options.abortSignal,\n        range: options.range ? rangeToString(options.range) : undefined,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      // Only returns ranges, ignoring clearRanges.\n      const parsedBody = originalResponse._response.parsedBody.ranges\n        ? originalResponse._response.parsedBody.ranges\n        : [];\n      return {\n        ...originalResponse,\n        _response: { ...originalResponse._response, parsedBody },\n        rangeList: originalResponse.ranges ? originalResponse.ranges : []\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of ranges that differ between a previous share snapshot and this file.\n   *\n   * @param prevShareSnapshot - The previous snapshot parameter is an opaque DateTime value that specifies the previous share snapshot to compare with.\n   * @param options -\n   */\n  public async getRangeListDiff(\n    prevShareSnapshot: string,\n    options: FileGetRangeListOptions = {}\n  ): Promise<FileGetRangeListDiffResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-getRangeListDiff\", options);\n    try {\n      return await this.context.getRangeList({\n        prevsharesnapshot: prevShareSnapshot,\n        ...options,\n        range: options.range ? rangeToString(options.range) : undefined,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Copies a blob or file to a destination file within the storage account.\n   *\n   * @param copySource - Specifies the URL of the source file or blob, up to 2 KB in length.\n   * To copy a file to another file within the same storage account, you may use Shared Key to\n   * authenticate the source file. If you are copying a file from another storage account, or if you\n   * are copying a blob from the same storage account or another storage account, then you must\n   * authenticate the source file or blob using a shared access signature. If the source is a public\n   * blob, no authentication is required to perform the copy operation. A file in a share snapshot\n   * can also be specified as a copy source.\n   * @param options - Options to File Start Copy operation.\n   */\n  public async startCopyFromURL(\n    copySource: string,\n    options: FileStartCopyOptions = {}\n  ): Promise<FileStartCopyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-startCopyFromURL\", options);\n    try {\n      return await this.context.startCopy(copySource, {\n        abortSignal: options.abortSignal,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        filePermission: options.filePermission,\n        filePermissionKey: options.filePermissionKey,\n        copyFileSmbInfo: options.copyFileSmbInfo,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Aborts a pending Copy File operation, and leaves a destination file with zero length and full\n   * metadata.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file\n   *\n   * @param copyId - Id of the Copy File operation to abort.\n   * @param options - Options to File Abort Copy From URL operation.\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: FileAbortCopyFromURLOptions = {}\n  ): Promise<FileAbortCopyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-abortCopyFromURL\", options);\n    try {\n      return await this.context.abortCopy(copyId, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High Level functions\n\n  /**\n   * Creates a new Azure File or replaces an existing Azure File, and then uploads a Buffer(Node)/Blob/ArrayBuffer/ArrayBufferView to it.\n   *\n   * @param data - Buffer(Node), Blob, ArrayBuffer or ArrayBufferView\n   * @param options -\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadData\", options);\n    try {\n      if (isNode) {\n        let buffer: Buffer;\n        if (data instanceof Buffer) {\n          buffer = data;\n        } else if (data instanceof ArrayBuffer) {\n          buffer = Buffer.from(data);\n        } else {\n          data = data as ArrayBufferView;\n          buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n        }\n\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Buffer => buffer.slice(offset, offset + size),\n          buffer.byteLength,\n          updatedOptions\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions\n        );\n      }\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob object to an Azure file. Requires a blobFactory as the data source,\n   * which need to return a Blob object with the offset and size provided.\n   *\n   * @param blobFactory -\n   * @param size -\n   * @param options -\n   */\n  async uploadSeekableBlob(\n    blobFactory: (offset: number, size: number) => Blob,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-UploadSeekableBlob\", options);\n    try {\n      return this.uploadSeekableInternal(blobFactory, size, updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates a new Azure File or replaces an existing Azure File, and then uploads a local file to it.\n   *\n   * @param filePath - Full path of local file\n   * @param fileClient - ShareFileClient\n   * @param options -\n   */\n  public async uploadFile(\n    filePath: string,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadFile\", options);\n    try {\n      const size = (await fsStat(filePath)).size;\n      return await this.uploadSeekableInternal(\n        (offset, count) => {\n          return () =>\n            fsCreateReadStream(filePath, {\n              autoClose: true,\n              end: count ? offset + count - 1 : Infinity,\n              start: offset\n            });\n        },\n        size,\n        updatedOptions\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Accepts a Node.js Readable stream factory, and uploads in blocks to an Azure File.\n   * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n   * is the offset in the Azure file to be uploaded.\n   *\n   * @param streamFactory - Returns a Node.js Readable stream starting\n   *                                                                  from the offset defined\n   * @param size - Size of the Azure file\n   * @param fileClient - ShareFileClient\n   * @param options -\n   */\n  async uploadResetableStream(\n    streamFactory: (offset: number, count?: number) => NodeJS.ReadableStream,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadResetableStream\", options);\n    try {\n      return await this.uploadSeekableInternal(\n        (offset: number, count?: number) => {\n          return () => streamFactory(offset, count);\n        },\n        size,\n        updatedOptions\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   *\n   * @param bodyFactory -\n   * @param size - Size of the Azure file\n   * @param fileClient - ShareFileClient\n   * @param options -\n   */\n  private async uploadSeekableInternal(\n    bodyFactory: (offset: number, count: number) => HttpRequestBody,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadSeekableInternal\", options);\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0 || options.rangeSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`options.rangeSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: updatedOptions.tracingOptions\n      });\n\n      const numBlocks: number = Math.floor((size - 1) / options.rangeSize) + 1;\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(\n          async (): Promise<any> => {\n            const start = options.rangeSize! * i;\n            const end = i === numBlocks - 1 ? size : start + options.rangeSize!;\n            const contentLength = end - start;\n            await this.uploadRange(bodyFactory(start, contentLength), start, contentLength, {\n              abortSignal: options.abortSignal,\n              leaseAccessConditions: options.leaseAccessConditions,\n              tracingOptions: updatedOptions.tracingOptions\n            });\n            // Update progress after block is successfully uploaded to server, in case of block trying\n            transferProgress += contentLength;\n            if (options.onProgress) {\n              options.onProgress({ loadedBytes: transferProgress });\n            }\n          }\n        );\n      }\n      return await batch.do();\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure file in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire file.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For files larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param buffer - Buffer to be fill, must have length larger than count\n   * @param offset - From which position of the Azure File to download\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined\n   * @param options -\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: FileDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME\n   *\n   * Downloads an Azure file in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire file\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For files larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param offset - From which position of the Azure file to download\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined\n   * @param options -\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: FileDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    bufferOrOffset?: Buffer | number,\n    offsetOrCount?: number,\n    countOrOptions?: FileDownloadToBufferOptions | number,\n    optOptions: FileDownloadToBufferOptions = {}\n  ): Promise<Buffer> {\n    let buffer: Buffer | undefined = undefined;\n    let offset: number;\n    let count: number;\n    let options: FileDownloadToBufferOptions = optOptions;\n\n    if (bufferOrOffset instanceof Buffer) {\n      buffer = bufferOrOffset;\n      offset = offsetOrCount || 0;\n      count = typeof countOrOptions === \"number\" ? countOrOptions : 0;\n    } else {\n      offset = typeof bufferOrOffset === \"number\" ? bufferOrOffset : 0;\n      count = typeof offsetOrCount === \"number\" ? offsetOrCount : 0;\n      options = (countOrOptions as FileDownloadToBufferOptions) || {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-downloadToBuffer\", options);\n\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0) {\n        throw new RangeError(\"rangeSize option must be > 0\");\n      }\n\n      if (offset < 0) {\n        throw new RangeError(\"offset option must be >= 0\");\n      }\n\n      if (count && count <= 0) {\n        throw new RangeError(\"count option must be > 0\");\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Customer doesn't specify length, get it\n      if (!count) {\n        const response = await this.getProperties({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.leaseAccessConditions,\n          tracingOptions: updatedOptions.tracingOptions\n        });\n        count = response.contentLength! - offset;\n        if (count < 0) {\n          throw new RangeError(\n            `offset ${offset} shouldn't be larger than file size ${response.contentLength!}`\n          );\n        }\n      }\n\n      if (!buffer) {\n        try {\n          buffer = Buffer.alloc(count);\n        } catch (error) {\n          throw new Error(\n            `Unable to allocate a buffer of size: ${count} bytes. Please try passing your own Buffer to ` +\n              'the \"downloadToBuffer method or try using other methods like \"download\" or \"downloadToFile\".' +\n              `\\t ${error.message}`\n          );\n        }\n      }\n\n      if (buffer.length < count) {\n        throw new RangeError(\n          `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n        );\n      }\n\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n      for (let off = offset; off < offset + count; off = off + options.rangeSize) {\n        batch.addOperation(async () => {\n          // Exclusive chunk end position\n          let chunkEnd = offset + count!;\n          if (off + options.rangeSize! < chunkEnd) {\n            chunkEnd = off + options.rangeSize!;\n          }\n          const response = await this.download(off, chunkEnd - off, {\n            abortSignal: options.abortSignal,\n            maxRetryRequests: options.maxRetryRequestsPerRange,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: updatedOptions.tracingOptions\n          });\n          const stream = response.readableStreamBody!;\n          await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n          // Update progress after block is downloaded, in case of block trying\n          // Could provide finer grained progress updating inside HTTP requests,\n          // only if convenience layer download try is enabled\n          transferProgress += chunkEnd - off;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        });\n      }\n      await batch.do();\n      return buffer;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates a new Azure File or replaces an existing Azure File, and then uploads a Node.js Readable stream into it.\n   * This method will try to create an Azure File, then starts uploading chunk by chunk.\n   * Size of chunk is defined by `bufferSize` parameter.\n   * Please make sure potential size of stream doesn't exceed file size.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *   parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param stream - Node.js Readable stream. Must be less or equal than file size.\n   * @param size - Size of file to be created. Maximum size allowed is 4 TB.\n   *                      If this value is larger than stream size, there will be empty bytes in file tail.\n   * @param bufferSize - Size of every buffer allocated in bytes, also the chunk/range size during\n   *                            the uploaded file. Size must be greater than 0 and lesser than or equal to 4 * 1024 * 1024 (4MB)\n   * @param maxBuffers - Max buffers will allocate during uploading, positive correlation\n   *                            with max uploading concurrency\n   * @param options -\n   */\n  public async uploadStream(\n    stream: Readable,\n    size: number,\n    bufferSize: number,\n    maxBuffers: number,\n    options: FileUploadStreamOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadStream\", options);\n    try {\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (bufferSize <= 0 || bufferSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`bufferSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (maxBuffers < 0) {\n        throw new RangeError(`maxBuffers must be > 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: updatedOptions.tracingOptions\n      });\n\n      let transferProgress: number = 0;\n      const scheduler = new BufferScheduler(\n        stream,\n        bufferSize,\n        maxBuffers,\n        async (buffer: Buffer, offset?: number) => {\n          if (transferProgress + buffer.length > size) {\n            throw new RangeError(\n              `Stream size is larger than file size ${size} bytes, uploading failed. ` +\n                `Please make sure stream length is less or equal than file size.`\n            );\n          }\n\n          await this.uploadRange(buffer, offset!, buffer.length, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: updatedOptions.tracingOptions\n          });\n\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += buffer.length;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        },\n        // Concurrency should set a smaller value than maxBuffers, which is helpful to\n        // reduce the possibility when a outgoing handler waits for stream data, in\n        // this situation, outgoing handlers are blocked.\n        // Outgoing queue shouldn't be empty.\n        Math.ceil((maxBuffers / 4) * 3)\n      );\n      return await scheduler.do();\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param filePath -\n   * @param offset - From which position of the block blob to download.\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n   * @param options - Options to Blob download options.\n   * @returns The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: FileDownloadOptions = {}\n  ): Promise<FileDownloadResponseModel> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-downloadToFile\", options);\n    try {\n      const response = await this.download(offset, count, updatedOptions);\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).fileDownloadStream = undefined;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Lists handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles\n   *\n   * @param marker - Optional. A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options -\n   */\n  private async listHandlesSegment(\n    marker?: string,\n    options: FileListHandlesSegmentOptions = {}\n  ): Promise<FileListHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-listHandlesSegment\", options);\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const response = await this.context.listHandles({\n        abortSignal: options.abortSignal,\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      // TODO: Protocol layer issue that when handle list is in returned XML\n      // response.handleList is an empty string\n      if ((response.handleList as any) === \"\") {\n        response.handleList = undefined;\n      }\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for FileListHandlesResponse\n   *\n   * @param marker - A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options - Options to list handles operation.\n   */\n  private async *iterateHandleSegments(\n    marker?: string,\n    options: FileListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<FileListHandlesResponse> {\n    let listHandlesResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listHandlesResponse = await this.listHandlesSegment(marker, options);\n        marker = listHandlesResponse.continuationToken;\n        yield listHandlesResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for handles\n   *\n   * @param options - Options to list handles operation.\n   */\n  private async *listHandleItems(\n    options: FileListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<HandleItem> {\n    let marker: string | undefined;\n    for await (const listHandlesResponse of this.iterateHandleSegments(marker, options)) {\n      if (listHandlesResponse.handleList) {\n        for (const handle of listHandlesResponse.handleList) {\n          yield handle;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the handles.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the handles in pages.\n   *\n   * @param options - Options to list handles operation.\n   *\n   * An asyncIterableIterator that supports paging.\n   */\n  public listHandles(\n    options: FileListHandlesOptions = {}\n  ): PagedAsyncIterableIterator<HandleItem, FileListHandlesResponse> {\n    // an AsyncIterableIterator to iterate over handles\n    const iter = this.listHandleItems(options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateHandleSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options\n        });\n      }\n    };\n  }\n\n  /**\n   * Force close all handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param marker - Optional. A string value that identifies the position of handles that will\n   *                          be closed with the next force close handles operation.\n   *                          The operation returns a marker value within the response\n   *                          body if there are more handles to close. The marker value\n   *                          may then be used in a subsequent call to close the next set of handles.\n   * @param options - Options to force close handles operation.\n   */\n  private async forceCloseHandlesSegment(\n    marker?: string,\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<FileForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareFileClient-forceCloseHandlesSegment\",\n      options\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const rawResponse = await this.context.forceCloseHandles(\"*\", {\n        abortSignal: options.abortSignal,\n        marker,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n      const response = rawResponse as FileForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param options - Options to force close handles operation.\n   */\n  public async forceCloseAllHandles(\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<CloseHandlesInfo> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-forceCloseAllHandles\", options);\n    try {\n      let handlesClosed = 0;\n      let numberOfHandlesFailedToClose = 0;\n      let marker: string | undefined = \"\";\n\n      do {\n        const response: FileForceCloseHandlesResponse = await this.forceCloseHandlesSegment(\n          marker,\n          { tracingOptions: updatedOptions.tracingOptions }\n        );\n        marker = response.marker;\n        if (response.closedHandlesCount) {\n          handlesClosed += response.closedHandlesCount;\n        }\n        if (response.closeFailureCount) {\n          numberOfHandlesFailedToClose += response.closeFailureCount;\n        }\n      } while (marker);\n\n      return {\n        closedHandlesCount: handlesClosed,\n        closeFailureCount: numberOfHandlesFailedToClose\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close a specific handle for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param handleId - Specific handle ID, cannot be asterisk \"*\".\n   *                          Use forceCloseAllHandles() to close all handles.\n   * @param FileForceCloseHandlesOptions - Options to force close handles operation.\n   */\n  public async forceCloseHandle(\n    handleId: string,\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<FileForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-forceCloseHandle\", options);\n    try {\n      if (handleId === \"*\") {\n        throw new RangeError(\n          `Parameter handleID should be a specified handle ID. Use forceCloseHandlesSegment() to close all handles.`\n        );\n      }\n\n      const rawResponse = await this.context.forceCloseHandles(handleId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n      const response = rawResponse as FileForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link ShareLeaseClient} that manages leases on the file.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new ShareLeaseClient object for managing leases on the file.\n   */\n  public getShareLeaseClient(proposeLeaseId?: string): ShareLeaseClient {\n    return new ShareLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Only available for clients constructed with a shared key credential.\n   *\n   * Generates a Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: FileGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    const sas = generateFileSASQueryParameters(\n      {\n        shareName: this.shareName,\n        filePath: this.path,\n        ...options\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n\n/**\n * The details of the response for a specific lease operation.\n */\nexport interface LeaseOperationResponseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the file was last modified. Any operation that modifies the file,\n   * including an update of the file's metadata or properties, changes the last-modified time of\n   * the file.\n   */\n  lastModified?: Date;\n  /**\n   * Approximate time remaining in the lease period, in seconds. Only availabe for {@link ShareLeaseClient.breakLease} for share lease.\n   */\n  leaseTimeInSeconds?: number;\n  /**\n   * Uniquely identifies a file's lease, won't be set when returned by releaseLease.\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that acquire, change, break or release a lease.\n *\n * See {@link ShareLeaseClient}.\n */\nexport type LeaseOperationResponse = LeaseOperationResponseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: LeaseOperationResponseHeaders;\n  };\n};\n\n/**\n * lease operations options.\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A client that manages leases for a {@link ShareFileClient} or {@link ShareClient}.\n * @see https://docs.microsoft.com/rest/api/storageservices/lease-file\n * and\n * @see https://docs.microsoft.com/rest/api/storageservices/lease-share\n */\nexport class ShareLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private fileOrShare: File | Share;\n  private isShare: boolean;\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of ShareLeaseClient.\n   * @param client - The client to make the lease operation requests.\n   * @param leaseId - Initial proposed lease id.\n   */\n  constructor(client: ShareFileClient, leaseId?: string) {\n    const clientContext = new StorageClientContext(client.url, {\n      version: SERVICE_VERSION,\n      ...(client as any).pipeline.toServiceClientOptions()\n    });\n\n    if (client instanceof ShareClient) {\n      this.isShare = true;\n      this.fileOrShare = new Share(clientContext);\n    } else {\n      this.isShare = false;\n      this.fileOrShare = new File(clientContext);\n    }\n    this._url = client.url;\n\n    if (!leaseId) {\n      leaseId = generateUuid();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a file, share or share snapshot for write and delete operations.\n   *\n   * @param duration - Specifies the duration of lease in seconds. For file, the only allowed value is -1 for a lease that never expires. For share, must be -1 or between 15 to 60.\n   * @param options - Options for the lease management operation.\n   * @returns Response data for acquire lease operation.\n   */\n  public async acquireLease(\n    duration: number = -1,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-acquireLease\", options);\n    try {\n      return await this.fileOrShare.acquireLease({\n        abortSignal: options.abortSignal,\n        duration,\n        proposedLeaseId: this._leaseId,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To change the ID of an existing lease.\n   *\n   * @param proposedLeaseId - the proposed new lease Id.\n   * @param options - Options for the lease management operation.\n   * @returns Response data for change lease operation.\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-changeLease\", options);\n    try {\n      const response = await this.fileOrShare.changeLease(this._leaseId, {\n        proposedLeaseId,\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n      this._leaseId = proposedLeaseId;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease.\n   *\n   * @param options - Options for the lease management operation.\n   * @returns Response data for release lease operation.\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-releaseLease\", options);\n    try {\n      return await this.fileOrShare.releaseLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To force end the lease.\n   *\n   * @param options - Options for the lease management operation.\n   * @returns Response data for break lease operation.\n   */\n  public async breakLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-breakLease\", options);\n    try {\n      return await this.fileOrShare.breakLease({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To renew the lease. Only available for lease on share or share snapshot.\n   * Note that the lease may be renewed even if it has expired as long as the share has not been leased again since the expiration of that lease.\n   * When you renew a lease, the lease duration clock resets.\n   *\n   * @param options - Options for the lease management operation.\n   * @returns Response data for renew lease operation.\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-renewLease\", options);\n\n    if (!this.isShare) {\n      throw new RangeError(\"The renewLease operation is not available for lease on file.\");\n    }\n\n    try {\n      return await (this.fileOrShare as Share).renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Pipeline } from \"./Pipeline\";\nimport { StorageClient } from \"./StorageClient\";\nimport { ShareRestoreOptionalParams, ShareRestoreResponse } from \"./generated/src/models\";\nimport { Share } from \"./generated/src/operations\";\n\n/**\n * ShareClientInternal is the thin wrapper for Share which contains internal helper methods.\n */\nexport class ShareClientInternal extends StorageClient {\n  private context: Share;\n\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.context = new Share(this.storageClientContext);\n  }\n\n  public async restore(options: ShareRestoreOptionalParams = {}): Promise<ShareRestoreResponse> {\n    return this.context.restore(options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  FileServiceProperties,\n  ListSharesIncludeType,\n  ShareCreateResponse,\n  ShareDeleteResponse,\n  ServiceGetPropertiesResponse,\n  ServiceSetPropertiesResponse,\n  ServiceListSharesSegmentHeaders,\n  ListSharesResponseModel,\n  SharePropertiesInternal\n} from \"./generatedModels\";\nimport { Service } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport { ShareClientInternal } from \"./ShareClientInternal\";\nimport { ShareClient, ShareCreateOptions, ShareDeleteMethodOptions } from \"./Clients\";\nimport { appendToURLPath, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { isNode, HttpResponse } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { ShareProtocols, toShareProtocols } from \"./models\";\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { generateAccountSASQueryParameters } from \"./AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SasIPRange } from \"./SasIPRange\";\nimport { appendToURLQuery } from \"./utils/utils.common\";\n\n/**\n * Options to configure Share - List Shares Segment operations.\n *\n * See:\n * - {@link ShareServiceClient.listSegments}\n * - {@link ShareServiceClient.listItems}\n * - {@link ShareServiceClient.listSharesSegment}\n */\ninterface ServiceListSharesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of entries to\n   * return. If the request does not specify maxResults, or specifies a value\n   * greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxResults?: number;\n\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListSharesIncludeType[];\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.listShares} operation.\n */\nexport interface ServiceListSharesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies that share snapshots should be included in the enumeration. Share Snapshots are listed from oldest to newest in the response.\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies that share snapshot should be returned in the response.\n   */\n  includeSnapshots?: boolean;\n\n  /**\n   * Specifies that share soft deleted should be returned in the response.\n   */\n  includeDeleted?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.getProperties} operation.\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.setProperties} operation.\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.undelete} operation.\n */\nexport interface ServiceUndeleteShareOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Properties of a share.\n */\nexport type ShareProperties = SharePropertiesInternal & {\n  /**\n   * The protocols that have been enabled on the share.\n   */\n  protocols?: ShareProtocols;\n};\n\n/**\n * A listed Azure Storage share item.\n */\nexport interface ShareItem {\n  name: string;\n  snapshot?: string;\n  deleted?: boolean;\n  version?: string;\n  properties: ShareProperties;\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An enumeration of shares.\n */\nexport interface ListSharesResponse {\n  serviceEndpoint: string;\n  prefix?: string;\n  marker?: string;\n  maxResults?: number;\n  shareItems?: ShareItem[];\n  continuationToken: string;\n}\n\n/**\n * Contains response data for the {@link ShareServiceClient.listShares} operation.\n */\nexport type ServiceListSharesSegmentResponse = ListSharesResponse &\n  ServiceListSharesSegmentHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceListSharesSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListSharesResponseModel;\n    };\n  };\n\n/**\n * Options to configure {@link ShareServiceClient.generateAccountSasUrl} operation.\n */\nexport interface ServiceGenerateAccountSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n}\n\n/**\n * A ShareServiceClient represents a URL to the Azure Storage File service allowing you\n * to manipulate file shares.\n */\nexport class ShareServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of ShareServiceClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param options - Options to configure the HTTP pipeline.\n   * @returns A new ShareServiceClient from the given connection string.\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ): ShareServiceClient {\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey\n        );\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new ShareServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new ShareServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\"\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of ShareServiceClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file service, such as\n   *                     \"https://myaccount.file.core.windows.net\". You can Append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.file.core.windows.net?sasString\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareServiceClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file service, such as\n   *                     \"https://myaccount.file.core.windows.net\". You can Append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.file.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a ShareClient object.\n   *\n   * @param shareName - Name of a share.\n   * @returns The ShareClient object for the given share name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const shareClient = serviceClient.getShareClient(\"<share name>\");\n   * await shareClient.create();\n   * console.log(\"Created share successfully!\");\n   * ```\n   */\n  public getShareClient(shareName: string): ShareClient {\n    return new ShareClient(appendToURLPath(this.url, shareName), this.pipeline);\n  }\n\n  /**\n   * Creates a Share.\n   *\n   * @param shareName -\n   * @param options -\n   * @returns Share creation response and the corresponding share client.\n   */\n  public async createShare(\n    shareName: string,\n    options: ShareCreateOptions = {}\n  ): Promise<{ shareCreateResponse: ShareCreateResponse; shareClient: ShareClient }> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-createShare\", options);\n    try {\n      const shareClient = this.getShareClient(shareName);\n      const shareCreateResponse = await shareClient.create(updatedOptions);\n      return {\n        shareCreateResponse,\n        shareClient\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Deletes a Share.\n   *\n   * @param shareName -\n   * @param options -\n   * @returns Share deletion response and the corresponding share client.\n   */\n  public async deleteShare(\n    shareName: string,\n    options: ShareDeleteMethodOptions = {}\n  ): Promise<ShareDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-deleteShare\", options);\n    try {\n      const shareClient = this.getShareClient(shareName);\n      return await shareClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the properties of a storage account’s file service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties\n   *\n   * @param options - Options to Get Properties operation.\n   * @returns Response data for the Get Properties operation.\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {}\n  ): Promise<ServiceGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-getProperties\", options);\n    try {\n      return await this.serviceContext.getProperties({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties for a storage account’s file service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties\n   *\n   * @param properties -\n   * @param options - Options to Set Properties operation.\n   * @returns Response data for the Set Properties operation.\n   */\n  public async setProperties(\n    properties: FileServiceProperties,\n    options: ServiceSetPropertiesOptions = {}\n  ): Promise<ServiceSetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-setProperties\", options);\n    try {\n      return await this.serviceContext.setProperties(properties, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link ServiceListSharesSegmentResponse} objects\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of shares to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all shares remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list shares operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListSharesSegmentOptions = {}\n  ): AsyncIterableIterator<ServiceListSharesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let listSharesSegmentResponse;\n    do {\n      listSharesSegmentResponse = await this.listSharesSegment(marker, options);\n      marker = listSharesSegmentResponse.continuationToken;\n      yield await listSharesSegmentResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for share items\n   *\n   * @param options - Options to list shares operation.\n   */\n  private async *listItems(\n    options: ServiceListSharesSegmentOptions = {}\n  ): AsyncIterableIterator<ShareItem> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      if (segment.shareItems) {\n        yield* segment.shareItems;\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the shares\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the shares in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const share of serviceClient.listShares()) {\n   *   console.log(`Share ${i++}: ${share.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = serviceClient.listShares();\n   * let shareItem = await iter.next();\n   * while (!shareItem.done) {\n   *   console.log(`Share ${i++}: ${shareItem.value.name}`);\n   *   shareItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of serviceClient.listShares().byPage({ maxPageSize: 20 })) {\n   *   if (response.shareItems) {\n   *    for (const share of response.shareItems) {\n   *        console.log(`Share ${i++}: ${share.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = serviceClient.listShares().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 share names\n   * if (response.shareItems) {\n   *   for (const share of response.shareItems) {\n   *     console.log(`Share ${i++}: ${share.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * iterator = serviceClient.listShares().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 share names\n   * if (response.shareItems) {\n   *   for (const share of response.shareItems) {\n   *     console.log(`Share ${i++}: ${share.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list shares operation.\n   *\n   * An asyncIterableIterator that supports paging.\n   */\n  public listShares(\n    options: ServiceListSharesOptions = {}\n  ): PagedAsyncIterableIterator<ShareItem, ServiceListSharesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListSharesIncludeType[] = [];\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n\n    const updatedOptions: ServiceListSharesSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {})\n    };\n\n    // AsyncIterableIterator to iterate over queues\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...updatedOptions\n        });\n      }\n    };\n  }\n\n  /**\n   * Gets the properties of a storage account's File service, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list to be returned with the next list operation. The operation\n   *                          returns a marker value within the response body if the list returned was\n   *                          not complete. The marker value may then be used in a subsequent call to\n   *                          request the next set of list items. The marker value is opaque to the\n   *                          client.\n   * @param options - Options to List Shares Segment operation.\n   * @returns Response data for the List Shares Segment operation.\n   */\n  private async listSharesSegment(\n    marker?: string,\n    options: ServiceListSharesSegmentOptions = {}\n  ): Promise<ServiceListSharesSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-listSharesSegment\", options);\n\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    try {\n      const res = await this.serviceContext.listSharesSegment({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n\n      // parse protocols\n      if (res.shareItems) {\n        for (let i = 0; i < res.shareItems.length; i++) {\n          const protocolsStr = res.shareItems[i].properties.enabledProtocols;\n          (res.shareItems[i].properties as any).protocols = toShareProtocols(protocolsStr);\n        }\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Restores a previously deleted share.\n   * This API is only functional if Share Soft Delete is enabled\n   * for the storage account associated with the share.\n   *\n   * @param deletedShareName - The name of the previously deleted share.\n   * @param deletedShareVersion - The version of the previously deleted share.\n   * @param options - Options to Share undelete operation.\n   * @returns Restored share.\n   */\n  public async undeleteShare(\n    deletedShareName: string,\n    deletedShareVersion: string,\n    options: ServiceUndeleteShareOptions = {}\n  ): Promise<ShareClient> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-undeleteShare\", options);\n    try {\n      const shareClient = this.getShareClient(deletedShareName);\n      await new ShareClientInternal(shareClient.url, this.pipeline).restore({\n        deletedShareName: deletedShareName,\n        deletedShareVersion: deletedShareVersion,\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions)\n      });\n      return shareClient;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Only available for ShareServiceClient constructed with a shared key credential.\n   *\n   * Generates an account Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not specified.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateAccountSasUrl(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {}\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    const sas = generateAccountSASQueryParameters(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"f\").toString(),\n        ...options\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n"],"names":["URLBuilder","SASProtocol","FileServicePropertiesMapper","QueryCollectionFormat","SharePermissionMapper","coreHttp.operationOptionsToRequestOptionsBase","coreHttp.Serializer","Mappers.ServiceSetPropertiesHeaders","Mappers.StorageError","Mappers.ServiceSetPropertiesExceptionHeaders","Parameters.properties","Parameters.restype","Parameters.comp","Parameters.timeoutInSeconds","Parameters.url","Parameters.contentType","Parameters.accept","Parameters.version","Mappers.FileServiceProperties","Mappers.ServiceGetPropertiesHeaders","Mappers.ServiceGetPropertiesExceptionHeaders","Parameters.accept1","Mappers.ListSharesResponse","Mappers.ServiceListSharesSegmentHeaders","Mappers.ServiceListSharesSegmentExceptionHeaders","Parameters.comp1","Parameters.prefix","Parameters.marker","Parameters.maxResults","Parameters.include","getPropertiesOperationSpec","setPropertiesOperationSpec","xmlSerializer","Mappers.ShareCreateHeaders","Mappers.ShareCreateExceptionHeaders","Parameters.restype1","Parameters.metadata","Parameters.quota","Parameters.accessTier","Parameters.enabledProtocols","Parameters.rootSquash","Mappers.ShareGetPropertiesHeaders","Mappers.ShareGetPropertiesExceptionHeaders","Parameters.shareSnapshot","Parameters.leaseId","Mappers.ShareDeleteHeaders","Mappers.ShareDeleteExceptionHeaders","Parameters.deleteSnapshots","Mappers.ShareAcquireLeaseHeaders","Mappers.ShareAcquireLeaseExceptionHeaders","Parameters.comp2","Parameters.action","Parameters.duration","Parameters.proposedLeaseId","Parameters.requestId","Mappers.ShareReleaseLeaseHeaders","Mappers.ShareReleaseLeaseExceptionHeaders","Parameters.action1","Parameters.leaseId1","Mappers.ShareChangeLeaseHeaders","Mappers.ShareChangeLeaseExceptionHeaders","Parameters.action2","Mappers.ShareRenewLeaseHeaders","Mappers.ShareRenewLeaseExceptionHeaders","Parameters.action3","Mappers.ShareBreakLeaseHeaders","Mappers.ShareBreakLeaseExceptionHeaders","Parameters.action4","Parameters.breakPeriod","Mappers.ShareCreateSnapshotHeaders","Mappers.ShareCreateSnapshotExceptionHeaders","Parameters.comp3","Mappers.ShareCreatePermissionHeaders","Mappers.ShareCreatePermissionExceptionHeaders","Parameters.sharePermission","Parameters.comp4","Mappers.SharePermission","Mappers.ShareGetPermissionHeaders","Mappers.ShareGetPermissionExceptionHeaders","Parameters.accept2","Parameters.filePermissionKey","Mappers.ShareSetPropertiesHeaders","Mappers.ShareSetPropertiesExceptionHeaders","Mappers.ShareSetMetadataHeaders","Mappers.ShareSetMetadataExceptionHeaders","Parameters.comp5","Mappers.ShareGetAccessPolicyHeaders","Mappers.ShareGetAccessPolicyExceptionHeaders","Parameters.comp6","Mappers.ShareSetAccessPolicyHeaders","Mappers.ShareSetAccessPolicyExceptionHeaders","Parameters.shareAcl","Mappers.ShareStats","Mappers.ShareGetStatisticsHeaders","Mappers.ShareGetStatisticsExceptionHeaders","Parameters.comp7","Mappers.ShareRestoreHeaders","Mappers.ShareRestoreExceptionHeaders","Parameters.comp8","Parameters.deletedShareName","Parameters.deletedShareVersion","createOperationSpec","deleteOperationSpec","setMetadataOperationSpec","Mappers.DirectoryCreateHeaders","Mappers.DirectoryCreateExceptionHeaders","Parameters.restype2","Parameters.filePermission","Parameters.filePermissionKey1","Parameters.fileAttributes","Parameters.fileCreatedOn","Parameters.fileLastWriteOn","Mappers.DirectoryGetPropertiesHeaders","Mappers.DirectoryGetPropertiesExceptionHeaders","Mappers.DirectoryDeleteHeaders","Mappers.DirectoryDeleteExceptionHeaders","Mappers.DirectorySetPropertiesHeaders","Mappers.DirectorySetPropertiesExceptionHeaders","Mappers.DirectorySetMetadataHeaders","Mappers.DirectorySetMetadataExceptionHeaders","Mappers.ListFilesAndDirectoriesSegmentResponse","Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders","Mappers.DirectoryListFilesAndDirectoriesSegmentExceptionHeaders","Parameters.include1","Parameters.includeExtendedInfo","Mappers.ListHandlesResponse","Mappers.DirectoryListHandlesHeaders","Mappers.DirectoryListHandlesExceptionHeaders","Parameters.comp9","Parameters.recursive","Mappers.DirectoryForceCloseHandlesHeaders","Mappers.DirectoryForceCloseHandlesExceptionHeaders","Parameters.comp10","Parameters.handleId","acquireLeaseOperationSpec","releaseLeaseOperationSpec","changeLeaseOperationSpec","breakLeaseOperationSpec","listHandlesOperationSpec","forceCloseHandlesOperationSpec","Mappers.FileCreateHeaders","Mappers.FileCreateExceptionHeaders","Parameters.fileContentLength","Parameters.fileTypeConstant","Parameters.fileContentType","Parameters.fileContentEncoding","Parameters.fileContentLanguage","Parameters.fileCacheControl","Parameters.fileContentMD5","Parameters.fileContentDisposition","Mappers.FileDownloadHeaders","Mappers.FileDownloadExceptionHeaders","Parameters.range","Parameters.rangeGetContentMD5","Mappers.FileGetPropertiesHeaders","Mappers.FileGetPropertiesExceptionHeaders","Mappers.FileDeleteHeaders","Mappers.FileDeleteExceptionHeaders","Mappers.FileSetHttpHeadersHeaders","Mappers.FileSetHttpHeadersExceptionHeaders","Parameters.fileContentLength1","Mappers.FileSetMetadataHeaders","Mappers.FileSetMetadataExceptionHeaders","Mappers.FileAcquireLeaseHeaders","Mappers.FileAcquireLeaseExceptionHeaders","Mappers.FileReleaseLeaseHeaders","Mappers.FileReleaseLeaseExceptionHeaders","Mappers.FileChangeLeaseHeaders","Mappers.FileChangeLeaseExceptionHeaders","Mappers.FileBreakLeaseHeaders","Mappers.FileBreakLeaseExceptionHeaders","Mappers.FileUploadRangeHeaders","Mappers.FileUploadRangeExceptionHeaders","Parameters.body","Parameters.comp11","Parameters.contentType1","Parameters.accept3","Parameters.range1","Parameters.fileRangeWrite","Parameters.contentLength","Parameters.contentMD5","Mappers.FileUploadRangeFromURLHeaders","Mappers.FileUploadRangeFromURLExceptionHeaders","Parameters.copySource","Parameters.sourceRange","Parameters.fileRangeWriteFromUrl","Parameters.sourceContentCrc64","Parameters.sourceIfMatchCrc64","Parameters.sourceIfNoneMatchCrc64","Parameters.copySourceAuthorization","Mappers.ShareFileRangeList","Mappers.FileGetRangeListHeaders","Mappers.FileGetRangeListExceptionHeaders","Parameters.comp12","Parameters.prevsharesnapshot","Mappers.FileStartCopyHeaders","Mappers.FileStartCopyExceptionHeaders","Parameters.filePermissionCopyMode","Parameters.ignoreReadOnly","Parameters.fileAttributes1","Parameters.fileCreationTime","Parameters.fileLastWriteTime","Parameters.setArchiveAttribute","Mappers.FileAbortCopyHeaders","Mappers.FileAbortCopyExceptionHeaders","Parameters.comp13","Parameters.copyId","Parameters.copyActionAbortConstant","Mappers.FileListHandlesHeaders","Mappers.FileListHandlesExceptionHeaders","Mappers.FileForceCloseHandlesHeaders","Mappers.FileForceCloseHandlesExceptionHeaders","createClientLogger","BaseRequestPolicy","StorageRetryPolicyType","AbortError","HttpHeaders","os.type","os.release","DefaultHttpClient","tracingPolicy","keepAlivePolicy","generateClientRequestIdPolicy","deserializationPolicy","logPolicy","proxyPolicy","disableResponseDecompressionPolicy","createHmac","createSpanFunction","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue","isNode","Readable","AbortSignal","EventEmitter","fs.createWriteStream","util.promisify","fs.stat","fs.createReadStream","SpanStatusCode","__asyncValues","generateUuid","__asyncDelegator"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;;;;;;;;;MASa,qBAAqB;IAAlC;;;;QA8CS,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,UAAK,GAAY,KAAK,CAAC;;;;QAKvB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,QAAG,GAAY,KAAK,CAAC;;;;QAKrB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,YAAO,GAAY,KAAK,CAAC;KA2CjC;;;;;;IAtHQ,OAAO,KAAK,CAAC,WAAmB;QACrC,MAAM,qBAAqB,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAE1D,KAAK,MAAM,CAAC,IAAI,WAAW,EAAE;YAC3B,QAAQ,CAAC;gBACP,KAAK,GAAG;oBACN,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAClC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,KAAK,GAAG,IAAI,CAAC;oBACnC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACpC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAClC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,GAAG,GAAG,IAAI,CAAC;oBACjC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACpC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACpC,MAAM;gBACR,KAAK,GAAG;oBACN,qBAAqB,CAAC,OAAO,GAAG,IAAI,CAAC;oBACrC,MAAM;gBACR;oBACE,MAAM,IAAI,UAAU,CAAC,iCAAiC,CAAC,EAAE,CAAC,CAAC;aAC9D;SACF;QAED,OAAO,qBAAqB,CAAC;KAC9B;;;;;;;;;;;IAoDM,QAAQ;;;;QAIb,MAAM,WAAW,GAAa,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,OAAO,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC7B;;;ACvIH;AACA;AAEA;;;;;;;;;AASA,MAAa,uBAAuB;IAApC;;;;QAgCS,YAAO,GAAY,KAAK,CAAC;;;;QAKzB,cAAS,GAAY,KAAK,CAAC;;;;QAK3B,WAAM,GAAY,KAAK,CAAC;KAqBhC;;;;;;;IAxDQ,OAAO,KAAK,CAAC,aAAqB;QACvC,MAAM,uBAAuB,GAAG,IAAI,uBAAuB,EAAE,CAAC;QAE9D,KAAK,MAAM,CAAC,IAAI,aAAa,EAAE;YAC7B,QAAQ,CAAC;gBACP,KAAK,GAAG;oBACN,uBAAuB,CAAC,OAAO,GAAG,IAAI,CAAC;oBACvC,MAAM;gBACR,KAAK,GAAG;oBACN,uBAAuB,CAAC,SAAS,GAAG,IAAI,CAAC;oBACzC,MAAM;gBACR,KAAK,GAAG;oBACN,uBAAuB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACtC,MAAM;gBACR;oBACE,MAAM,IAAI,UAAU,CAAC,0BAA0B,CAAC,EAAE,CAAC,CAAC;aACvD;SACF;QAED,OAAO,uBAAuB,CAAC;KAChC;;;;;;;IAuBM,QAAQ;QACb,MAAM,aAAa,GAAa,EAAE,CAAC;QACnC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,OAAO,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC/B;CACF;;AC3ED;AACA;AAEA;;;;;;;;;AASA,MAAa,kBAAkB;IAA/B;;;;QAmCS,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,UAAK,GAAY,KAAK,CAAC;;;;QAKvB,UAAK,GAAY,KAAK,CAAC;KAsB/B;;;;;;;IAjEQ,OAAO,KAAK,CAAC,QAAgB;QAClC,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAEpD,KAAK,MAAM,CAAC,IAAI,QAAQ,EAAE;YACxB,QAAQ,CAAC;gBACP,KAAK,GAAG;oBACN,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAC/B,MAAM;gBACR,KAAK,GAAG;oBACN,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAC/B,MAAM;gBACR,KAAK,GAAG;oBACN,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC;oBAChC,MAAM;gBACR,KAAK,GAAG;oBACN,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC;oBAChC,MAAM;gBACR;oBACE,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,EAAE,CAAC,CAAC;aAC3D;SACF;QAED,OAAO,kBAAkB,CAAC;KAC3B;;;;;IA0BM,QAAQ;QACb,MAAM,QAAQ,GAAa,EAAE,CAAC;QAC9B,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACpB;QACD,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1B;CACF;;ACpFD;AACA;AAkBA;;;;;;;;AAQA,SAAgB,eAAe,CAAC,OAAmB;IACjD,OAAO,OAAO,CAAC,GAAG,GAAG,GAAG,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,KAAK,CAAC;AACzE,CAAC;;AC7BD;AACA;AAEA,AAAO,MAAM,WAAW,GAAW,QAAQ,CAAC;AAC5C,AAAO,MAAM,eAAe,GAAW,YAAY,CAAC;AAEpD,AAAO,MAAM,mBAAmB,GAAW,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AACzE,AAAO,MAAM,yBAAyB,GAAW,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;AACjE,AAAO,MAAM,mCAAmC,GAAW,CAAC,CAAC;AAC7D,AAAO,MAAM,8BAA8B,GAAW,CAAC,CAAC;AAExD,AAAO,MAAM,YAAY,GAAG;IAC1B,UAAU,EAAE;QACV,sBAAsB,EAAE,GAAG;QAC3B,cAAc,EAAE,eAAe;QAC/B,SAAS,EAAE,KAAK;QAChB,OAAO,EAAE,SAAS;KACnB;CACF,CAAC;AAEF,AAOO,MAAM,eAAe,GAAG;IAC7B,aAAa,EAAE,eAAe;IAC9B,oBAAoB,EAAE,QAAQ;IAC9B,gBAAgB,EAAE,kBAAkB;IACpC,gBAAgB,EAAE,kBAAkB;IACpC,cAAc,EAAE,gBAAgB;IAChC,WAAW,EAAE,aAAa;IAC1B,YAAY,EAAE,cAAc;IAC5B,MAAM,EAAE,QAAQ;IAChB,IAAI,EAAE,MAAM;IACZ,QAAQ,EAAE,UAAU;IACpB,iBAAiB,EAAE,mBAAmB;IACtC,aAAa,EAAE,eAAe;IAC9B,mBAAmB,EAAE,qBAAqB;IAC1C,kBAAkB,EAAE,OAAO;IAC3B,KAAK,EAAE,OAAO;IACd,UAAU,EAAE,YAAY;IACxB,sBAAsB,EAAE,wBAAwB;IAChD,gBAAgB,EAAE,kBAAkB;IACpC,SAAS,EAAE,WAAW;CACvB,CAAC;AAEF,AAGO,MAAM,oCAAoC,GAAG;IAClD,6BAA6B;IAC7B,eAAe;IACf,gBAAgB;IAChB,cAAc;IACd,MAAM;IACN,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,YAAY;IACZ,wBAAwB;IACxB,WAAW;IACX,iBAAiB;IACjB,iBAAiB;IACjB,+BAA+B;IAC/B,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,kBAAkB;IAClB,kBAAkB;IAClB,aAAa;IACb,eAAe;IACf,MAAM;IACN,eAAe;IACf,QAAQ;IACR,MAAM;IACN,oBAAoB;IACpB,kBAAkB;IAClB,2BAA2B;IAC3B,cAAc;IACd,oBAAoB;IACpB,kBAAkB;IAClB,8BAA8B;IAC9B,qBAAqB;IACrB,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,+BAA+B;IAC/B,uBAAuB;IACvB,eAAe;IACf,mBAAmB;IACnB,oBAAoB;IACpB,0BAA0B;IAC1B,uBAAuB;IACvB,uBAAuB;IACvB,qBAAqB;IACrB,kBAAkB;IAClB,mBAAmB;IACnB,sBAAsB;IACtB,uBAAuB;IACvB,yBAAyB;IACzB,cAAc;IACd,2BAA2B;IAC3B,qBAAqB;IACrB,gBAAgB;IAChB,+BAA+B;IAC/B,gBAAgB;IAChB,kBAAkB;IAClB,WAAW;IACX,YAAY;CACb,CAAC;AAEF,AAAO,MAAM,wCAAwC,GAAG;IACtD,MAAM;IACN,YAAY;IACZ,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,IAAI;IACJ,IAAI;IACJ,KAAK;IACL,IAAI;IACJ,KAAK;IACL,IAAI;IACJ,KAAK;IACL,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,QAAQ;IACR,SAAS;CACV,CAAC;;ACtIF;AACA,AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,SAAgB,aAAa,CAAC,GAAW;IACvC,MAAM,SAAS,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAExC,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;IAC/B,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC;IAEnB,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;IACpB,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAExB,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC9B,CAAC;AAUD,SAAS,oBAAoB,CAC3B,gBAAwB,EACxB,QAM2B;IAE3B,MAAM,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC7C,KAAK,MAAM,OAAO,IAAI,QAAQ,EAAE;QAC9B,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YACvC,OAAO,OAAO,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC;SACrD;KACF;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED;;;;;;AAMA,SAAgB,4BAA4B,CAAC,gBAAwB;;IAEnE,IAAI,YAAY,GAAG,oBAAoB,CAAC,gBAAgB,EAAE,cAAc,CAAC,CAAC;;;IAG1E,YAAY,GAAG,YAAY,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,YAAY,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,YAAY,CAAC;IAErF,IACE,gBAAgB,CAAC,MAAM,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;QAC3D,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAC7C;;QAGA,IAAI,wBAAwB,GAAG,EAAE,CAAC;QAClC,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;QACrD,IAAI,cAAc,GAAG,EAAE,CAAC;;QAGxB,WAAW,GAAG,oBAAoB,CAAC,gBAAgB,EAAE,aAAa,CAAC,CAAC;QACpE,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,YAAY,CAAC,EAAE,QAAQ,CAAC,CAAC;QAEzF,IAAI,CAAC,YAAY,EAAE;;;YAIjB,wBAAwB,GAAG,oBAAoB,CAAC,gBAAgB,EAAE,0BAA0B,CAAC,CAAC;YAC9F,MAAM,QAAQ,GAAG,wBAAyB,CAAC,WAAW,EAAE,CAAC;YACzD,IAAI,QAAQ,KAAK,OAAO,IAAI,QAAQ,KAAK,MAAM,EAAE;gBAC/C,MAAM,IAAI,KAAK,CACb,iGAAiG,CAClG,CAAC;aACH;YAED,cAAc,GAAG,oBAAoB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;YAC1E,IAAI,CAAC,cAAc,EAAE;gBACnB,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;aAC7E;YACD,YAAY,GAAG,GAAG,wBAAwB,MAAM,WAAW,SAAS,cAAc,EAAE,CAAC;SACtF;QAED,IAAI,CAAC,WAAW,EAAE;YAChB,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SAC1E;aAAM,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAClC,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACzE;QAED,OAAO;YACL,IAAI,EAAE,mBAAmB;YACzB,GAAG,EAAE,YAAY;YACjB,WAAW;YACX,UAAU;SACX,CAAC;KACH;SAAM;;QAEL,MAAM,UAAU,GAAG,oBAAoB,CAAC,gBAAgB,EAAE,uBAAuB,CAAC,CAAC;QACnF,MAAM,WAAW,GAAG,qBAAqB,CAAC,YAAY,CAAC,CAAC;QACxD,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM,IAAI,KAAK,CAAC,4DAA4D,CAAC,CAAC;SAC/E;aAAM,IAAI,CAAC,UAAU,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,qEAAqE,CAAC,CAAC;SACxF;QAED,OAAO,EAAE,IAAI,EAAE,eAAe,EAAE,GAAG,EAAE,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,CAAC;KAC9E;AACH,CAAC;AAED;;;;;AAKA,SAAS,MAAM,CAAC,IAAY;IAC1B,OAAO,kBAAkB,CAAC,IAAI,CAAC;SAC5B,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;SACpB,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;SACpB,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC;SACrB,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAC1B,CAAC;AAED;;;;;;;;AAQA,SAAgB,eAAe,CAAC,GAAW,EAAE,IAAY;IACvD,MAAM,SAAS,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAExC,IAAI,IAAI,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC;IAC/B,IAAI,GAAG,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC;IACjF,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IAExB,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC9B,CAAC;AAED;;;;;;;AAOA,SAAgB,gBAAgB,CAAC,GAAW,EAAE,UAAkB;IAC9D,MAAM,SAAS,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAExC,IAAI,KAAK,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;IACjC,IAAI,KAAK,EAAE;QACT,KAAK,IAAI,GAAG,GAAG,UAAU,CAAC;KAC3B;SAAM;QACL,KAAK,GAAG,UAAU,CAAC;KACpB;IAED,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC1B,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC9B,CAAC;AAED;;;;;;;;;AASA,SAAgB,eAAe,CAAC,GAAW,EAAE,IAAY,EAAE,KAAc;IACvE,MAAM,SAAS,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxC,SAAS,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACzC,OAAO,SAAS,CAAC,QAAQ,EAAE,CAAC;AAC9B,CAAC;AAED,AAwBA;;;;;AAKA,SAAgB,UAAU,CAAC,GAAW;IACpC,MAAM,SAAS,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxC,OAAO,SAAS,CAAC,OAAO,EAAE,CAAC;AAC7B,CAAC;AAED;;;;;AAKA,SAAgB,aAAa,CAAC,GAAW;IACvC,IAAI,WAAW,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;IACnD,IAAI,CAAC,WAAW,EAAE;QAChB,OAAO,EAAE,CAAC;KACX;IAED,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC;IACjC,WAAW,GAAG,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAEhF,IAAI,eAAe,GAAa,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACvD,eAAe,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC,KAAa;QACrD,MAAM,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACxC,MAAM,gBAAgB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QAChD,OAAO,YAAY,GAAG,CAAC,IAAI,YAAY,KAAK,gBAAgB,CAAC;KAC9D,CAAC,CAAC;IAEH,MAAM,OAAO,GAA8B,EAAE,CAAC;IAC9C,KAAK,MAAM,cAAc,IAAI,eAAe,EAAE;QAC5C,MAAM,YAAY,GAAG,cAAc,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC/C,MAAM,GAAG,GAAW,YAAY,CAAC,CAAC,CAAC,CAAC;QACpC,MAAM,KAAK,GAAW,YAAY,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;KACtB;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED;;;;;;;;AAQA,SAAgB,oBAAoB,CAAC,IAAU,EAAE,mBAA4B,IAAI;;IAE/E,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAEtC,OAAO,gBAAgB;UACnB,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,MAAM,GAAG,GAAG;UAC7D,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3D,CAAC;AAED,AAkBA;;;;;;;AAOA,AAAO,eAAe,KAAK,CACzB,QAAgB,EAChB,OAAyB,EACzB,UAAkB;IAElB,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;;QAEvC,IAAI,OAAY,CAAC;QAEjB,MAAM,YAAY,GAAG;YACnB,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,YAAY,CAAC,OAAO,CAAC,CAAC;aACvB;YACD,MAAM,CAAC,UAAU,CAAC,CAAC;SACpB,CAAC;QAEF,MAAM,cAAc,GAAG;YACrB,IAAI,OAAO,KAAK,SAAS,EAAE;gBACzB,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;aACpD;YACD,OAAO,EAAE,CAAC;SACX,CAAC;;QAGF,OAAO,GAAG,UAAU,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;QAC/C,IAAI,OAAO,KAAK,SAAS,EAAE;YACzB,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SACjD;KACF,CAAC,CAAC;AACL,CAAC;AAED,AAwBA;;;;;AAKA,SAAgB,qBAAqB,CAAC,GAAW;IAC/C,MAAM,SAAS,GAAeA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpD,IAAI,WAAW,CAAC;IAChB,IAAI;QACF,IAAI,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;;;YAGjD,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;YAEjD,WAAW,GAAG,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAClD;aAAM,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;;;;YAIvC,WAAW,GAAG,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAClD;aAAM;;YAEL,WAAW,GAAG,EAAE,CAAC;SAClB;QACD,OAAO,WAAW,CAAC;KACpB;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CAAC,0DAA0D,CAAC,CAAC;KAC7E;AACH,CAAC;AAED,SAAgB,iBAAiB,CAAC,SAAqB;IACrD,IAAI,SAAS,CAAC,OAAO,EAAE,KAAK,SAAS,EAAE;QACrC,OAAO,KAAK,CAAC;KACd;IAED,MAAM,IAAI,GACR,SAAS,CAAC,OAAO,EAAG,IAAI,SAAS,CAAC,OAAO,EAAE,KAAK,SAAS,GAAG,EAAE,GAAG,GAAG,GAAG,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;;;;;IAM9F,OAAO,4HAA4H,CAAC,IAAI,CACtI,IAAI,CACL,CAAC;AACJ,CAAC;AAED,SAAgB,0BAA0B,CACxC,GAAW;;;;;;;;;;;IAaX,IAAI,SAAS,CAAC;IACd,IAAI,IAAI,CAAC;IACT,IAAI,QAAQ,CAAC;IAEb,IAAI;QACF,MAAM,SAAS,GAAGA,mBAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACxC,IAAI,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;;;YAGjD,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACtE,SAAS,GAAG,cAAe,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,cAAe,CAAC,CAAC,CAAC,CAAC;SAC3B;aAAM,IAAI,iBAAiB,CAAC,SAAS,CAAC,EAAE;;;;YAIvC,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;YAC9E,SAAS,GAAG,cAAe,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,cAAe,CAAC,CAAC,CAAC,CAAC;SAC3B;aAAM;;;YAGL,MAAM,cAAc,GAAG,SAAS,CAAC,OAAO,EAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;YACtE,SAAS,GAAG,cAAe,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,cAAe,CAAC,CAAC,CAAC,CAAC;SAC3B;;QAGD,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC;;;QAIhC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAY,CAAC;QAE3C,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;SACnD;aAAM;YACL,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;SACtC;KACF;IAAC,OAAO,KAAK,EAAE;QACd,MAAM,IAAI,KAAK,CACb,mFAAmF,CACpF,CAAC;KACH;AACH,CAAC;AAED,SAAgB,yBAAyB,CACvC,iBAAqC;IAErC,OAAO,iBAAiB,GAAG,iBAAiB,CAAC,MAAM,GAAG,GAAG,GAAG,iBAAiB,CAAC,KAAK,GAAG,SAAS,CAAC;AAClG,CAAC;;AClgBD;AACA,AAQA,WAAY,WAAW;;;;IAIrB,8BAAe,CAAA;;;;IAKf,0CAA2B,CAAA;AAC7B,CAAC,EAVWC,mBAAW,KAAXA,mBAAW,QAUtB;AAED;;;;;;;;;AASA,MAAa,kBAAkB;;;;;;;;;;;;;;;;;;;;;IA0H7B,YACE,OAAe,EACf,SAAiB,EACjB,WAAoB,EACpB,QAAiB,EACjB,aAAsB,EACtB,QAAsB,EACtB,QAAe,EACf,SAAgB,EAChB,OAAoB,EACpB,UAAmB,EACnB,QAAiB,EACjB,YAAqB,EACrB,kBAA2B,EAC3B,eAAwB,EACxB,eAAwB,EACxB,WAAoB;QAEpB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAC5B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;KAChC;;;;;;IAhED,IAAW,OAAO;QAChB,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,OAAO;gBACL,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG;gBAC1B,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK;aAC/B,CAAC;SACH;QACD,OAAO,SAAS,CAAC;KAClB;;;;;IA8DM,QAAQ;QACb,MAAM,MAAM,GAAa;YACvB,IAAI;YACJ,IAAI;YACJ,KAAK;YACL,KAAK;YACL,IAAI;YACJ,IAAI;YACJ,KAAK;YACL,IAAI;YACJ,IAAI;YACJ,IAAI;YACJ,KAAK;YACL,MAAM;YACN,MAAM;YACN,MAAM;YACN,MAAM;YACN,MAAM;SACP,CAAC;QACF,MAAM,OAAO,GAAa,EAAE,CAAC;QAE7B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,QAAQ,KAAK;gBACX,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;oBAC3D,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC5D,MAAM;gBACR,KAAK,KAAK;oBACR,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;oBACjE,MAAM;gBACR,KAAK,KAAK;oBACR,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC5D,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAC1B,OAAO,EACP,KAAK,EACL,IAAI,CAAC,QAAQ,GAAG,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,SAAS,CACvE,CAAC;oBACF,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAC1B,OAAO,EACP,KAAK,EACL,IAAI,CAAC,SAAS,GAAG,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,GAAG,SAAS,CACzE,CAAC;oBACF,MAAM;gBACR,KAAK,KAAK;oBACR,IAAI,CAAC,uBAAuB,CAC1B,OAAO,EACP,KAAK,EACL,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,SAAS,CACzD,CAAC;oBACF,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC9D,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;oBAC5D,MAAM;gBACR,KAAK,IAAI;oBACP,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC/D,MAAM;gBACR,KAAK,KAAK;oBACR,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC7D,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;oBAChE,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;oBACtE,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;oBACnE,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;oBACnE,MAAM;gBACR,KAAK,MAAM;oBACT,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;oBAC/D,MAAM;aACT;SACF;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B;;;;;;;;IASO,uBAAuB,CAAC,OAAiB,EAAE,GAAW,EAAE,KAAc;QAC5E,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QAED,GAAG,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC;QAC9B,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;YACtC,OAAO,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,KAAK,EAAE,CAAC,CAAC;SACjC;KACF;CACF;;AC1SD;AACA,AAuEA;;;;;;;;;;AAUA,SAAgB,iCAAiC,CAC/C,yBAAoD,EACpD,mBAA+C;IAE/C,MAAM,OAAO,GAAG,yBAAyB,CAAC,OAAO;UAC7C,yBAAyB,CAAC,OAAO;UACjC,eAAe,CAAC;IAEpB,MAAM,iBAAiB,GAAG,qBAAqB,CAAC,KAAK,CACnD,yBAAyB,CAAC,WAAW,CAAC,QAAQ,EAAE,CACjD,CAAC,QAAQ,EAAE,CAAC;IACb,MAAM,cAAc,GAAG,kBAAkB,CAAC,KAAK,CAAC,yBAAyB,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;IAC/F,MAAM,mBAAmB,GAAG,uBAAuB,CAAC,KAAK,CACvD,yBAAyB,CAAC,aAAa,CACxC,CAAC,QAAQ,EAAE,CAAC;IAEb,MAAM,YAAY,GAAG;QACnB,mBAAmB,CAAC,WAAW;QAC/B,iBAAiB;QACjB,cAAc;QACd,mBAAmB;QACnB,yBAAyB,CAAC,QAAQ;cAC9B,oBAAoB,CAAC,yBAAyB,CAAC,QAAQ,EAAE,KAAK,CAAC;cAC/D,EAAE;QACN,oBAAoB,CAAC,yBAAyB,CAAC,SAAS,EAAE,KAAK,CAAC;QAChE,yBAAyB,CAAC,OAAO,GAAG,eAAe,CAAC,yBAAyB,CAAC,OAAO,CAAC,GAAG,EAAE;QAC3F,yBAAyB,CAAC,QAAQ,GAAG,yBAAyB,CAAC,QAAQ,GAAG,EAAE;QAC5E,OAAO;QACP,EAAE;KACH,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEb,MAAM,SAAS,GAAW,mBAAmB,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;IAE9E,OAAO,IAAI,kBAAkB,CAC3B,OAAO,EACP,SAAS,EACT,iBAAiB,EACjB,cAAc,EACd,mBAAmB,EACnB,yBAAyB,CAAC,QAAQ,EAClC,yBAAyB,CAAC,QAAQ,EAClC,yBAAyB,CAAC,SAAS,EACnC,yBAAyB,CAAC,OAAO,CAClC,CAAC;AACJ,CAAC;;AC9HD;AACA;AAEA;;;;;;;;;AASA,MAAa,kBAAkB;IAA/B;;;;QAmCS,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,UAAK,GAAY,KAAK,CAAC;;;;QAKvB,WAAM,GAAY,KAAK,CAAC;KAwBhC;;;;;;;IAnEQ,OAAO,KAAK,CAAC,WAAmB;QACrC,MAAM,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;QAEpD,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;YAC9B,QAAQ,IAAI;gBACV,KAAK,GAAG;oBACN,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAC/B,MAAM;gBACR,KAAK,GAAG;oBACN,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACjC,MAAM;gBACR,KAAK,GAAG;oBACN,kBAAkB,CAAC,KAAK,GAAG,IAAI,CAAC;oBAChC,MAAM;gBACR,KAAK,GAAG;oBACN,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACjC,MAAM;gBACR;oBACE,MAAM,IAAI,UAAU,CAAC,uBAAuB,IAAI,EAAE,CAAC,CAAC;aACvD;SACF;QAED,OAAO,kBAAkB,CAAC;KAC3B;;;;;;;IA4BM,QAAQ;QACb,MAAM,WAAW,GAAa,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,OAAO,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC7B;CACF;;ACtFD;AACA;AAEA;;;;;;;AAOA,MAAa,mBAAmB;IAAhC;;;;QAsCS,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,UAAK,GAAY,KAAK,CAAC;;;;QAKvB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,SAAI,GAAY,KAAK,CAAC;KA6B9B;;;;;;;IAhFQ,OAAO,KAAK,CAAC,WAAmB;QACrC,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAEtD,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;YAC9B,QAAQ,IAAI;gBACV,KAAK,GAAG;oBACN,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChC,MAAM;gBACR,KAAK,GAAG;oBACN,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC;oBAClC,MAAM;gBACR,KAAK,GAAG;oBACN,mBAAmB,CAAC,KAAK,GAAG,IAAI,CAAC;oBACjC,MAAM;gBACR,KAAK,GAAG;oBACN,mBAAmB,CAAC,MAAM,GAAG,IAAI,CAAC;oBAClC,MAAM;gBACR,KAAK,GAAG;oBACN,mBAAmB,CAAC,IAAI,GAAG,IAAI,CAAC;oBAChC,MAAM;gBACR;oBACE,MAAM,IAAI,UAAU,CAAC,sBAAsB,IAAI,EAAE,CAAC,CAAC;aACtD;SACF;QAED,OAAO,mBAAmB,CAAC;KAC5B;;;;;;;;;IAmCM,QAAQ;QACb,MAAM,WAAW,GAAa,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACvB;QACD,OAAO,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC7B;CACF;;ACjGD;AACA,AA6FA;;;;;;;;;;;;;;;AAeA,SAAgB,8BAA8B,CAC5C,sBAA8C,EAC9C,mBAA+C;IAE/C,IACE,CAAC,sBAAsB,CAAC,UAAU;QAClC,EAAE,sBAAsB,CAAC,WAAW,IAAI,sBAAsB,CAAC,SAAS,CAAC,EACzE;QACA,MAAM,IAAI,UAAU,CAClB,uGAAuG,CACxG,CAAC;KACH;IAED,MAAM,OAAO,GAAG,sBAAsB,CAAC,OAAO,GAAG,sBAAsB,CAAC,OAAO,GAAG,eAAe,CAAC;IAClG,IAAI,QAAQ,GAAW,GAAG,CAAC;IAC3B,IAAI,sBAAsB,CAAC,QAAQ,EAAE;QACnC,QAAQ,GAAG,GAAG,CAAC;KAChB;IAED,IAAI,mBAAuC,CAAC;;IAE5C,IAAI,sBAAsB,CAAC,WAAW,EAAE;QACtC,IAAI,sBAAsB,CAAC,QAAQ,EAAE;YACnC,mBAAmB,GAAG,kBAAkB,CAAC,KAAK,CAC5C,sBAAsB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAC9C,CAAC,QAAQ,EAAE,CAAC;SACd;aAAM;YACL,mBAAmB,GAAG,mBAAmB,CAAC,KAAK,CAC7C,sBAAsB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAC9C,CAAC,QAAQ,EAAE,CAAC;SACd;KACF;;IAGD,MAAM,YAAY,GAAG;QACnB,mBAAmB;QACnB,sBAAsB,CAAC,QAAQ;cAC3B,oBAAoB,CAAC,sBAAsB,CAAC,QAAQ,EAAE,KAAK,CAAC;cAC5D,EAAE;QACN,sBAAsB,CAAC,SAAS;cAC5B,oBAAoB,CAAC,sBAAsB,CAAC,SAAS,EAAE,KAAK,CAAC;cAC7D,EAAE;QACN,gBAAgB,CACd,mBAAmB,CAAC,WAAW,EAC/B,sBAAsB,CAAC,SAAS,EAChC,sBAAsB,CAAC,QAAQ,CAChC;QACD,sBAAsB,CAAC,UAAU;QACjC,sBAAsB,CAAC,OAAO,GAAG,eAAe,CAAC,sBAAsB,CAAC,OAAO,CAAC,GAAG,EAAE;QACrF,sBAAsB,CAAC,QAAQ;QAC/B,OAAO;QACP,sBAAsB,CAAC,YAAY;QACnC,sBAAsB,CAAC,kBAAkB;QACzC,sBAAsB,CAAC,eAAe;QACtC,sBAAsB,CAAC,eAAe;QACtC,sBAAsB,CAAC,WAAW;KACnC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAEb,MAAM,SAAS,GAAG,mBAAmB,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;IAEtE,OAAO,IAAI,kBAAkB,CAC3B,OAAO,EACP,SAAS,EACT,mBAAmB,EACnB,SAAS,EACT,SAAS,EACT,sBAAsB,CAAC,QAAQ,EAC/B,sBAAsB,CAAC,QAAQ,EAC/B,sBAAsB,CAAC,SAAS,EAChC,sBAAsB,CAAC,OAAO,EAC9B,sBAAsB,CAAC,UAAU,EACjC,QAAQ,EACR,sBAAsB,CAAC,YAAY,EACnC,sBAAsB,CAAC,kBAAkB,EACzC,sBAAsB,CAAC,eAAe,EACtC,sBAAsB,CAAC,eAAe,EACtC,sBAAsB,CAAC,WAAW,CACnC,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,WAAmB,EAAE,SAAiB,EAAE,QAAiB;;;;IAIjF,MAAM,QAAQ,GAAa,CAAC,SAAS,WAAW,IAAI,SAAS,EAAE,CAAC,CAAC;IACjE,IAAI,QAAQ,EAAE;QACZ,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;KAC/B;IACD,OAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,CAAC;;ACtMD;;;;;;;AAUA,AAAO,MAAM,qBAAqB,GAA6B;IAC7D,cAAc,EAAE,uBAAuB;IACvC,OAAO,EAAE,0BAA0B;IACnC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,SAAS;iBACrB;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,SAAS;iBACrB;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,UAAU;yBACtB;qBACF;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,uBAAuB;iBACnC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA6B;IAC/C,cAAc,EAAE,SAAS;IACzB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,SAAS;QACpB,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,cAAc,EAAE,iBAAiB;IACjC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,IAAI,EAAE;gBACJ,WAAW,EAAE;oBACX,gBAAgB,EAAE,GAAG;oBACrB,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA6B;IAChD,cAAc,EAAE,UAAU;IAC1B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,WAAW,EAAE;oBACX,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA6B;IAC7D,cAAc,EAAE,uBAAuB;IACvC,OAAO,EAAE,kBAAkB;IAC3B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA6B;IACxD,cAAc,EAAE,kBAAkB;IAClC,OAAO,EAAE,KAAK;IACd,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,cAAc,EAAE,iBAAiB;IACjC,OAAO,EAAE,cAAc;IACvB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA6B;IACpD,cAAc,EAAE,cAAc;IAC9B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,cAAc,EAAE,oBAAoB;IACpC,OAAO,EAAE,oBAAoB;IAC7B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,iBAAiB;gBAC1B,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,QAAQ;gBACjB,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,mBAAmB;yBAC/B;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA6B;IACzD,cAAc,EAAE,mBAAmB;IACnC,OAAO,EAAE,OAAO;IAChB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,yBAAyB;iBACrC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;iBACtC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,WAAW;wBACX,QAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,QAAQ;qBACT;iBACF;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;iBACrC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,CAAC;iBAC3D;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,cAAc,EAAE,iBAAiB;IACjC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA6B;IACxD,cAAc,EAAE,kBAAkB;IAClC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kBAAkB;QAC7B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,IAAI;gBACb,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA6B;IACpD,cAAc,EAAE,cAAc;IAC9B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,OAAO;gBACvB,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA6B;IAClD,cAAc,EAAE,YAAY;IAC5B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA6B;IAC9E,cAAc,EAAE,wCAAwC;IACxD,OAAO,EAAE,oBAAoB;IAC7B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,iBAAiB;gBAC1B,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,WAAW;gBACpB,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,eAAe;gBACxB,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,OAAO,EAAE,SAAS;gBAClB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gCAAgC;iBAC5C;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA6B;IACtE,cAAc,EAAE,gCAAgC;IAChD,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,gBAAgB;gBACzB,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,eAAe;yBAC3B;qBACF;iBACF;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,WAAW;gBACpB,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,UAAU;yBACtB;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA6B;IACrD,cAAc,EAAE,eAAe;IAC/B,OAAO,EAAE,WAAW;IACpB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA6B;IACpD,cAAc,EAAE,cAAc;IAC9B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,cAAc;QACzB,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,gBAAgB;gBAChC,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA6B;IAChD,cAAc,EAAE,UAAU;IAC1B,OAAO,EAAE,MAAM;IACf,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,UAAU;QACrB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,cAAc;iBAC1B;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,cAAc,EAAE,qBAAqB;IACrC,OAAO,EAAE,oBAAoB;IAC7B,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,OAAO,EAAE,SAAS;gBAClB,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,YAAY;yBACxB;qBACF;iBACF;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,YAAY;gBAC5B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,YAAY;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA6B;IAClD,cAAc,EAAE,YAAY;IAC5B,OAAO,EAAE,QAAQ;IACjB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,QAAQ;gBACjB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,UAAU;gBACnB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,OAAO,EAAE,mBAAmB;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,cAAc,EAAE,oBAAoB;IACpC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,OAAO,EAAE,QAAQ;gBACjB,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,WAAW;yBACvB;qBACF;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,WAAW;4BACjB,SAAS,EAAE,YAAY;yBACxB;qBACF;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA6B;IACjD,cAAc,EAAE,WAAW;IAC3B,OAAO,EAAE,OAAO;IAChB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA6B;IAClD,cAAc,EAAE,YAAY;IAC5B,OAAO,EAAE,YAAY;IACrB,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,YAAY;QACvB,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,OAAO;gBAChB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,QAAQ,EAAE,IAAI;gBACd,OAAO,EAAE,KAAK;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA6B;IAC5E,cAAc,EAAE,uCAAuC;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA6B;IAC5E,cAAc,EAAE,uCAAuC;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wCAAwC,GAA6B;IAChF,cAAc,EAAE,2CAA2C;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0CAA0C;QACrD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,cAAc,EAAE,qBAAqB;IACrC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA6B;IACjE,cAAc,EAAE,4BAA4B;IAC5C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,WAAW;gBAC3B,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;gBACD,sBAAsB,EAAE,YAAY;aACrC;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,6BAA6B;gBAC7C,OAAO,EAAE,6BAA6B;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,sBAAsB,EAAE;gBACtB,cAAc,EAAE,qCAAqC;gBACrD,OAAO,EAAE,qCAAqC;gBAC9C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,oCAAoC;gBACpD,OAAO,EAAE,oCAAoC;gBAC7C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,8CAA8C;gBAC9D,OAAO,EAAE,8CAA8C;gBACvD,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;iBACrC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,WAAW;wBACX,QAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,QAAQ;qBACT;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,mBAAmB;gBACnC,OAAO,EAAE,mBAAmB;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;iBACtC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,8BAA8B;gBAC9C,OAAO,EAAE,8BAA8B;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,yBAAyB,EAAE;gBACzB,cAAc,EAAE,mCAAmC;gBACnD,OAAO,EAAE,mCAAmC;gBAC5C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,CAAC;iBAC3D;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA6B;IAC1E,cAAc,EAAE,qCAAqC;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,cAAc,EAAE,qBAAqB;IACrC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA6B;IAChE,cAAc,EAAE,2BAA2B;IAC3C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA6B;IACzE,cAAc,EAAE,oCAAoC;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA6B;IAChE,cAAc,EAAE,2BAA2B;IAC3C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA6B;IACzE,cAAc,EAAE,oCAAoC;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,cAAc,EAAE,0BAA0B;IAC1C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA6B;IACxE,cAAc,EAAE,mCAAmC;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA6B;IAClE,cAAc,EAAE,6BAA6B;IAC7C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mCAAmC,GAA6B;IAC3E,cAAc,EAAE,sCAAsC;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qCAAqC;QAChD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA6B;IACpE,cAAc,EAAE,+BAA+B;IAC/C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA6B;IAC7E,cAAc,EAAE,wCAAwC;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA6B;IACjE,cAAc,EAAE,4BAA4B;IAC5C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA6B;IAC1E,cAAc,EAAE,qCAAqC;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA6B;IACjE,cAAc,EAAE,4BAA4B;IAC5C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA6B;IAC1E,cAAc,EAAE,qCAAqC;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,cAAc,EAAE,0BAA0B;IAC1C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA6B;IACxE,cAAc,EAAE,mCAAmC;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA6B;IAC5E,cAAc,EAAE,uCAAuC;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA6B;IAC5E,cAAc,EAAE,uCAAuC;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA6B;IACjE,cAAc,EAAE,4BAA4B;IAC5C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA6B;IAC1E,cAAc,EAAE,qCAAqC;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,cAAc,EAAE,sBAAsB;IACtC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA6B;IACpE,cAAc,EAAE,+BAA+B;IAC/C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA6B;IACrE,cAAc,EAAE,gCAAgC;IAChD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,WAAW;gBAC3B,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;gBACD,sBAAsB,EAAE,YAAY;aACrC;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA6B;IAC9E,cAAc,EAAE,yCAAyC;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA6B;IACrE,cAAc,EAAE,gCAAgC;IAChD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA6B;IAC9E,cAAc,EAAE,yCAAyC;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA6B;IAC5E,cAAc,EAAE,uCAAuC;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8CAA8C,GAA6B;IACtF,cAAc,EAAE,iDAAiD;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gDAAgD;QAC3D,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uDAAuD,GAA6B;IAC/F,cAAc,EAAE,0DAA0D;IAC1E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yDAAyD;QACpE,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,cAAc,EAAE,8BAA8B;IAC9C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oCAAoC,GAA6B;IAC5E,cAAc,EAAE,uCAAuC;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sCAAsC;QACjD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA6B;IACzE,cAAc,EAAE,oCAAoC;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0CAA0C,GAA6B;IAClF,cAAc,EAAE,6CAA6C;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4CAA4C;QACvD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA6B;IACzD,cAAc,EAAE,oBAAoB;IACpC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA6B;IAClE,cAAc,EAAE,6BAA6B;IAC7C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,cAAc,EAAE,sBAAsB;IACtC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,WAAW;gBAC3B,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;gBACD,sBAAsB,EAAE,YAAY;aACrC;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,gBAAgB;gBAChC,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;iBAClB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,8BAA8B;gBAC9C,OAAO,EAAE,8BAA8B;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,oBAAoB;gBACpC,OAAO,EAAE,oBAAoB;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;iBAC3D;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;iBAClB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;iBACrC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,WAAW;wBACX,QAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,QAAQ;qBACT;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,mBAAmB;gBACnC,OAAO,EAAE,mBAAmB;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;iBACtC;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA6B;IACpE,cAAc,EAAE,+BAA+B;IAC/C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA6B;IAChE,cAAc,EAAE,2BAA2B;IAC3C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,WAAW;gBAC3B,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACpC;gBACD,sBAAsB,EAAE,YAAY;aACrC;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,WAAW;gBAC3B,OAAO,EAAE,WAAW;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,gBAAgB;gBAChC,OAAO,EAAE,gBAAgB;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;iBAClB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,8BAA8B;gBAC9C,OAAO,EAAE,8BAA8B;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,oBAAoB;gBACpC,OAAO,EAAE,oBAAoB;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;iBAC3D;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC;iBACrC;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE;wBACb,WAAW;wBACX,QAAQ;wBACR,SAAS;wBACT,UAAU;wBACV,QAAQ;qBACT;iBACF;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,mBAAmB;gBACnC,OAAO,EAAE,mBAAmB;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;iBACtC;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iCAAiC,GAA6B;IACzE,cAAc,EAAE,oCAAoC;IACpD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mCAAmC;QAC9C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA6B;IACzD,cAAc,EAAE,oBAAoB;IACpC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,0BAA0B,GAA6B;IAClE,cAAc,EAAE,6BAA6B;IAC7C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA6B;IACjE,cAAc,EAAE,4BAA4B;IAC5C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,0BAA0B;gBAC1C,OAAO,EAAE,0BAA0B;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,sBAAsB;gBACtC,OAAO,EAAE,sBAAsB;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,yBAAyB;gBACzC,OAAO,EAAE,yBAAyB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,2BAA2B;gBAC3C,OAAO,EAAE,2BAA2B;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,uBAAuB;gBACvC,OAAO,EAAE,uBAAuB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kCAAkC,GAA6B;IAC1E,cAAc,EAAE,qCAAqC;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,cAAc,EAAE,0BAA0B;IAC1C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA6B;IACxE,cAAc,EAAE,mCAAmC;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,cAAc,EAAE,0BAA0B;IAC1C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA6B;IACxE,cAAc,EAAE,mCAAmC;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAA6B;IAC7D,cAAc,EAAE,wBAAwB;IACxC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,wBAAwB;gBACxC,OAAO,EAAE,wBAAwB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA6B;IACtE,cAAc,EAAE,iCAAiC;IACjD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;iBAClB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA6B;IACrE,cAAc,EAAE,gCAAgC;IAChD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,oBAAoB;gBACpC,OAAO,EAAE,oBAAoB;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;iBAClB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,SAAS;iBAChB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sCAAsC,GAA6B;IAC9E,cAAc,EAAE,yCAAyC;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wCAAwC;QACnD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,cAAc,EAAE,0BAA0B;IAC1C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,qBAAqB;gBACrC,OAAO,EAAE,qBAAqB;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA6B;IACxE,cAAc,EAAE,mCAAmC;IACnD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA6B;IAC5D,cAAc,EAAE,uBAAuB;IACvC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,eAAe;gBAC/B,OAAO,EAAE,eAAe;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,UAAU,EAAE;gBACV,cAAc,EAAE,kBAAkB;gBAClC,OAAO,EAAE,kBAAkB;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,CAAC;iBAC3D;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA6B;IACrE,cAAc,EAAE,gCAAgC;IAChD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA6B;IAC5D,cAAc,EAAE,uBAAuB;IACvC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,6BAA6B,GAA6B;IACrE,cAAc,EAAE,gCAAgC;IAChD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,+BAA+B;QAC1C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,cAAc,EAAE,yBAAyB;IACzC,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,cAAc,EAAE,kCAAkC;IAClD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,4BAA4B,GAA6B;IACpE,cAAc,EAAE,+BAA+B;IAC/C,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8BAA8B;QACzC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,cAAc;gBAC9B,OAAO,EAAE,cAAc;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,OAAO,EAAE,MAAM;gBACf,IAAI,EAAE;oBACJ,IAAI,EAAE,iBAAiB;iBACxB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,aAAa;gBAC7B,OAAO,EAAE,aAAa;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,4BAA4B,EAAE;gBAC5B,cAAc,EAAE,+BAA+B;gBAC/C,OAAO,EAAE,+BAA+B;gBACxC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA6B;IAC7E,cAAc,EAAE,wCAAwC;IACxD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,iBAAiB;gBACjC,OAAO,EAAE,iBAAiB;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/2JF;;;;;;;AAQA,AAWO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,iBAAiB;QAC/B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAEC,qBAA2B;CACpC,CAAC;AAEF,AAAO,MAAM,MAAM,GAAuB;IACxC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,iBAAiB;QAC/B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,GAAG,GAA0B;IACxC,aAAa,EAAE,KAAK;IACpB,MAAM,EAAE;QACN,cAAc,EAAE,KAAK;QACrB,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,KAAK;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE;QACN,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA4B;IAC3C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA4B;IACvD,aAAa,EAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC;IAC9C,MAAM,EAAE;QACN,WAAW,EAAE;YACX,gBAAgB,EAAE,CAAC;SACpB;QACD,cAAc,EAAE,SAAS;QACzB,OAAO,EAAE,SAAS;QAClB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE;QACN,YAAY,EAAE,YAAY;QAC1B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,iBAAiB;QAC/B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,MAAM;QACpB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,QAAQ;QACxB,OAAO,EAAE,QAAQ;QACjB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,cAAc,EAAE,QAAQ;QACxB,OAAO,EAAE,QAAQ;QACjB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAA4B;IACjD,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,gBAAgB,EAAE,CAAC;SACpB;QACD,cAAc,EAAE,YAAY;QAC5B,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAA4B;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IACrC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,OAAO,EAAE,SAAS;QAClB,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE;YACJ,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,WAAW,EAAE,UAAU,EAAE,SAAS,CAAC;iBACpD;aACF;SACF;KACF;IACD,gBAAgB,EAAEC,8BAAqB,CAAC,GAAG;CAC5C,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA4B;IAC/C,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IACtC,MAAM,EAAE;QACN,cAAc,EAAE,WAAW;QAC3B,OAAO,EAAE,WAAW;QACpB,IAAI,EAAE;YACJ,IAAI,EAAE,YAAY;YAClB,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;SACpC;QACD,sBAAsB,EAAE,YAAY;KACrC;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;IACnC,MAAM,EAAE;QACN,WAAW,EAAE;YACX,gBAAgB,EAAE,CAAC;SACpB;QACD,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAE,kBAAkB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAE,kBAAkB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,sBAAsB,EAAE,KAAK,EAAE,MAAM,CAAC;SACvD;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAAuB;IAClD,aAAa,EAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC;IAC9C,MAAM,EAAE;QACN,cAAc,EAAE,wBAAwB;QACxC,OAAO,EAAE,wBAAwB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAE,kBAAkB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,cAAc,EAAE,YAAY,EAAE,WAAW,CAAC;SAC3D;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA4B;IACpD,aAAa,EAAE,CAAC,SAAS,EAAE,eAAe,CAAC;IAC3C,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,OAAO,EAAE,eAAe;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,CAAC,SAAS,EAAE,uBAAuB,EAAE,SAAS,CAAC;IAC9D,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,OAAO,EAAE,eAAe;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC;IAC7C,MAAM,EAAE;QACN,cAAc,EAAE,uBAAuB;QACvC,OAAO,EAAE,uBAAuB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC;SAC7C;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAAuB;IACxC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IACtC,MAAM,EAAE;QACN,cAAc,EAAE,qBAAqB;QACrC,OAAO,EAAE,qBAAqB;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,CAAC;IAC7C,MAAM,EAAE;QACN,cAAc,EAAE,wBAAwB;QACxC,OAAO,EAAE,wBAAwB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAAuB;IAC3C,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;IACvC,MAAM,EAAE;QACN,cAAc,EAAE,wBAAwB;QACxC,OAAO,EAAE,wBAAwB;QACjC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,SAAS;QACvB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE;QACN,cAAc,EAAE,eAAe;QAC/B,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,eAAe;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,QAAQ;QACtB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,mBAAmB;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,OAAO,EAAE,yBAAyB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,UAAU;QACxB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,iBAAiB;IAChC,MAAM,EAAEC,eAAqB;CAC9B,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,gBAAgB;QAC9B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAAuB;IACnD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,0BAA0B;QAC1C,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,0BAA0B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,UAAU;QACxB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,KAAK;QACnB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;IACtC,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,OAAO,EAAE,mBAAmB;QAC5B,YAAY,EAAE,IAAI;QAClB,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,kBAAkB;iBAC9B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,UAAU;QACxB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAAuB;IAClD,aAAa,EAAE,CAAC,SAAS,EAAE,kBAAkB,CAAC;IAC9C,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,OAAO,EAAE,yBAAyB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,CAAC,SAAS,EAAE,qBAAqB,CAAC;IACjD,MAAM,EAAE;QACN,cAAc,EAAE,4BAA4B;QAC5C,OAAO,EAAE,4BAA4B;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA4B;IAC/C,aAAa,EAAE,SAAS;IACxB,MAAM,EAAE;QACN,YAAY,EAAE,WAAW;QACzB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,SAAS;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAAuB;IAChD,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC;IAC5C,MAAM,EAAE;QACN,cAAc,EAAE,sBAAsB;QACtC,OAAO,EAAE,sBAAsB;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE,CAAC,SAAS,EAAE,mBAAmB,CAAC;IAC/C,MAAM,EAAE;QACN,cAAc,EAAE,0BAA0B;QAC1C,OAAO,EAAE,0BAA0B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAAuB;IAChD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,cAAc,EAAE,sBAAsB;QACtC,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,sBAAsB;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAAuB;IAC/C,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,yBAAyB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,iBAAiB;IAChC,MAAM,EAAE;QACN,cAAc,EAAE,2BAA2B;QAC3C,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,2BAA2B;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA4B;IAC/C,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;IACrC,MAAM,EAAE;QACN,cAAc,EAAE,SAAS;QACzB,OAAO,EAAE,SAAS;QAClB,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE;YACJ,IAAI,EAAE,UAAU;YAChB,OAAO,EAAE;gBACP,IAAI,EAAE;oBACJ,IAAI,EAAE,MAAM;oBACZ,aAAa,EAAE,CAAC,YAAY,EAAE,MAAM,EAAE,YAAY,EAAE,eAAe,CAAC;iBACrE;aACF;SACF;KACF;IACD,gBAAgB,EAAED,8BAAqB,CAAC,GAAG;CAC5C,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,CAAC,SAAS,EAAE,qBAAqB,CAAC;IACjD,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,OAAO,EAAE,yBAAyB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAA4B;IAC5C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,aAAa;QAC3B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAAuB;IAC3C,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;IACvC,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,OAAO,EAAE,gBAAgB;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,mBAAmB;QACjC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,QAAQ,GAAuB;IAC1C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,gBAAgB;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAAuB;IACnD,aAAa,EAAE,mBAAmB;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,qBAAqB;QACrC,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,qBAAqB;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAAuB;IAClD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,YAAY,EAAE,MAAM;QACpB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,WAAW;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,iBAAiB,CAAC;IAChE,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,OAAO,EAAE,mBAAmB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,qBAAqB,CAAC;IACpE,MAAM,EAAE;QACN,cAAc,EAAE,uBAAuB;QACvC,OAAO,EAAE,uBAAuB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,qBAAqB,CAAC;IACpE,MAAM,EAAE;QACN,cAAc,EAAE,uBAAuB;QACvC,OAAO,EAAE,uBAAuB;QAChC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAAuB;IAClD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,kBAAkB,CAAC;IACjE,MAAM,EAAE;QACN,cAAc,EAAE,oBAAoB;QACpC,OAAO,EAAE,oBAAoB;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAAuB;IAChD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;IAC/D,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,OAAO,EAAE,kBAAkB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;SAClB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAAuB;IACxD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,wBAAwB,CAAC;IACvE,MAAM,EAAE;QACN,cAAc,EAAE,0BAA0B;QAC1C,OAAO,EAAE,0BAA0B;QACnC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;IACnC,MAAM,EAAE;QACN,cAAc,EAAE,YAAY;QAC5B,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE,CAAC,SAAS,EAAE,oBAAoB,CAAC;IAChD,MAAM,EAAE;QACN,cAAc,EAAE,4BAA4B;QAC5C,OAAO,EAAE,4BAA4B;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE,CAAC,SAAS,EAAE,mBAAmB,CAAC;IAC/C,MAAM,EAAE;QACN,cAAc,EAAE,qBAAqB;QACrC,OAAO,EAAE,qBAAqB;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,0BAA0B;QACxC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAAuB;IACtC,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,MAAM;QACtB,OAAO,EAAE,MAAM;QACf,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,OAAO,GAAuB;IACzC,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,YAAY,EAAE,iBAAiB;QAC/B,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAAuB;IACxC,aAAa,EAAE,OAAO;IACtB,MAAM,EAAE;QACN,cAAc,EAAE,YAAY;QAC5B,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAAuB;IAChD,aAAa,EAAE,gBAAgB;IAC/B,MAAM,EAAE;QACN,YAAY,EAAE,QAAQ;QACtB,cAAc,EAAE,YAAY;QAC5B,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,YAAY;QACrB,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;SACnC;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAAuB;IAC/C,aAAa,EAAE,eAAe;IAC9B,MAAM,EAAE;QACN,cAAc,EAAE,gBAAgB;QAChC,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,gBAAgB;QACzB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;IACxC,MAAM,EAAE;QACN,cAAc,EAAE,aAAa;QAC7B,OAAO,EAAE,aAAa;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;SAClB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,UAAU,GAAuB;IAC5C,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,kBAAkB;QAC3B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,OAAO,EAAE,mBAAmB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qBAAqB,GAAuB;IACvD,aAAa,EAAE,uBAAuB;IACtC,MAAM,EAAE;QACN,YAAY,EAAE,QAAQ;QACtB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,YAAY;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE,CAAC,SAAS,EAAE,oBAAoB,CAAC;IAChD,MAAM,EAAE;QACN,cAAc,EAAE,2BAA2B;QAC3C,OAAO,EAAE,2BAA2B;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;SAClB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAAuB;IACpD,aAAa,EAAE;QACb,SAAS;QACT,gCAAgC;QAChC,oBAAoB;KACrB;IACD,MAAM,EAAE;QACN,cAAc,EAAE,4BAA4B;QAC5C,OAAO,EAAE,4BAA4B;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;SAClB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAAuB;IACxD,aAAa,EAAE;QACb,SAAS;QACT,gCAAgC;QAChC,wBAAwB;KACzB;IACD,MAAM,EAAE;QACN,cAAc,EAAE,iCAAiC;QACjD,OAAO,EAAE,iCAAiC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,WAAW;SAClB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAAuB;IACzD,aAAa,EAAE,CAAC,SAAS,EAAE,yBAAyB,CAAC;IACrD,MAAM,EAAE;QACN,cAAc,EAAE,gCAAgC;QAChD,OAAO,EAAE,gCAAgC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,WAAW;QACzB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA4B;IACxD,aAAa,EAAE,CAAC,SAAS,EAAE,mBAAmB,CAAC;IAC/C,MAAM,EAAE;QACN,cAAc,EAAE,mBAAmB;QACnC,OAAO,EAAE,mBAAmB;QAC5B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAAuB;IACxD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,wBAAwB,CAAC;IACvE,MAAM,EAAE;QACN,cAAc,EAAE,gCAAgC;QAChD,OAAO,EAAE,gCAAgC;QACzC,IAAI,EAAE;YACJ,IAAI,EAAE,MAAM;YACZ,aAAa,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;SACtC;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAAuB;IAChD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;IAC/D,MAAM,EAAE;QACN,cAAc,EAAE,iCAAiC;QACjD,OAAO,EAAE,iCAAiC;QAC1C,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAAuB;IACjD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,gBAAgB,CAAC;IAC/D,MAAM,EAAE;QACN,cAAc,EAAE,sBAAsB;QACtC,OAAO,EAAE,sBAAsB;QAC/B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAAuB;IAClD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,kBAAkB,CAAC;IACjE,MAAM,EAAE;QACN,cAAc,EAAE,yBAAyB;QACzC,OAAO,EAAE,yBAAyB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAAuB;IACnD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;IAClE,MAAM,EAAE;QACN,cAAc,EAAE,2BAA2B;QAC3C,OAAO,EAAE,2BAA2B;QACpC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAAuB;IACrD,aAAa,EAAE,CAAC,SAAS,EAAE,iBAAiB,EAAE,qBAAqB,CAAC;IACpE,MAAM,EAAE;QACN,cAAc,EAAE,4BAA4B;QAC5C,OAAO,EAAE,4BAA4B;QACrC,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,MAAM;IACrB,MAAM,EAAE;QACN,YAAY,EAAE,MAAM;QACpB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,QAAQ;IACvB,MAAM,EAAE;QACN,cAAc,EAAE,QAAQ;QACxB,QAAQ,EAAE,IAAI;QACd,OAAO,EAAE,QAAQ;QACjB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAAuB;IACzD,aAAa,EAAE,yBAAyB;IACxC,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,kBAAkB;QAClC,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;;ACznCF;;;;;;;AAQA,AAcA;AACA,MAAa,OAAO;;;;;IAOlB,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;IAQD,aAAa,CACX,UAAiC,EACjC,OAA4C;QAE5C,MAAM,kBAAkB,GAAgC;YACtD,UAAU;YACV,OAAO,EAAEE,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,0BAA0B,CACc,CAAC;KAC5C;;;;;;IAOD,aAAa,CACX,OAA4C;QAE5C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,0BAA0B,CACc,CAAC;KAC5C;;;;;;IAOD,iBAAiB,CACf,OAAgD;QAEhD,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,8BAA8B,CACc,CAAC;KAChD;CACF;AACD;AACA,MAAM,aAAa,GAAG,IAAIC,mBAAmB,CAAC,OAAO,cAAc,IAAI,CAAC,CAAC;AAEzE,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EAAE,GAAG;IACT,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEC,2BAAmC;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAEC,YAAoB;YAChC,aAAa,EAAEC,oCAA4C;SAC5D;KACF;IACD,WAAW,EAAEC,UAAqB;IAClC,eAAe,EAAE;QACfC,OAAkB;QAClBC,IAAe;QACfC,gBAA2B;KAC5B;IACD,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBC,WAAsB;QACtBC,MAAiB;QACjBC,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,WAAW,EAAE,gCAAgC;IAC7C,SAAS,EAAE,KAAK;IAChB,UAAU,EAAE,aAAa;CAC1B,CAAC;AACF,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EAAE,GAAG;IACT,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,qBAA6B;YACzC,aAAa,EAAEC,2BAAmC;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAEX,YAAoB;YAChC,aAAa,EAAEY,oCAA4C;SAC5D;KACF;IACD,eAAe,EAAE;QACfT,OAAkB;QAClBC,IAAe;QACfC,gBAA2B;KAC5B;IACD,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE,CAACG,OAAkB,EAAEI,OAAkB,CAAC;IAC1D,KAAK,EAAE,IAAI;IACX,UAAU,EAAE,aAAa;CAC1B,CAAC;AACF,MAAM,8BAA8B,GAA2B;IAC7D,IAAI,EAAE,GAAG;IACT,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,kBAA0B;YACtC,aAAa,EAAEC,+BAAuC;SACvD;QACD,OAAO,EAAE;YACP,UAAU,EAAEf,YAAoB;YAChC,aAAa,EAAEgB,wCAAgD;SAChE;KACF;IACD,eAAe,EAAE;QACfX,gBAA2B;QAC3BY,KAAgB;QAChBC,MAAiB;QACjBC,MAAiB;QACjBC,UAAqB;QACrBC,OAAkB;KACnB;IACD,aAAa,EAAE,CAACf,GAAc,CAAC;IAC/B,gBAAgB,EAAE,CAACG,OAAkB,EAAEI,OAAkB,CAAC;IAC1D,KAAK,EAAE,IAAI;IACX,UAAU,EAAE,aAAa;CAC1B,CAAC;;ACxKF;;;;;;;AAQA,AA0CA;AACA,MAAa,KAAK;;;;;IAOhB,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;IAOD,MAAM,CAAC,OAAmC;QACxC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEhB,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,mBAAmB,CACY,CAAC;KACnC;;;;;;IAOD,aAAa,CACX,OAA0C;QAE1C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClByB,4BAA0B,CACY,CAAC;KAC1C;;;;;;IAOD,MAAM,CAAC,OAAmC;QACxC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEzB,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,mBAAmB,CACY,CAAC;KACnC;;;;;;IAOD,YAAY,CACV,OAAyC;QAEzC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,yBAAyB,CACY,CAAC;KACzC;;;;;;;IAQD,YAAY,CACV,OAAe,EACf,OAAyC;QAEzC,MAAM,kBAAkB,GAAgC;YACtD,OAAO;YACP,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,yBAAyB,CACY,CAAC;KACzC;;;;;;;IAQD,WAAW,CACT,OAAe,EACf,OAAwC;QAExC,MAAM,kBAAkB,GAAgC;YACtD,OAAO;YACP,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,wBAAwB,CACY,CAAC;KACxC;;;;;;;IAQD,UAAU,CACR,OAAe,EACf,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO;YACP,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,uBAAuB,CACY,CAAC;KACvC;;;;;;IAOD,UAAU,CACR,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,uBAAuB,CACY,CAAC;KACvC;;;;;IAMD,cAAc,CACZ,OAA2C;QAE3C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,2BAA2B,CACY,CAAC;KAC3C;;;;;;IAOD,gBAAgB,CACd,eAAgC,EAChC,OAA6C;QAE7C,MAAM,kBAAkB,GAAgC;YACtD,eAAe;YACf,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,6BAA6B,CACY,CAAC;KAC7C;;;;;;IAOD,aAAa,CACX,iBAAyB,EACzB,OAA0C;QAE1C,MAAM,kBAAkB,GAAgC;YACtD,iBAAiB;YACjB,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,0BAA0B,CACY,CAAC;KAC1C;;;;;IAMD,aAAa,CACX,OAA0C;QAE1C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB0B,4BAA0B,CACY,CAAC;KAC1C;;;;;IAMD,WAAW,CACT,OAAwC;QAExC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAE1B,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,wBAAwB,CACY,CAAC;KACxC;;;;;IAMD,eAAe,CACb,OAA4C;QAE5C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,4BAA4B,CACY,CAAC;KAC5C;;;;;IAMD,eAAe,CACb,OAA4C;QAE5C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,4BAA4B,CACY,CAAC;KAC5C;;;;;IAMD,aAAa,CACX,OAA0C;QAE1C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,0BAA0B,CACY,CAAC;KAC1C;;;;;IAMD,OAAO,CAAC,OAAoC;QAC1C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,oBAAoB,CACY,CAAC;KACpC;CACF;AACD;AACA,MAAM2B,eAAa,GAAG,IAAI1B,mBAAmB,CAAC,OAAO,cAAc,IAAI,CAAC,CAAC;AAEzE,MAAM,UAAU,GAAG,IAAIA,mBAAmB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAEvE,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE2B,kBAA0B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzB,YAAoB;YAChC,aAAa,EAAE0B,2BAAmC;SACnD;KACF;IACD,eAAe,EAAE,CAACrB,gBAA2B,EAAEsB,QAAmB,CAAC;IACnE,aAAa,EAAE,CAACrB,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;QACnBC,KAAgB;QAChBC,UAAqB;QACrBC,gBAA2B;QAC3BC,UAAqB;KACtB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAER,eAAa;CAC1B,CAAC;AACF,MAAMF,4BAA0B,GAA2B;IACzD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEW,yBAAiC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjC,YAAoB;YAChC,aAAa,EAAEkC,kCAA0C;SAC1D;KACF;IACD,eAAe,EAAE;QACf7B,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;KACzB;IACD,aAAa,EAAE,CAAC7B,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEa,kBAA0B;SAC1C;QACD,OAAO,EAAE;YACP,UAAU,EAAErC,YAAoB;YAChC,aAAa,EAAEsC,2BAAmC;SACnD;KACF;IACD,eAAe,EAAE;QACfjC,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;KACzB;IACD,aAAa,EAAE,CAAC7B,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClBG,eAA0B;KAC3B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEf,eAAa;CAC1B,CAAC;AACF,MAAM,yBAAyB,GAA2B;IACxD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEgB,wBAAgC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAExC,YAAoB;YAChC,aAAa,EAAEyC,iCAAyC;SACzD;KACF;IACD,eAAe,EAAE;QACfpC,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;QACxBO,KAAgB;KACjB;IACD,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClB8B,MAAiB;QACjBC,QAAmB;QACnBC,eAA0B;QAC1BC,SAAoB;KACrB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEtB,eAAa;CAC1B,CAAC;AACF,MAAM,yBAAyB,GAA2B;IACxD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEuB,wBAAgC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAE/C,YAAoB;YAChC,aAAa,EAAEgD,iCAAyC;SACzD;KACF;IACD,eAAe,EAAE;QACf3C,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;QACxBO,KAAgB;KACjB;IACD,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBiC,SAAoB;QACpBG,OAAkB;QAClBC,QAAmB;KACpB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE1B,eAAa;CAC1B,CAAC;AACF,MAAM,wBAAwB,GAA2B;IACvD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE2B,uBAA+B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnD,YAAoB;YAChC,aAAa,EAAEoD,gCAAwC;SACxD;KACF;IACD,eAAe,EAAE;QACf/C,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;QACxBO,KAAgB;KACjB;IACD,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBgC,eAA0B;QAC1BC,SAAoB;QACpBI,QAAmB;QACnBG,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE7B,eAAa;CAC1B,CAAC;AACF,MAAM,uBAAuB,GAA2B;IACtD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE8B,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEtD,YAAoB;YAChC,aAAa,EAAEuD,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE;QACflD,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;QACxBO,KAAgB;KACjB;IACD,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBiC,SAAoB;QACpBI,QAAmB;QACnBM,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEhC,eAAa;CAC1B,CAAC;AACF,MAAM,uBAAuB,GAA2B;IACtD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEiC,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzD,YAAoB;YAChC,aAAa,EAAE0D,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE;QACfrD,gBAA2B;QAC3BsB,QAAmB;QACnBQ,aAAwB;QACxBO,KAAgB;KACjB;IACD,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClBU,SAAoB;QACpBa,OAAkB;QAClBC,WAAsB;KACvB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEpC,eAAa;CAC1B,CAAC;AACF,MAAM,2BAA2B,GAA2B;IAC1D,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEqC,0BAAkC;SAClD;QACD,OAAO,EAAE;YACP,UAAU,EAAE7D,YAAoB;YAChC,aAAa,EAAE8D,mCAA2C;SAC3D;KACF;IACD,eAAe,EAAE;QACfzD,gBAA2B;QAC3BsB,QAAmB;QACnBoC,KAAgB;KACjB;IACD,aAAa,EAAE,CAACzD,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;KACpB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEJ,eAAa;CAC1B,CAAC;AACF,MAAM,6BAA6B,GAA2B;IAC5D,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEwC,4BAAoC;SACpD;QACD,OAAO,EAAE;YACP,UAAU,EAAEhE,YAAoB;YAChC,aAAa,EAAEiE,qCAA6C;SAC7D;KACF;IACD,WAAW,EAAEC,eAA0B;IACvC,eAAe,EAAE;QACf7D,gBAA2B;QAC3BsB,QAAmB;QACnBwC,KAAgB;KACjB;IACD,aAAa,EAAE,CAAC7D,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBC,WAAsB;QACtBC,MAAiB;QACjBC,OAAkB;KACnB;IACD,KAAK,EAAE,KAAK;IACZ,WAAW,EAAE,gCAAgC;IAC7C,UAAU,EAAEe,eAAa;CAC1B,CAAC;AACF,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4C,eAAuB;YACnC,aAAa,EAAEC,yBAAiC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAErE,YAAoB;YAChC,aAAa,EAAEsE,kCAA0C;SAC1D;KACF;IACD,eAAe,EAAE;QACfjE,gBAA2B;QAC3BsB,QAAmB;QACnBwC,KAAgB;KACjB;IACD,aAAa,EAAE,CAAC7D,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClB8D,OAAkB;QAClBC,iBAA4B;KAC7B;IACD,UAAU;CACX,CAAC;AACF,MAAMjD,4BAA0B,GAA2B;IACzD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEkD,yBAAiC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEzE,YAAoB;YAChC,aAAa,EAAE0E,kCAA0C;SAC1D;KACF;IACD,eAAe,EAAE;QACftE,IAAe;QACfC,gBAA2B;QAC3BsB,QAAmB;KACpB;IACD,aAAa,EAAE,CAACrB,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBgB,KAAgB;QAChBC,UAAqB;QACrBE,UAAqB;QACrBI,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,wBAAwB,GAA2B;IACvD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEmD,uBAA+B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3E,YAAoB;YAChC,aAAa,EAAE4E,gCAAwC;SACxD;KACF;IACD,eAAe,EAAE;QACfvE,gBAA2B;QAC3BsB,QAAmB;QACnBkD,KAAgB;KACjB;IACD,aAAa,EAAE,CAACvE,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;QACnBQ,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,4BAA4B,GAA2B;IAC3D,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,kBAAkB,EAAE;qBAC3D;iBACF;gBACD,cAAc,EAAE,mBAAmB;gBACnC,OAAO,EAAE,mBAAmB;gBAC5B,YAAY,EAAE,IAAI;gBAClB,cAAc,EAAE,kBAAkB;aACnC;YACD,aAAa,EAAEsD,2BAAmC;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE9E,YAAoB;YAChC,aAAa,EAAE+E,oCAA4C;SAC5D;KACF;IACD,eAAe,EAAE;QACf1E,gBAA2B;QAC3BsB,QAAmB;QACnBqD,KAAgB;KACjB;IACD,aAAa,EAAE,CAAC1E,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,4BAA4B,GAA2B;IAC3D,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEyD,2BAAmC;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAEjF,YAAoB;YAChC,aAAa,EAAEkF,oCAA4C;SAC5D;KACF;IACD,WAAW,EAAEC,QAAmB;IAChC,eAAe,EAAE;QACf9E,gBAA2B;QAC3BsB,QAAmB;QACnBqD,KAAgB;KACjB;IACD,aAAa,EAAE,CAAC1E,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBC,WAAsB;QACtBC,MAAiB;QACjBC,OAAkB;QAClB2B,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,WAAW,EAAE,gCAAgC;IAC7C,SAAS,EAAE,KAAK;IAChB,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4D,UAAkB;YAC9B,aAAa,EAAEC,yBAAiC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAErF,YAAoB;YAChC,aAAa,EAAEsF,kCAA0C;SAC1D;KACF;IACD,eAAe,EAAE;QACfjF,gBAA2B;QAC3BsB,QAAmB;QACnB4D,KAAgB;KACjB;IACD,aAAa,EAAE,CAACjF,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,oBAAoB,GAA2B;IACnD,IAAI,EAAE,cAAc;IACpB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEgE,mBAA2B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAExF,YAAoB;YAChC,aAAa,EAAEyF,4BAAoC;SACpD;KACF;IACD,eAAe,EAAE;QACfpF,gBAA2B;QAC3BsB,QAAmB;QACnB+D,KAAgB;KACjB;IACD,aAAa,EAAE,CAACpF,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBiC,SAAoB;QACpB6C,gBAA2B;QAC3BC,mBAA8B;KAC/B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEpE,eAAa;CAC1B,CAAC;;ACz0BF;;;;;;;AAQA,AAuBA;AACA,MAAa,SAAS;;;;;IAOpB,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;IAUD,MAAM,CACJ,cAAsB,EACtB,aAAqB,EACrB,eAAuB,EACvB,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,cAAc;YACd,aAAa;YACb,eAAe;YACf,OAAO,EAAE3B,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBgG,qBAAmB,CACgB,CAAC;KACvC;;;;;;;IAQD,aAAa,CACX,OAA8C;QAE9C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEhG,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClByB,4BAA0B,CACgB,CAAC;KAC9C;;;;;;IAOD,MAAM,CACJ,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEzB,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBiG,qBAAmB,CACgB,CAAC;KACvC;;;;;;;;;IAUD,aAAa,CACX,cAAsB,EACtB,aAAqB,EACrB,eAAuB,EACvB,OAA8C;QAE9C,MAAM,kBAAkB,GAAgC;YACtD,cAAc;YACd,aAAa;YACb,eAAe;YACf,OAAO,EAAEjG,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB0B,4BAA0B,CACgB,CAAC;KAC9C;;;;;IAMD,WAAW,CACT,OAA4C;QAE5C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAE1B,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBkG,0BAAwB,CACgB,CAAC;KAC5C;;;;;;IAOD,8BAA8B,CAC5B,OAA+D;QAE/D,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAElG,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,2CAA2C,CACgB,CAAC;KAC/D;;;;;IAMD,WAAW,CACT,OAA4C;QAE5C,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,wBAAwB,CACgB,CAAC;KAC5C;;;;;;;IAQD,iBAAiB,CACf,QAAgB,EAChB,OAAkD;QAElD,MAAM,kBAAkB,GAAgC;YACtD,QAAQ;YACR,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,8BAA8B,CACgB,CAAC;KAClD;CACF;AACD;AACA,MAAM2B,eAAa,GAAG,IAAI1B,mBAAmB,CAAC,OAAO,cAAc,IAAI,CAAC,CAAC;AAEzE,MAAM+F,qBAAmB,GAA2B;IAClD,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEG,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEhG,YAAoB;YAChC,aAAa,EAAEiG,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE,CAAC5F,gBAA2B,EAAE6F,QAAmB,CAAC;IACnE,aAAa,EAAE,CAAC5F,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;QACnBuE,cAAyB;QACzBC,kBAA6B;QAC7BC,cAAyB;QACzBC,aAAwB;QACxBC,eAA0B;KAC3B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE/E,eAAa;CAC1B,CAAC;AACF,MAAMF,4BAA0B,GAA2B;IACzD,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEkF,6BAAqC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAExG,YAAoB;YAChC,aAAa,EAAEyG,sCAA8C;SAC9D;KACF;IACD,eAAe,EAAE;QACfpG,gBAA2B;QAC3B8B,aAAwB;QACxB+D,QAAmB;KACpB;IACD,aAAa,EAAE,CAAC5F,GAAc,CAAC;IAC/B,gBAAgB,EAAE,CAACG,OAAkB,EAAEI,OAAkB,CAAC;IAC1D,KAAK,EAAE,IAAI;IACX,UAAU,EAAEW,eAAa;CAC1B,CAAC;AACF,MAAMsE,qBAAmB,GAA2B;IAClD,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEY,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1G,YAAoB;YAChC,aAAa,EAAE2G,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE,CAACtG,gBAA2B,EAAE6F,QAAmB,CAAC;IACnE,aAAa,EAAE,CAAC5F,GAAc,CAAC;IAC/B,gBAAgB,EAAE,CAACG,OAAkB,EAAEI,OAAkB,CAAC;IAC1D,KAAK,EAAE,IAAI;IACX,UAAU,EAAEW,eAAa;CAC1B,CAAC;AACF,MAAMD,4BAA0B,GAA2B;IACzD,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEqF,6BAAqC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAE5G,YAAoB;YAChC,aAAa,EAAE6G,sCAA8C;SAC9D;KACF;IACD,eAAe,EAAE;QACfzG,IAAe;QACfC,gBAA2B;QAC3B6F,QAAmB;KACpB;IACD,aAAa,EAAE,CAAC5F,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBsF,cAAyB;QACzBC,kBAA6B;QAC7BC,cAAyB;QACzBC,aAAwB;QACxBC,eAA0B;KAC3B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE/E,eAAa;CAC1B,CAAC;AACF,MAAMuE,0BAAwB,GAA2B;IACvD,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEe,2BAAmC;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAE9G,YAAoB;YAChC,aAAa,EAAE+G,oCAA4C;SAC5D;KACF;IACD,eAAe,EAAE;QACf1G,gBAA2B;QAC3BwE,KAAgB;QAChBqB,QAAmB;KACpB;IACD,aAAa,EAAE,CAAC5F,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;KACpB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEJ,eAAa;CAC1B,CAAC;AACF,MAAM,2CAA2C,GAA2B;IAC1E,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwF,sCAA8C;YAC1D,aAAa,EAAEC,8CAAsD;SACtE;QACD,OAAO,EAAE;YACP,UAAU,EAAEjH,YAAoB;YAChC,aAAa,EACXkH,uDAA+D;SAClE;KACF;IACD,eAAe,EAAE;QACf7G,gBAA2B;QAC3BY,KAAgB;QAChBC,MAAiB;QACjBC,MAAiB;QACjBC,UAAqB;QACrBe,aAAwB;QACxB+D,QAAmB;QACnBiB,QAAmB;KACpB;IACD,aAAa,EAAE,CAAC7G,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuG,mBAA8B;KAC/B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE5F,eAAa;CAC1B,CAAC;AACF,MAAM,wBAAwB,GAA2B;IACvD,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6F,mBAA2B;YACvC,aAAa,EAAEC,2BAAmC;SACnD;QACD,OAAO,EAAE;YACP,UAAU,EAAEtH,YAAoB;YAChC,aAAa,EAAEuH,oCAA4C;SAC5D;KACF;IACD,eAAe,EAAE;QACflH,gBAA2B;QAC3Bc,MAAiB;QACjBC,UAAqB;QACrBe,aAAwB;QACxBqF,KAAgB;KACjB;IACD,aAAa,EAAE,CAAClH,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClB4G,SAAoB;KACrB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEjG,eAAa;CAC1B,CAAC;AACF,MAAM,8BAA8B,GAA2B;IAC7D,IAAI,EAAE,0BAA0B;IAChC,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEkG,iCAAyC;SACzD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1H,YAAoB;YAChC,aAAa,EAAE2H,0CAAkD;SAClE;KACF;IACD,eAAe,EAAE;QACftH,gBAA2B;QAC3Bc,MAAiB;QACjBgB,aAAwB;QACxByF,MAAiB;KAClB;IACD,aAAa,EAAE,CAACtH,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClB4G,SAAoB;QACpBI,QAAmB;KACpB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAErG,eAAa;CAC1B,CAAC;;AC9ZF;;;;;;;AAQA,AA0CA;AACA,MAAa,IAAI;;;;;IAOf,YAAY,MAA4B;QACtC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;;;;;;IAWD,MAAM,CACJ,iBAAyB,EACzB,cAAsB,EACtB,aAAqB,EACrB,eAAuB,EACvB,OAAkC;QAElC,MAAM,kBAAkB,GAAgC;YACtD,iBAAiB;YACjB,cAAc;YACd,aAAa;YACb,eAAe;YACf,OAAO,EAAE3B,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBgG,qBAAmB,CACW,CAAC;KAClC;;;;;IAMD,QAAQ,CACN,OAAoC;QAEpC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEhG,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,qBAAqB,CACW,CAAC;KACpC;;;;;;IAOD,aAAa,CACX,OAAyC;QAEzC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClByB,4BAA0B,CACW,CAAC;KACzC;;;;;IAMD,MAAM,CAAC,OAAkC;QACvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEzB,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBiG,qBAAmB,CACW,CAAC;KAClC;;;;;;;;;IAUD,cAAc,CACZ,cAAsB,EACtB,aAAqB,EACrB,eAAuB,EACvB,OAA0C;QAE1C,MAAM,kBAAkB,GAAgC;YACtD,cAAc;YACd,aAAa;YACb,eAAe;YACf,OAAO,EAAEjG,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,2BAA2B,CACW,CAAC;KAC1C;;;;;IAMD,WAAW,CACT,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBkG,0BAAwB,CACW,CAAC;KACvC;;;;;;IAOD,YAAY,CACV,OAAwC;QAExC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAElG,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBiI,2BAAyB,CACW,CAAC;KACxC;;;;;;;IAQD,YAAY,CACV,OAAe,EACf,OAAwC;QAExC,MAAM,kBAAkB,GAAgC;YACtD,OAAO;YACP,OAAO,EAAEjI,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBkI,2BAAyB,CACW,CAAC;KACxC;;;;;;;IAQD,WAAW,CACT,OAAe,EACf,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO;YACP,OAAO,EAAElI,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBmI,0BAAwB,CACW,CAAC;KACvC;;;;;;IAOD,UAAU,CACR,OAAsC;QAEtC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEnI,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBoI,yBAAuB,CACW,CAAC;KACtC;;;;;;;;;;;;;;;;;IAkBD,WAAW,CACT,KAAa,EACb,cAAkC,EAClC,aAAqB,EACrB,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,KAAK;YACL,cAAc;YACd,aAAa;YACb,OAAO,EAAEpI,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,wBAAwB,CACW,CAAC;KACvC;;;;;;;;;;;;;;IAeD,kBAAkB,CAChB,KAAa,EACb,UAAkB,EAClB,aAAqB,EACrB,OAA8C;QAE9C,MAAM,kBAAkB,GAAgC;YACtD,KAAK;YACL,UAAU;YACV,aAAa;YACb,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,+BAA+B,CACW,CAAC;KAC9C;;;;;IAMD,YAAY,CACV,OAAwC;QAExC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,yBAAyB,CACW,CAAC;KACxC;;;;;;;;;;;IAYD,SAAS,CACP,UAAkB,EAClB,OAAqC;QAErC,MAAM,kBAAkB,GAAgC;YACtD,UAAU;YACV,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,sBAAsB,CACW,CAAC;KACrC;;;;;;;;IASD,SAAS,CACP,MAAc,EACd,OAAqC;QAErC,MAAM,kBAAkB,GAAgC;YACtD,MAAM;YACN,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClB,sBAAsB,CACW,CAAC;KACrC;;;;;IAMD,WAAW,CACT,OAAuC;QAEvC,MAAM,kBAAkB,GAAgC;YACtD,OAAO,EAAEA,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBqI,0BAAwB,CACW,CAAC;KACvC;;;;;;;IAQD,iBAAiB,CACf,QAAgB,EAChB,OAA6C;QAE7C,MAAM,kBAAkB,GAAgC;YACtD,QAAQ;YACR,OAAO,EAAErI,6CAA6C,CAAC,OAAO,IAAI,EAAE,CAAC;SACtE,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,kBAAkB,EAClBsI,gCAA8B,CACW,CAAC;KAC7C;CACF;AACD;AACA,MAAM3G,eAAa,GAAG,IAAI1B,mBAAmB,CAAC,OAAO,cAAc,IAAI,CAAC,CAAC;AAEzE,MAAM+F,qBAAmB,GAA2B;IAClD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEuC,iBAAyB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEpI,YAAoB;YAChC,aAAa,EAAEqI,0BAAkC;SAClD;KACF;IACD,eAAe,EAAE,CAAChI,gBAA2B,CAAC;IAC9C,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;QACnBQ,OAAkB;QAClB+D,cAAyB;QACzBC,kBAA6B;QAC7BC,cAAyB;QACzBC,aAAwB;QACxBC,eAA0B;QAC1B+B,iBAA4B;QAC5BC,gBAA2B;QAC3BC,eAA0B;QAC1BC,mBAA8B;QAC9BC,mBAA8B;QAC9BC,gBAA2B;QAC3BC,cAAyB;QACzBC,sBAAiC;KAClC;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAErH,eAAa;CAC1B,CAAC;AACF,MAAM,qBAAqB,GAA2B;IACpD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;YACD,aAAa,EAAEsH,mBAA2B;SAC3C;QACD,GAAG,EAAE;YACH,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE;gBACxB,cAAc,EAAE,gBAAgB;aACjC;YACD,aAAa,EAAEA,mBAA2B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE9I,YAAoB;YAChC,aAAa,EAAE+I,4BAAoC;SACpD;KACF;IACD,eAAe,EAAE,CAAC1I,gBAA2B,CAAC;IAC9C,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClB4G,KAAgB;QAChBC,kBAA6B;KAC9B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEzH,eAAa;CAC1B,CAAC;AACF,MAAMF,4BAA0B,GAA2B;IACzD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE4H,wBAAgC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAElJ,YAAoB;YAChC,aAAa,EAAEmJ,iCAAyC;SACzD;KACF;IACD,eAAe,EAAE,CAAC9I,gBAA2B,EAAE8B,aAAwB,CAAC;IACxE,aAAa,EAAE,CAAC7B,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAMsE,qBAAmB,GAA2B;IAClD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEsD,iBAAyB;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEpJ,YAAoB;YAChC,aAAa,EAAEqJ,0BAAkC;SAClD;KACF;IACD,eAAe,EAAE,CAAChJ,gBAA2B,CAAC;IAC9C,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAM,2BAA2B,GAA2B;IAC1D,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE8H,yBAAiC;SACjD;QACD,OAAO,EAAE;YACP,UAAU,EAAEtJ,YAAoB;YAChC,aAAa,EAAEuJ,kCAA0C;SAC1D;KACF;IACD,eAAe,EAAE,CAACnJ,IAAe,EAAEC,gBAA2B,CAAC;IAC/D,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClB+D,cAAyB;QACzBC,kBAA6B;QAC7BC,cAAyB;QACzBC,aAAwB;QACxBC,eAA0B;QAC1BiC,eAA0B;QAC1BC,mBAA8B;QAC9BC,mBAA8B;QAC9BC,gBAA2B;QAC3BC,cAAyB;QACzBC,sBAAiC;QACjCW,kBAA6B;KAC9B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEhI,eAAa;CAC1B,CAAC;AACF,MAAMuE,0BAAwB,GAA2B;IACvD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE0D,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEzJ,YAAoB;YAChC,aAAa,EAAE0J,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE,CAACrJ,gBAA2B,EAAEwE,KAAgB,CAAC;IAChE,aAAa,EAAE,CAACvE,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;QACnBQ,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEZ,eAAa;CAC1B,CAAC;AACF,MAAMsG,2BAAyB,GAA2B;IACxD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE6B,uBAA+B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3J,YAAoB;YAChC,aAAa,EAAE4J,gCAAwC;SACxD;KACF;IACD,eAAe,EAAE,CAACvJ,gBAA2B,EAAEqC,KAAgB,CAAC;IAChE,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClB8B,MAAiB;QACjBC,QAAmB;QACnBC,eAA0B;QAC1BC,SAAoB;KACrB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEtB,eAAa;CAC1B,CAAC;AACF,MAAMuG,2BAAyB,GAA2B;IACxD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE8B,uBAA+B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAE7J,YAAoB;YAChC,aAAa,EAAE8J,gCAAwC;SACxD;KACF;IACD,eAAe,EAAE,CAACzJ,gBAA2B,EAAEqC,KAAgB,CAAC;IAChE,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBiC,SAAoB;QACpBG,OAAkB;QAClBC,QAAmB;KACpB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE1B,eAAa;CAC1B,CAAC;AACF,MAAMwG,0BAAwB,GAA2B;IACvD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE+B,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAE/J,YAAoB;YAChC,aAAa,EAAEgK,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE,CAAC3J,gBAA2B,EAAEqC,KAAgB,CAAC;IAChE,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBgC,eAA0B;QAC1BC,SAAoB;QACpBI,QAAmB;QACnBG,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE7B,eAAa;CAC1B,CAAC;AACF,MAAMyG,yBAAuB,GAA2B;IACtD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEgC,qBAA6B;SAC7C;QACD,OAAO,EAAE;YACP,UAAU,EAAEjK,YAAoB;YAChC,aAAa,EAAEkK,8BAAsC;SACtD;KACF;IACD,eAAe,EAAE,CAAC7J,gBAA2B,EAAEqC,KAAgB,CAAC;IAChE,aAAa,EAAE,CAACpC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClBU,SAAoB;QACpBa,OAAkB;KACnB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAEnC,eAAa;CAC1B,CAAC;AACF,MAAM,wBAAwB,GAA2B;IACvD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE2I,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnK,YAAoB;YAChC,aAAa,EAAEoK,+BAAuC;SACvD;KACF;IACD,WAAW,EAAEC,IAAe;IAC5B,eAAe,EAAE,CAAChK,gBAA2B,EAAEiK,MAAiB,CAAC;IACjE,aAAa,EAAE,CAAChK,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClB2B,OAAkB;QAClBmI,YAAuB;QACvBC,OAAkB;QAClBC,MAAiB;QACjBC,cAAyB;QACzBC,aAAwB;QACxBC,UAAqB;KACtB;IACD,WAAW,EAAE,0BAA0B;IACvC,KAAK,EAAE,IAAI;IACX,UAAU,EAAEpJ,eAAa;CAC1B,CAAC;AACF,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEqJ,6BAAqC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAE7K,YAAoB;YAChC,aAAa,EAAE8K,sCAA8C;SAC9D;KACF;IACD,eAAe,EAAE,CAACzK,gBAA2B,EAAEiK,MAAiB,CAAC;IACjE,aAAa,EAAE,CAAChK,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClBqI,MAAiB;QACjBE,aAAwB;QACxBI,UAAqB;QACrBC,WAAsB;QACtBC,qBAAgC;QAChCC,kBAA6B;QAC7BC,kBAA6B;QAC7BC,sBAAiC;QACjCC,uBAAkC;KACnC;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE7J,eAAa;CAC1B,CAAC;AACF,MAAM,yBAAyB,GAA2B;IACxD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE8J,kBAA0B;YACtC,aAAa,EAAEC,uBAA+B;SAC/C;QACD,OAAO,EAAE;YACP,UAAU,EAAEvL,YAAoB;YAChC,aAAa,EAAEwL,gCAAwC;SACxD;KACF;IACD,eAAe,EAAE;QACfnL,gBAA2B;QAC3B8B,aAAwB;QACxBsJ,MAAiB;QACjBC,iBAA4B;KAC7B;IACD,aAAa,EAAE,CAACpL,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClB4G,KAAgB;KACjB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAExH,eAAa;CAC1B,CAAC;AACF,MAAM,sBAAsB,GAA2B;IACrD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEmK,oBAA4B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAE3L,YAAoB;YAChC,aAAa,EAAE4L,6BAAqC;SACrD;KACF;IACD,eAAe,EAAE,CAACvL,gBAA2B,CAAC;IAC9C,aAAa,EAAE,CAACC,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBe,QAAmB;QACnBQ,OAAkB;QAClB+D,cAAyB;QACzBC,kBAA6B;QAC7B2E,UAAqB;QACrBc,sBAAiC;QACjCC,cAAyB;QACzBC,eAA0B;QAC1BC,gBAA2B;QAC3BC,iBAA4B;QAC5BC,mBAA8B;KAC/B;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE1K,eAAa;CAC1B,CAAC;AACF,MAAM,sBAAsB,GAA2B;IACrD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAE2K,oBAA4B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnM,YAAoB;YAChC,aAAa,EAAEoM,6BAAqC;SACrD;KACF;IACD,eAAe,EAAE;QACf/L,gBAA2B;QAC3BgM,MAAiB;QACjBC,MAAiB;KAClB;IACD,aAAa,EAAE,CAAChM,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBuB,OAAkB;QAClBmK,uBAAkC;KACnC;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAE/K,eAAa;CAC1B,CAAC;AACF,MAAM0G,0BAAwB,GAA2B;IACvD,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEb,mBAA2B;YACvC,aAAa,EAAEmF,sBAA8B;SAC9C;QACD,OAAO,EAAE;YACP,UAAU,EAAExM,YAAoB;YAChC,aAAa,EAAEyM,+BAAuC;SACvD;KACF;IACD,eAAe,EAAE;QACfpM,gBAA2B;QAC3Bc,MAAiB;QACjBC,UAAqB;QACrBe,aAAwB;QACxBqF,KAAgB;KACjB;IACD,aAAa,EAAE,CAAClH,GAAc,CAAC;IAC/B,gBAAgB,EAAE,CAACG,OAAkB,EAAEI,OAAkB,CAAC;IAC1D,KAAK,EAAE,IAAI;IACX,UAAU,EAAEW,eAAa;CAC1B,CAAC;AACF,MAAM2G,gCAA8B,GAA2B;IAC7D,IAAI,EAAE,qCAAqC;IAC3C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,aAAa,EAAEuE,4BAAoC;SACpD;QACD,OAAO,EAAE;YACP,UAAU,EAAE1M,YAAoB;YAChC,aAAa,EAAE2M,qCAA6C;SAC7D;KACF;IACD,eAAe,EAAE;QACftM,gBAA2B;QAC3Bc,MAAiB;QACjBgB,aAAwB;QACxByF,MAAiB;KAClB;IACD,aAAa,EAAE,CAACtH,GAAc,CAAC;IAC/B,gBAAgB,EAAE;QAChBG,OAAkB;QAClBI,OAAkB;QAClBgH,QAAmB;KACpB;IACD,KAAK,EAAE,IAAI;IACX,UAAU,EAAErG,eAAa;CAC1B,CAAC;;ACx3BF;AACA,AAIA;;;AAGA,MAAa,MAAM,GAAGoL,2BAAkB,CAAC,oBAAoB,CAAC;;ACR9D;AACA,AAcA;;;;;;;;;;;AAWA,MAAa,oBAAqB,SAAQC,0BAAiB;;;;;;;;IAQzD,YAAY,UAAyB,EAAE,OAA6B;QAClE,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAC5B;;;;;;IAOM,MAAM,WAAW,CAAC,OAAoB;QAC3C,AAAY;YACV,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC9C;KAgBF;CACF;;AC/DD;AACA,AAMA;;;AAGA,MAAa,2BAA2B;;;;;;;IAO/B,MAAM,CAAC,UAAyB,EAAE,OAA6B;QACpE,OAAO,IAAI,oBAAoB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KACtD;CACF;;ACpBD;AACA,AAsCA,WAAY,sBAAsB;;;;IAIhC,iFAAW,CAAA;;;;IAIX,qEAAK,CAAA;AACP,CAAC,EATWC,8BAAsB,KAAtBA,8BAAsB,QASjC;AAED;AACA,MAAM,qBAAqB,GAAwB;IACjD,iBAAiB,EAAE,GAAG,GAAG,IAAI;IAC7B,QAAQ,EAAE,CAAC;IACX,cAAc,EAAE,CAAC,GAAG,IAAI;IACxB,eAAe,EAAEA,8BAAsB,CAAC,WAAW;IACnD,cAAc,EAAE,SAAS;CAC1B,CAAC;AAEF,MAAM,iBAAiB,GAAG,IAAIC,0BAAU,CAAC,4BAA4B,CAAC,CAAC;AAEvE;;;AAGA,MAAa,kBAAmB,SAAQF,0BAAiB;;;;;;;;IAavD,YACE,UAAyB,EACzB,OAA6B,EAC7B,eAAoC,qBAAqB;QAEzD,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;;QAG3B,IAAI,CAAC,YAAY,GAAG;YAClB,eAAe,EAAE,YAAY,CAAC,eAAe;kBACzC,YAAY,CAAC,eAAe;kBAC5B,qBAAqB,CAAC,eAAe;YAEzC,QAAQ,EACN,YAAY,CAAC,QAAQ,IAAI,YAAY,CAAC,QAAQ,IAAI,CAAC;kBAC/C,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC;kBACjC,qBAAqB,CAAC,QAAQ;YAEpC,cAAc,EACZ,YAAY,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc,IAAI,CAAC;kBAC3D,YAAY,CAAC,cAAc;kBAC3B,qBAAqB,CAAC,cAAc;YAE1C,cAAc,EACZ,YAAY,CAAC,cAAc,IAAI,YAAY,CAAC,cAAc,IAAI,CAAC;kBAC3D,IAAI,CAAC,GAAG,CACN,YAAY,CAAC,cAAc,EAC3B,YAAY,CAAC,iBAAiB;sBAC1B,YAAY,CAAC,iBAAiB;sBAC9B,qBAAqB,CAAC,iBAAkB,CAC7C;kBACD,qBAAqB,CAAC,cAAc;YAE1C,iBAAiB,EACf,YAAY,CAAC,iBAAiB,IAAI,YAAY,CAAC,iBAAiB,IAAI,CAAC;kBACjE,YAAY,CAAC,iBAAiB;kBAC9B,qBAAqB,CAAC,iBAAiB;SAC9C,CAAC;KACH;;;;;;IAOM,MAAM,WAAW,CAAC,OAAoB;QAC3C,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;KACnD;;;;;;;;;;;;IAaS,MAAM,kBAAkB,CAChC,OAAoB,EACpB,eAAwB,EACxB,OAAe;QAEf,MAAM,UAAU,GAAgB,OAAO,CAAC,KAAK,EAAE,CAAC;QAEhD,MAAM,cAAc,GAAG,IAAI,CAAC;;QAG5B,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;YACpC,UAAU,CAAC,GAAG,GAAG,eAAe,CAC9B,UAAU,CAAC,GAAG,EACd,YAAY,CAAC,UAAU,CAAC,OAAO,EAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,cAAe,GAAG,IAAI,CAAC,CAAC,QAAQ,EAAE,CAChE,CAAC;SACH;QAED,IAAI,QAA2C,CAAC;QAChD,IAAI;YACF,MAAM,CAAC,IAAI,CAAC,2BAA2B,OAAO,IAAI,cAAc,GAAG,SAAS,GAAG,WAAW,EAAE,CAAC,CAAC;YAC9F,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YAC1D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE;gBACxD,OAAO,QAAQ,CAAC;aACjB;YAED,eAAe,GAAG,eAAe,KAAK,CAAC,cAAc,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC;SACnF;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,CAAC,KAAK,CAAC,uCAAuC,GAAG,CAAC,OAAO,WAAW,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;YACtF,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE;gBAC7D,MAAM,GAAG,CAAC;aACX;SACF;QAED,MAAM,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,OAAO,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;QAC/D,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE,eAAe,EAAE,EAAE,OAAO,CAAC,CAAC;KACrE;;;;;;;;;IAUS,WAAW,CACnB,cAAuB,EACvB,OAAe,EACf,QAAgC,EAChC,GAAe;QAEf,IAAI,OAAO,IAAI,IAAI,CAAC,YAAY,CAAC,QAAS,EAAE;YAC1C,MAAM,CAAC,IAAI,CACT,2BAA2B,OAAO,gBAAgB,IAAI,CAAC,YAAY;iBAChE,QAAS,mBAAmB,CAChC,CAAC;YACF,OAAO,KAAK,CAAC;SACd;;;QAID,MAAM,eAAe,GAAG;YACtB,WAAW;YACX,iBAAiB;YACjB,cAAc;YACd,YAAY;YACZ,QAAQ;YACR,WAAW;YACX,SAAS;YACT,OAAO;YACP,oBAAoB;SACrB,CAAC;QACF,IAAI,GAAG,EAAE;YACP,KAAK,MAAM,cAAc,IAAI,eAAe,EAAE;gBAC5C,IACE,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;oBAC/C,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC;qBACjD,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,KAAK,cAAc,CAAC,EAClE;oBACA,MAAM,CAAC,IAAI,CAAC,8BAA8B,cAAc,qBAAqB,CAAC,CAAC;oBAC/E,OAAO,IAAI,CAAC;iBACb;aACF;SACF;;;;QAKD,IAAI,QAAQ,IAAI,GAAG,EAAE;YACnB,MAAM,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC;YACzE,IAAI,CAAC,cAAc,IAAI,UAAU,KAAK,GAAG,EAAE;gBACzC,MAAM,CAAC,IAAI,CAAC,qDAAqD,CAAC,CAAC;gBACnE,OAAO,IAAI,CAAC;aACb;;YAGD,IAAI,UAAU,KAAK,GAAG,IAAI,UAAU,KAAK,GAAG,EAAE;gBAC5C,MAAM,CAAC,IAAI,CAAC,2CAA2C,UAAU,GAAG,CAAC,CAAC;gBACtE,OAAO,IAAI,CAAC;aACb;SACF;QAED,IAAI,CAAA,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,MAAK,aAAa,KAAI,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,OAAO,CAAC,UAAU,CAAC,iCAAiC,CAAC,CAAA,EAAE;YAC7F,MAAM,CAAC,IAAI,CACT,iFAAiF,CAClF,CAAC;YACF,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;;;;;;;;IASO,MAAM,KAAK,CAAC,cAAuB,EAAE,OAAe,EAAE,WAA6B;QACzF,IAAI,aAAa,GAAW,CAAC,CAAC;QAE9B,IAAI,cAAc,EAAE;YAClB,QAAQ,IAAI,CAAC,YAAY,CAAC,eAAe;gBACvC,KAAKC,8BAAsB,CAAC,WAAW;oBACrC,aAAa,GAAG,IAAI,CAAC,GAAG,CACtB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,cAAe,EAClE,IAAI,CAAC,YAAY,CAAC,iBAAkB,CACrC,CAAC;oBACF,MAAM;gBACR,KAAKA,8BAAsB,CAAC,KAAK;oBAC/B,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,cAAe,CAAC;oBAClD,MAAM;aACT;SACF;aAAM;YACL,aAAa,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC;SACtC;QAED,MAAM,CAAC,IAAI,CAAC,0BAA0B,aAAa,IAAI,CAAC,CAAC;QACzD,OAAO,KAAK,CAAC,aAAa,EAAE,WAAW,EAAE,iBAAiB,CAAC,CAAC;KAC7D;CACF;;ACvRD;AACA,AAgDA;;;AAGA,MAAa,yBAAyB;;;;;IAOpC,YAAY,YAAkC;QAC5C,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;;;;;;IAOM,MAAM,CAAC,UAAyB,EAAE,OAA6B;QACpE,OAAO,IAAI,kBAAkB,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KACvE;CACF;;ACvED;AACA,AAcA;;;AAGA,MAAa,eAAgB,SAAQD,0BAAiB;;;;;;;IAYpD,YAAY,UAAyB,EAAE,OAA6B,EAAE,SAAiB;QACrF,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;KAC5B;;;;;;IAOM,MAAM,WAAW,CAAC,OAAoB;QAC3C,AAAY;YACV,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACpB,OAAO,CAAC,OAAO,GAAG,IAAIG,oBAAW,EAAE,CAAC;aACrC;YACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;gBACpD,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;aACjE;SACF;QAED,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;KAC9C;CACF;;ACpDD;AACA,AAcA;;;AAGA,MAAa,sBAAsB;;;;;IAUjC,YAAY,SAA4B;QACtC,MAAM,aAAa,GAAa,EAAE,CAAC;QAEnC,AAAY;YACV,IAAI,SAAS,EAAE;gBACb,MAAM,eAAe,GAAG,SAAS,CAAC,eAAe,IAAI,EAAE,CAAC;gBACxD,IAAI,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,aAAa,CAAC,OAAO,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,EAAE;oBAC/E,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;iBACrC;aACF;;YAGD,MAAM,OAAO,GAAG,wBAAwB,WAAW,EAAE,CAAC;YACtD,IAAI,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE;gBACzC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC7B;;YAGD,MAAM,WAAW,GAAG,iBAAiB,OAAO,CAAC,OAAO,KAAKC,OAAO,EAAE,IAAIC,UAAU,EAAE,GAAG,CAAC;YACtF,IAAI,aAAa,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,EAAE;gBAC7C,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACjC;SACF;QAED,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAChD;;;;;;;IAQM,MAAM,CAAC,UAAyB,EAAE,OAA6B;QACpE,OAAO,IAAI,eAAe,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;KACvE;CACF;;AChED;AACA,AAKA,MAAM,kBAAkB,GAAG,IAAIC,0BAAiB,EAAE,CAAC;AAEnD,SAAgB,0BAA0B;IACxC,OAAO,kBAAkB,CAAC;AAC5B,CAAC;;ACVD;AACA,AAIA;;;;AAIA,MAAsB,gBAAiB,SAAQN,0BAAiB;;;;;;IAMvD,WAAW,CAAC,OAAoB;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;KAChE;;;;;;;IAQS,WAAW,CAAC,OAAoB;;;QAGxC,OAAO,OAAO,CAAC;KAChB;CACF;;AC9BD;AACA,AAMA;;;;AAIA,MAAa,yBAA0B,SAAQ,gBAAgB;;;;;;;;IAQ7D,YAAY,UAAyB,EAAE,OAA6B;QAClE,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAC5B;CACF;;ACtBD;AACA;AAKA;;;;AAIA,MAAsB,UAAU;;;;;;;IAOvB,MAAM,CAAC,WAA0B,EAAE,QAA8B;QACtE,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;KACtE;CACF;;ACpBD;AACA,AAOA;;;;;;AAMA,MAAa,mBAAoB,SAAQ,UAAU;;;;;;;IAO1C,MAAM,CACX,UAAyB,EACzB,OAA6B;QAE7B,OAAO,IAAI,yBAAyB,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;KAC3D;CACF;;AC3BD;AACA,AA+DA;;;;;;;;AAQA,MAAa,QAAQ;;;;;;;IAgBnB,YAAY,SAAiC,EAAE,UAA2B,EAAE;QAC1E,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;;;QAG3B,IAAI,CAAC,OAAO,mCACP,OAAO,KACV,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,0BAA0B,EAAE,GAC/D,CAAC;KACH;;;;;;;IAQM,sBAAsB;QAC3B,OAAO;YACL,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;YACnC,sBAAsB,EAAE,IAAI,CAAC,SAAS;SACvC,CAAC;KACH;CACF;AA4BD;;;;;;;AAOA,SAAgB,WAAW,CACzB,UAAuB,EACvB,kBAA0C,EAAE;IAE5C,IAAI,UAAU,KAAK,SAAS,EAAE;QAC5B,UAAU,GAAG,IAAI,mBAAmB,EAAE,CAAC;KACxC;;;;IAKD,MAAM,eAAe,GAAG,IAAI,sBAAsB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;IACrF,MAAM,SAAS,GAA2B;QACxCO,sBAAa,CAAC,EAAE,SAAS,EAAE,eAAe,CAAC,eAAe,EAAE,CAAC;QAC7DC,wBAAe,CAAC,eAAe,CAAC,gBAAgB,CAAC;QACjD,eAAe;QACfC,sCAA6B,EAAE;QAC/B,IAAI,2BAA2B,EAAE;QACjC,IAAI,yBAAyB,CAAC,eAAe,CAAC,YAAY,CAAC;QAC3DC,8BAAqB,EAAE;QACvBC,kBAAS,CAAC;YACR,MAAM,EAAE,MAAM,CAAC,IAAI;YACnB,kBAAkB,EAAE,oCAAoC;YACxD,sBAAsB,EAAE,wCAAwC;SACjE,CAAC;KACH,CAAC;IAEF,AAAY;;QAEV,SAAS,CAAC,IAAI,CAACC,oBAAW,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC,CAAC;QAC1D,SAAS,CAAC,IAAI,CAACC,2CAAkC,EAAE,CAAC,CAAC;KACtD;IACD,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAE3B,OAAO,IAAI,QAAQ,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;AAClD,CAAC;;ACpLD;AACA,AAQA;;;AAGA,MAAa,gCAAiC,SAAQ,gBAAgB;;;;;;;IAYpE,YACE,UAAyB,EACzB,OAA6B,EAC7B,OAAmC;QAEnC,KAAK,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;;;;;;IAOS,WAAW,CAAC,OAAoB;QACxC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,SAAS,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,CAAC;QAEzE,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,OAAO,CAAC,IAAI,KAAK,QAAQ,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/E,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,cAAc,EAAE,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;SACtF;QAED,MAAM,YAAY,GAChB;YACE,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE;YAC5B,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,gBAAgB,CAAC;YACpE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,gBAAgB,CAAC;YACpE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,cAAc,CAAC;YAClE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,WAAW,CAAC;YAC/D,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,YAAY,CAAC;YAChE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,IAAI,CAAC;YACxD,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,iBAAiB,CAAC;YACrE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,QAAQ,CAAC;YAC5D,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,aAAa,CAAC;YACjE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,mBAAmB,CAAC;YACvE,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE,eAAe,CAAC,KAAK,CAAC;SAC1D,CAAC,IAAI,CAAC,IAAI,CAAC;YACZ,IAAI;YACJ,IAAI,CAAC,6BAA6B,CAAC,OAAO,CAAC;YAC3C,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,CAAC;QAE/C,MAAM,SAAS,GAAW,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,YAAY,CAAC,CAAC;QACvE,OAAO,CAAC,OAAO,CAAC,GAAG,CACjB,eAAe,CAAC,aAAa,EAC7B,aAAa,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,SAAS,EAAE,CACrD,CAAC;;;;;QAMF,OAAO,OAAO,CAAC;KAChB;;;;;;;;IASO,oBAAoB,CAAC,OAAoB,EAAE,UAAkB;QACnE,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE9C,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,EAAE,CAAC;SACX;;;;QAKD,IAAI,UAAU,KAAK,eAAe,CAAC,cAAc,IAAI,KAAK,KAAK,GAAG,EAAE;YAClE,OAAO,EAAE,CAAC;SACX;QAED,OAAO,KAAK,CAAC;KACd;;;;;;;;;;;;;;IAeO,6BAA6B,CAAC,OAAoB;QACxD,IAAI,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK;YAC7D,OAAO,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,eAAe,CAAC,kBAAkB,CAAC,CAAC;SAChF,CAAC,CAAC;QAEH,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;YACrB,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,CAAC;SACjE,CAAC,CAAC;;QAGH,YAAY,GAAG,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK;YACrD,IAAI,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;gBACjF,OAAO,KAAK,CAAC;aACd;YACD,OAAO,IAAI,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,gCAAgC,GAAW,EAAE,CAAC;QAClD,YAAY,CAAC,OAAO,CAAC,CAAC,MAAM;YAC1B,gCAAgC,IAAI,GAAG,MAAM,CAAC,IAAI;iBAC/C,WAAW,EAAE;iBACb,SAAS,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC;SAC/C,CAAC,CAAC;QAEH,OAAO,gCAAgC,CAAC;KACzC;;;;;;IAOO,8BAA8B,CAAC,OAAoB;QACzD,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;QAE5C,IAAI,2BAA2B,GAAW,EAAE,CAAC;QAC7C,2BAA2B,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC;QAErE,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC3C,MAAM,gBAAgB,GAA8B,EAAE,CAAC;QACvD,IAAI,OAAO,EAAE;YACX,MAAM,SAAS,GAAa,EAAE,CAAC;YAC/B,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;gBACzB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,EAAE;oBACtD,MAAM,YAAY,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;oBACvC,gBAAgB,CAAC,YAAY,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;oBAC9C,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;iBAC9B;aACF;YAED,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,KAAK,MAAM,GAAG,IAAI,SAAS,EAAE;gBAC3B,2BAA2B,IAAI,KAAK,GAAG,IAAI,kBAAkB,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;aACxF;SACF;QAED,OAAO,2BAA2B,CAAC;KACpC;CACF;;AC5KD;AACA,AAQA;;;;;AAKA,MAAa,0BAA2B,SAAQ,UAAU;;;;;;IAgBxD,YAAY,WAAmB,EAAE,UAAkB;QACjD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;KACrD;;;;;;;IAQM,MAAM,CACX,UAAyB,EACzB,OAA6B;QAE7B,OAAO,IAAI,gCAAgC,CAAC,UAAU,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;KACxE;;;;;;IAOM,iBAAiB,CAAC,YAAoB;QAC3C,OAAOC,iBAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC;aACzC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;aAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC;KACrB;CACF;;AC3DD;AACA,AAKA;;;;AAIA,AAAO,MAAM,UAAU,GAAGC,8BAAkB,CAAC;IAC3C,aAAa,EAAE,oBAAoB;IACnC,SAAS,EAAE,mBAAmB;CAC/B,CAAC,CAAC;AAEH;;;;;;;AAOA,SAAgB,kCAAkC,CAChD,OAA0B;;IAE1B,OAAO;;QAEL,WAAW,EAAE,MAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAsB,0CAAE,WAAW;QAC1D,cAAc,EAAE,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,cAAc,0CAAE,cAAc;KACxD,CAAC;AACJ,CAAC;;AC9BD;;;;;;;AAQA,AAGA,MAAM,WAAW,GAAG,0BAA0B,CAAC;AAC/C,MAAM,cAAc,GAAG,QAAQ,CAAC;AAEhC,MAAa,oBAAqB,SAAQC,sBAAsB;;;;;;;IAW9D,YAAY,GAAW,EAAE,OAAqC;QAC5D,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;SACzC;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACtB,MAAM,gBAAgB,GAAGC,iCAAiC,EAAE,CAAC;YAC7D,OAAO,CAAC,SAAS,GAAG,GAAG,WAAW,IAAI,cAAc,IAAI,gBAAgB,EAAE,CAAC;SAC5E;QAED,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,IAAI,OAAO,CAAC;;QAG3C,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;;QAGf,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,YAAY,CAAC;QAC/C,IAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,IAAI,QAAQ,CAAC;KACxE;CACF;;ACrDD;AACA,AAmBA;;;AAGA,MAAsB,aAAa;;;;;;IAiCjC,YAAsB,GAAW,EAAE,QAAkB;;QAEnD,IAAI,CAAC,GAAG,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,qBAAqB,CAAC,GAAG,CAAC,CAAC;QAE9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,oBAAoB,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,kBAC3D,OAAO,EAAE,eAAe,IACrB,QAAQ,CAAC,sBAAsB,EAAE,EACpC,CAAC;;QAGH,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAA2B,CAAC;QAC9D,IAAI,oBAAoB,CAAC,kBAAkB,EAAE;YAC3C,oBAAoB,CAAC,kBAAkB,GAAG,SAAS,CAAC;SACrD;;QAGD,IAAI,CAAC,UAAU,GAAG,IAAI,mBAAmB,EAAE,CAAC;QAC5C,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC7C,IACE,CAACC,eAAM,IAAI,OAAO,YAAY,0BAA0B;gBACxD,OAAO,YAAY,mBAAmB,EACtC;gBACA,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;gBAC1B,MAAM;aACP;SACF;KACF;CACF;;ACrFD;AACA;AAEA;;;;AAIA,MAAa,oBAAoB;IAAjC;;;;QA4DS,aAAQ,GAAY,KAAK,CAAC;;;;QAK1B,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,WAAM,GAAY,KAAK,CAAC;;;;QAKxB,SAAI,GAAY,KAAK,CAAC;;;;QAKtB,cAAS,GAAY,KAAK,CAAC;;;;QAK3B,YAAO,GAAY,KAAK,CAAC;;;;QAKzB,cAAS,GAAY,KAAK,CAAC;;;;;QAM3B,YAAO,GAAY,KAAK,CAAC;;;;QAKzB,sBAAiB,GAAY,KAAK,CAAC;;;;;;QAOnC,gBAAW,GAAY,KAAK,CAAC;KAyCrC;;;;;;;IA9IQ,OAAO,KAAK,CAAC,cAAsB;QACxC,IAAI,CAAC,cAAc,EAAE;YACnB,MAAM,IAAI,UAAU,CAAC,4BAA4B,cAAc,IAAI,CAAC,CAAC;SACtE;QAED,MAAM,oBAAoB,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAExD,MAAM,UAAU,GAAG,cAAc,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAEpD,KAAK,IAAI,GAAG,IAAI,UAAU,EAAE;YAC1B,GAAG,GAAG,GAAG,CAAC,IAAI,EAAE,CAAC;YACjB,QAAQ,GAAG;gBACT,KAAK,UAAU;oBACb,oBAAoB,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACrC,MAAM;gBACR,KAAK,QAAQ;oBACX,oBAAoB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnC,MAAM;gBACR,KAAK,QAAQ;oBACX,oBAAoB,CAAC,MAAM,GAAG,IAAI,CAAC;oBACnC,MAAM;gBACR,KAAK,MAAM;oBACT,oBAAoB,CAAC,IAAI,GAAG,IAAI,CAAC;oBACjC,MAAM;gBACR,KAAK,WAAW;oBACd,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtC,MAAM;gBACR,KAAK,SAAS;oBACZ,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpC,MAAM;gBACR,KAAK,WAAW;oBACd,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC;oBACtC,MAAM;gBACR,KAAK,SAAS;oBACZ,oBAAoB,CAAC,OAAO,GAAG,IAAI,CAAC;oBACpC,MAAM;gBACR,KAAK,mBAAmB;oBACtB,oBAAoB,CAAC,iBAAiB,GAAG,IAAI,CAAC;oBAC9C,MAAM;gBACR,KAAK,aAAa;oBAChB,oBAAoB,CAAC,WAAW,GAAG,IAAI,CAAC;oBACxC,MAAM;gBACR;oBACE,MAAM,IAAI,UAAU,CAAC,sBAAsB,GAAG,EAAE,CAAC,CAAC;aACrD;SACF;QAED,OAAO,oBAAoB,CAAC;KAC7B;;;;;;IA4DM,QAAQ;QACb,MAAM,UAAU,GAAa,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC7B;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC3B;QACD,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACzB;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC9B;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAC5B;QACD,IAAI,IAAI,CAAC,iBAAiB,EAAE;YAC1B,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;SACtC;QACD,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAChC;QACD,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7B;CACF;;AC5JD;AACA,AAiCA,MAAM,WAAW,GAAG,IAAIhB,0BAAU,CAAC,4BAA4B,CAAC,CAAC;AAEjE;;;;;AAKA,MAAa,uBAAwB,SAAQiB,eAAQ;;;;;;;;;;;IA0BnD,YACE,MAA6B,EAC7B,MAA4B,EAC5B,MAAc,EACd,KAAa,EACb,UAA0C,EAAE;QAE5C,KAAK,EAAE,CAAC;QA1BF,YAAO,GAAW,CAAC,CAAC;QAIpB,iBAAY,GAAG;YACrB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;SACjC,CAAC;QAoBA,MAAM,OAAO,GAAG,OAAO,CAAC,WAAW,IAAIC,2BAAW,CAAC,IAAI,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,GAAG,GAAG,MAAM,GAAG,KAAK,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,gBAAgB;YACnB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,IAAI,CAAC,GAAG,OAAO,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC3F,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QAEvB,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAErD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAEM,KAAK;QACV,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACzB,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC;SACtB;KACF;IAEO,oBAAoB;QAC1B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAY;YAClC,IAAI,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;gBAClC,IAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,SAAS,CAAC;gBAC3C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;gBACpB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;gBACvC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACxB,OAAO;aACR;;;;YAKD,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;YAC3B,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;aAC5D;YACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;gBACpB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;aACrB;SACF,CAAC,CAAC;KACJ;IAEO,mBAAmB;QACzB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;;;;;;YAMpB,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,EAAE;gBAChC,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;gBAC7D,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACjB;iBAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,EAAE;;;;gBAIlC,IAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,EAAE;oBACxC,IAAI,CAAC,OAAO,IAAI,CAAC,CAAC;oBAClB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;yBACrB,IAAI,CAAC,CAAC,SAAS;wBACd,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;wBACxB,IAAI,CAAC,oBAAoB,EAAE,CAAC;wBAC5B,IAAI,CAAC,mBAAmB,EAAE,CAAC;wBAC3B,IAAI,CAAC,qBAAqB,EAAE,CAAC;wBAC7B,OAAO;qBACR,CAAC;yBACD,KAAK,CAAC,CAAC,KAAK;wBACX,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;qBAC3B,CAAC,CAAC;iBACN;qBAAM;oBACL,IAAI,CAAC,IAAI,CACP,OAAO,EACP,IAAI,KAAK,CACP,sHAAsH,IAAI;yBACvH,MAAM,GAAG,CAAC,yBAAyB,IAAI,CAAC,GAAG,cAC5C,IAAI,CAAC,OACP,kBAAkB,IAAI,CAAC,gBAAgB,EAAE,CAC1C,CACF,CAAC;iBACH;aACF;iBAAM;gBACL,IAAI,CAAC,IAAI,CACP,OAAO,EACP,IAAI,KAAK,CACP,4FACE,IAAI,CAAC,GACP,sBAAsB,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CACxC,CACF,CAAC;aACH;SACF,CAAC,CAAC;KACJ;IAEO,qBAAqB;QAC3B,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK;YAC5B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAC3B,CAAC,CAAC;KACJ;CACF;;ACnLD;AACA,AAkBA;;;;;;;;;;AAUA,MAAa,oBAAoB;;;;;;;;;;IA8X/B,YACE,gBAA2C,EAC3C,MAA4B,EAC5B,MAAc,EACd,KAAa,EACb,UAA0C,EAAE;QAE5C,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,uBAAuB,CACnD,IAAI,CAAC,gBAAgB,CAAC,kBAAmB,EACzC,MAAM,EACN,MAAM,EACN,KAAK,EACL,OAAO,CACR,CAAC;KACH;;;;;;;IAtYD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;;IAQD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;;;IASD,IAAW,kBAAkB;QAC3B,OAAO,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC;KACjD;;;;;;;IAQD,IAAW,eAAe;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;KAC9C;;;;;;;IAQD,IAAW,eAAe;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;KAC9C;;;;;;;IAQD,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;KAC5C;;;;;;;;;;;;;IAcD,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;KACzC;;;;;;;;IASD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;;IAQD,IAAW,WAAW;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;KAC1C;;;;;;;;IASD,IAAW,eAAe;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;KAC9C;;;;;;;IAQD,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;KACrC;;;;;;;;;IAUD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;;;IASD,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;KACzC;;;;;;;;IASD,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;KACzC;;;;;;;;IASD,IAAW,qBAAqB;QAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC;KACpD;;;;;;;IAQD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;KACnC;;;;;;;IAQD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC;KACnC;IAED,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;KACxC;;;;;;;;;;IAWD,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;KAC7C;;;;;;;;;;IAWD,IAAW,iBAAiB;QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;KAChD;;;;;;;;IASD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;;IAQD,IAAW,QAAQ;QACjB,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;KACvC;;;;;;;IAQD,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;KACxC;;;;;;;IAQD,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;KACtC;;;;;;IAOD,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC;KAC7C;;;;;;IAOD,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;KAC5C;;;;;;IAOD,IAAW,eAAe;QACxB,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;KAC9C;;;;;;IAOD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;IAOD,IAAW,iBAAiB;QAC1B,OAAO,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC;KAChD;;;;;;IAOD,IAAW,MAAM;QACf,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;KACrC;;;;;;IAOD,IAAW,YAAY;QACrB,OAAO,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;KAC3C;;;;;;;IAQD,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC;KACvC;;;;;IAMD,IAAW,aAAa;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;KAC5C;;;;;IAMD,IAAW,UAAU;QACnB,OAAO,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC;KACzC;;;;IAKD,IAAW,WAAW;QACpB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC;KAC1C;;;;;;;;;IAUD,IAAW,kBAAkB;QAC3B,OAAOF,eAAM,GAAG,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;KACrD;IAED,IAAW,SAAS;QAGlB,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;KACxC;CA8BF;;AC3aD;AACA;AAkBA;;;;;;;;AAQA,SAAgB,aAAa,CAAC,KAAY;IACxC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;QACpB,MAAM,IAAI,UAAU,CAAC,wCAAwC,CAAC,CAAC;KAChE;IACD,IAAI,KAAK,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,EAAE;QACnC,MAAM,IAAI,UAAU,CAClB,mGAAmG,CACpG,CAAC;KACH;IACD,OAAO,KAAK,CAAC,KAAK;UACd,SAAS,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,EAAE;UACzD,SAAS,KAAK,CAAC,MAAM,GAAG,CAAC;AAC/B,CAAC;;ACvCD;AACA,AAgLA;;;;;AAKA,SAAgB,gBAAgB,CAAC,eAAwB;IACvD,IAAI,eAAe,KAAK,SAAS,EAAE;QACjC,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,gBAAgB,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpD,MAAM,SAAS,GAAmB,EAAE,CAAC;IACrC,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE;QACvC,IAAI,QAAQ,KAAK,KAAK,EAAE;YACtB,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;SAC7B;aAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;YAC7B,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;SAC7B;KACF;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;;AAKA,SAAgB,sBAAsB,CAAC,YAA4B,EAAE;IACnE,IAAI,WAAW,GAAG,SAAS,CAAC;IAE5B,IAAI,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;QACjC,WAAW,GAAG,KAAK,CAAC;KACrB;IACD,IAAI,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;QACjC,MAAM,CAAC,IAAI,CACT,6GAA6G,CAC9G,CAAC;QACF,WAAW,GAAG,KAAK,CAAC;KACrB;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,SAAgB,6BAA6B,CAC3C,cAAuB,EACvB,iBAA0B;IAE1B,IAAI,cAAc,IAAI,iBAAiB,EAAE;QACvC,MAAM,IAAI,UAAU,CAAC,mEAAmE,CAAC,CAAC;KAC3F;AACH,CAAC;AAED,SAAgB,4DAA4D,CAC1E,OAA4C;;IAI5C,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,GAAG,EAAE,CAAC;KACd;IAED,6BAA6B,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEjF,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;QACzB,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;KAC9B;IAED,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;QAC1B,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;KAC/B;IAED,IAAI,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;QACzD,OAAO,CAAC,cAAc,GAAG,SAAS,CAAC;KACpC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAgB,mEAAmE,CACjF,OAAmD;;IAInD,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,GAAG,EAAE,CAAC;KACd;IAED,6BAA6B,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEjF,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;QACzB,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC;KACnC;IAED,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;QAC1B,OAAO,CAAC,aAAa,GAAG,UAAU,CAAC;KACpC;IAED,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;QAC3B,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC;KACrC;IAED,IAAI,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;QACzD,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC;KACrC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAgB,sBAAsB,CACpC,cAAiE;IAEjE,OAAO,cAAc,YAAY,oBAAoB;UACjD,cAAc,CAAC,QAAQ,EAAE;UACzB,cAAc,CAAC;AACrB,CAAC;AAED,SAAgB,wBAAwB,CAAC,IAA2C;IAClF,OAAO,IAAI,YAAY,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAClE,CAAC;AAED,SAAgB,yBAAyB,CAAC,IAA2C;IACnF,OAAO,IAAI,YAAY,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;AAClE,CAAC;;AC1SD;AACA,AAWA;;;AAGA,IAAK,WAGJ;AAHD,WAAK,WAAW;IACd,6CAAI,CAAA;IACJ,+CAAK,CAAA;AACP,CAAC,EAHI,WAAW,KAAX,WAAW,QAGf;AAED;;;;;AAKA,MAAa,KAAK;;;;;IAyChB,YAAmB,cAAsB,CAAC;;;;QAhClC,YAAO,GAAW,CAAC,CAAC;;;;QAKpB,cAAS,GAAW,CAAC,CAAC;;;;QAKtB,WAAM,GAAW,CAAC,CAAC;;;;QAKnB,eAAU,GAAgB,EAAE,CAAC;;;;;QAM7B,UAAK,GAAgB,WAAW,CAAC,IAAI,CAAC;QAY5C,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,MAAM,IAAI,UAAU,CAAC,mCAAmC,CAAC,CAAC;SAC3D;QACD,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,IAAIG,mBAAY,EAAE,CAAC;KACnC;;;;;;IAOM,YAAY,CAAC,SAAoB;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;YACnB,IAAI;gBACF,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,MAAM,SAAS,EAAE,CAAC;gBAClB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;aACnC;SACF,CAAC,CAAC;KACJ;;;;;IAMM,MAAM,EAAE;QACb,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAChC,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;YACvC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAEnC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,KAAK;gBAC7B,IAAI,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;gBAC/B,MAAM,CAAC,KAAK,CAAC,CAAC;aACf,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;;;;IAMO,aAAa;QACnB,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YACxC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SACvC;QACD,OAAO,IAAI,CAAC;KACb;;;;;;IAOO,eAAe;QACrB,IAAI,IAAI,CAAC,KAAK,KAAK,WAAW,CAAC,KAAK,EAAE;YACpC,OAAO;SACR;QAED,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC5C,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5B,OAAO;SACR;QAED,OAAO,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE;YACtC,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;YACvC,IAAI,SAAS,EAAE;gBACb,SAAS,EAAE,CAAC;aACb;iBAAM;gBACL,OAAO;aACR;SACF;KACF;CACF;;ACrJD;AACA,AAUA;;;;;;;;;;;;;;;;;;;;;;AAsBA,MAAa,eAAe;;;;;;;;;;;;;IAmG1B,YACE,QAAkB,EAClB,UAAkB,EAClB,UAAkB,EAClB,eAAgC,EAChC,WAAmB,EACnB,QAAyB;;;;QA/EV,YAAO,GAAiB,IAAIA,mBAAY,EAAE,CAAC;;;;QAUpD,WAAM,GAAW,CAAC,CAAC;;;;QAKnB,gBAAW,GAAY,KAAK,CAAC;;;;QAK7B,YAAO,GAAY,KAAK,CAAC;;;;QAKzB,8BAAyB,GAAW,CAAC,CAAC;;;;QAUtC,eAAU,GAAW,CAAC,CAAC;;;;;;;;QASvB,wBAAmB,GAAa,EAAE,CAAC;;;;QAKnC,qBAAgB,GAAW,CAAC,CAAC;;;;QAK7B,aAAQ,GAAa,EAAE,CAAC;;;;QAKxB,aAAQ,GAAa,EAAE,CAAC;QAsB9B,IAAI,UAAU,IAAI,CAAC,EAAE;YACnB,MAAM,IAAI,UAAU,CAAC,gDAAgD,UAAU,EAAE,CAAC,CAAC;SACpF;QAED,IAAI,UAAU,IAAI,CAAC,EAAE;YACnB,MAAM,IAAI,UAAU,CAAC,gDAAgD,UAAU,EAAE,CAAC,CAAC;SACpF;QAED,IAAI,WAAW,IAAI,CAAC,EAAE;YACpB,MAAM,IAAI,UAAU,CAAC,iDAAiD,WAAW,EAAE,CAAC,CAAC;SACtF;QAED,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;KAC1B;;;;;;IAOM,MAAM,EAAE;QACb,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;YACvC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI;gBAC5B,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBAC1E,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;gBAEhC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;oBACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;iBACvB;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG;gBAC5B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;aACjC,CAAC,CAAC;YAEH,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE;gBACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBACxB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAC/B,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG;gBAC3B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,CAAC,GAAG,CAAC,CAAC;aACb,CAAC,CAAC;YAEH,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,EAAE;gBAC1B,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC5B,IAAI,CAAC,uBAAuB,EAAE,CAAC;oBAC/B,OAAO;iBACR;gBAED,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,yBAAyB,KAAK,CAAC,EAAE;oBAC5D,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,IAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU,EAAE;wBACxE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,kCAAkC,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC;6BACzE,IAAI,CAAC,OAAO,CAAC;6BACb,KAAK,CAAC,MAAM,CAAC,CAAC;qBAClB;yBAAM,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;wBACnD,OAAO;qBACR;yBAAM;wBACL,OAAO,EAAE,CAAC;qBACX;iBACF;aACF,CAAC,CAAC;SACJ,CAAC,CAAC;KACJ;;;;;;IAOO,oBAAoB,CAAC,IAAY;QACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,MAAM,CAAC;KACtC;;;;;;IAOO,kCAAkC;QACxC,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;YAC5C,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;gBAC1D,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,CAAC;gBACzC,OAAO,IAAI,CAAC,mBAAmB,CAAC,KAAK,EAAG,CAAC;aAC1C;;YAGD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC5E,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;YAChD,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACvC,IAAI,CAAC,mBAAmB,GAAG,CAAC,MAAM,CAAC,CAAC;YACpC,IAAI,CAAC,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC;YACvC,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;YACpC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAC9E,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;YAC9B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAC1B,OAAO,MAAM,CAAC;SACf;aAAM;YACL,OAAO,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;SAC9B;KACF;;;;;;;;;;IAWO,WAAW;QACjB,OAAO,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,UAAU,EAAE;YAC/C,IAAI,MAAc,CAAC;YAEnB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC5B,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAG,CAAC;aACjC;iBAAM;gBACL,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,EAAE;oBACrC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC7C,IAAI,CAAC,UAAU,EAAE,CAAC;iBACnB;qBAAM;;oBAEL,OAAO,KAAK,CAAC;iBACd;aACF;YAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,kCAAkC,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC3B,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAChC;QACD,OAAO,IAAI,CAAC;KACb;;;;;IAMO,MAAM,uBAAuB;QACnC,IAAI,MAA0B,CAAC;QAC/B,GAAG;YACD,IAAI,IAAI,CAAC,yBAAyB,IAAI,IAAI,CAAC,WAAW,EAAE;gBACtD,OAAO;aACR;YAED,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YAC/B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,CAAC;aACrC;SACF,QAAQ,MAAM,EAAE;KAClB;;;;;;IAOO,MAAM,sBAAsB,CAAC,MAAc;QACjD,MAAM,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC;QAEnC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,MAAM,IAAI,YAAY,CAAC;QAE5B,IAAI;YACF,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,CAAC;SAChE;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YAChC,OAAO;SACR;QAED,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAC/B;;;;;;IAOO,WAAW,CAAC,MAAc;QAChC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YAC5D,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;SACxB;KACF;CACF;;AC/UD;AACA,AAKA;;;;;;;;;AASA,AAAO,eAAe,cAAc,CAClC,MAA6B,EAC7B,MAAc,EACd,MAAc,EACd,GAAW,EACX,QAAyB;IAEzB,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,MAAM,KAAK,GAAG,GAAG,GAAG,MAAM,CAAC;IAE3B,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;QACvC,MAAM,CAAC,EAAE,CAAC,UAAU,EAAE;YACpB,IAAI,GAAG,IAAI,KAAK,EAAE;gBAChB,OAAO,EAAE,CAAC;gBACV,OAAO;aACR;YAED,IAAI,KAAK,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,EAAE;gBACV,OAAO;aACR;YACD,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;gBAC7B,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;aACtC;;YAGD,MAAM,WAAW,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC;YAE5E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,MAAM,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,GAAG,WAAW,CAAC,CAAC;YACnF,GAAG,IAAI,WAAW,CAAC;SACpB,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE;YACf,IAAI,GAAG,GAAG,KAAK,EAAE;gBACf,MAAM,CACJ,IAAI,KAAK,CACP,+DAA+D,GAAG,gBAAgB,KAAK,EAAE,CAC1F,CACF,CAAC;aACH;YACD,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;QAEH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;KAC5B,CAAC,CAAC;AACL,CAAC;AAED;;;;;;;;AAQA,AAAO,eAAe,qBAAqB,CACzC,EAAyB,EACzB,IAAY;IAEZ,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM;QACvC,MAAM,EAAE,GAAGC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAEtC,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAU;YACxB,MAAM,CAAC,GAAG,CAAC,CAAC;SACb,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAU;YACxB,MAAM,CAAC,GAAG,CAAC,CAAC;SACb,CAAC,CAAC;QAEH,EAAE,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAExB,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACb,CAAC,CAAC;AACL,CAAC;AAED;;;;;AAKA,AAAO,MAAM,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,CAAC;AAE9C,AAAO,MAAM,kBAAkB,GAAGC,mBAAmB,CAAC;;AClGtD;AACA,AAigBA;;;AAGA,MAAa,WAAY,SAAQ,aAAa;IAqD5C,YACE,qBAA6B,EAC7B,+BAAgE;;;IAGhE,OAAgC;QAEhC,IAAI,QAAkB,CAAC;QACvB,IAAI,GAAW,CAAC;QAChB,IAAI,+BAA+B,YAAY,QAAQ,EAAE;;YAEvD,GAAG,GAAG,qBAAqB,CAAC;YAC5B,QAAQ,GAAG,+BAA+B,CAAC;SAC5C;aAAM,IAAI,+BAA+B,YAAY,UAAU,EAAE;;YAEhE,GAAG,GAAG,qBAAqB,CAAC;YAC5B,QAAQ,GAAG,WAAW,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;SAClE;aAAM,IACL,CAAC,+BAA+B;YAChC,OAAO,+BAA+B,KAAK,QAAQ,EACnD;;;YAGA,GAAG,GAAG,qBAAqB,CAAC;YAC5B,QAAQ,GAAG,WAAW,CAAC,IAAI,mBAAmB,EAAE,EAAE,OAAO,CAAC,CAAC;SAC5D;aAAM,IACL,+BAA+B;YAC/B,OAAO,+BAA+B,KAAK,QAAQ,EACnD;;YAEA,MAAM,cAAc,GAAG,4BAA4B,CAAC,qBAAqB,CAAC,CAAC;YAC3E,MAAM,IAAI,GAAG,+BAA+B,CAAC;YAC7C,IAAI,cAAc,CAAC,IAAI,KAAK,mBAAmB,EAAE;gBAC/C,AAAY;oBACV,MAAM,mBAAmB,GAAG,IAAI,0BAA0B,CACxD,cAAc,CAAC,WAAY,EAC3B,cAAc,CAAC,UAAU,CAC1B,CAAC;oBACF,GAAG,GAAG,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;oBAChD,QAAQ,GAAG,WAAW,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;iBACtD,AAEA;aACF;iBAAM,IAAI,cAAc,CAAC,IAAI,KAAK,eAAe,EAAE;gBAClD,GAAG,GAAG,eAAe,CAAC,cAAc,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,GAAG,GAAG,cAAc,CAAC,UAAU,CAAC;gBAClF,QAAQ,GAAG,WAAW,CAAC,IAAI,mBAAmB,EAAE,EAAE,OAAO,CAAC,CAAC;aAC5D;iBAAM;gBACL,MAAM,IAAI,KAAK,CACb,0FAA0F,CAC3F,CAAC;aACH;SACF;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,gDAAgD,CAAC,CAAC;SACnE;QACD,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC;QAC5D,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACrD;;;;IAnGD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;IA0GM,YAAY,CAAC,QAAgB;QAClC,OAAO,IAAI,WAAW,CACpB,eAAe,CACb,IAAI,CAAC,GAAG,EACR,YAAY,CAAC,UAAU,CAAC,cAAc,EACtC,QAAQ,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,GAAG,QAAQ,CAC7C,EACD,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;;;;;;;;;IAUM,MAAM,MAAM,CAAC,UAA8B,EAAE;QAClD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC3E,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,+CAC3B,OAAO,KACV,gBAAgB,EAAE,sBAAsB,CAAC,OAAO,CAAC,SAAS,CAAC,KACxD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEC,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,iBAAiB,CAC5B,UAA8B,EAAE;;QAEhC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;QACtF,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC9C,uBACE,SAAS,EAAE,IAAI,IACZ,GAAG,EACN;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,oBAAoB,EAAE;gBACjD,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,4EAA4E;iBACtF,CAAC,CAAC;gBACH,qCACE,SAAS,EAAE,KAAK,IACb,MAAA,CAAC,CAAC,QAAQ,0CAAE,aAAa,KAC5B,SAAS,EAAE,CAAC,CAAC,QAAQ,IACrB;aACH;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAWM,kBAAkB,CAAC,aAAqB;QAC7C,OAAO,IAAI,oBAAoB,CAC7B,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,kBAAkB,CAAC,aAAa,CAAC,CAAC,EAC5D,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;;;;;;;;;IAUD,IAAW,mBAAmB;QAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;KACpC;;;;;;;;;IAUM,MAAM,eAAe,CAC1B,aAAqB,EACrB,UAAkC,EAAE;QAKpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC/D,MAAM,uBAAuB,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC7E,OAAO;gBACL,eAAe;gBACf,uBAAuB;aACxB,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,eAAe,CAC1B,aAAqB,EACrB,UAAkC,EAAE;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC/D,OAAO,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SACrD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYM,MAAM,UAAU,CACrB,QAAgB,EAChB,IAAY,EACZ,UAA6B,EAAE;QAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAI;YACF,MAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACjD,MAAM,UAAU,GAAG,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC3D,MAAM,kBAAkB,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YACzE,OAAO;gBACL,UAAU;gBACV,kBAAkB;aACnB,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;;;;IAsBM,MAAM,UAAU,CACrB,QAAgB,EAChB,UAA6B,EAAE;QAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAI;YACF,MAAM,eAAe,GAAG,IAAI,CAAC,mBAAmB,CAAC;YACjD,MAAM,UAAU,GAAG,eAAe,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAC3D,OAAO,MAAM,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SAChD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,MAAM,CAAC,UAA8B,EAAE;QAClD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC3E,IAAI;YACF,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;YACzC,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,UAAU,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,kDAAkD;iBAC5D,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;IAcM,MAAM,aAAa,CACxB,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QAClF,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,iCACvC,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;;YAGH,MAAM,SAAS,GAAG,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YACxD,GAAW,CAAC,SAAS,GAAG,SAAS,CAAC;YACnC,OAAO,GAAG,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,MAAM,CAAC,UAAoC,EAAE;QACxD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;QAC3E,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,iCAC3B,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,cAAc,CACzB,UAAoC,EAAE;;QAEtC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACnF,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC9C,uBACE,SAAS,EAAE,IAAI,IACZ,GAAG,EACN;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,eAAe,EAAE;gBAC5C,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,6DAA6D;iBACvE,CAAC,CAAC;gBACH,qCACE,SAAS,EAAE,KAAK,IACb,MAAA,CAAC,CAAC,QAAQ,0CAAE,aAAa,KAC5B,SAAS,EAAE,CAAC,CAAC,QAAQ,IACrB;aACH;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;IAaM,MAAM,WAAW,CACtB,QAAmB,EACnB,UAAmC,EAAE;QAErC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAC;QAChF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,+CAChC,OAAO,KACV,QAAQ,KACL,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;IAcM,MAAM,eAAe,CAC1B,UAAuC,EAAE;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,iCAC9C,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YAEH,MAAM,GAAG,GAAiC;gBACxC,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,IAAI,EAAE,QAAQ,CAAC,IAAI;gBACnB,YAAY,EAAE,QAAQ,CAAC,YAAY;gBACnC,SAAS,EAAE,QAAQ,CAAC,SAAS;gBAC7B,iBAAiB,EAAE,EAAE;gBACrB,OAAO,EAAE,QAAQ,CAAC,OAAO;aAC1B,CAAC;YAEF,KAAK,MAAM,UAAU,IAAI,QAAQ,EAAE;gBACjC,IAAI,YAAY,GAAQ,SAAS,CAAC;gBAClC,IAAI,UAAU,CAAC,YAAY,EAAE;oBAC3B,YAAY,GAAG;wBACb,WAAW,EAAE,UAAU,CAAC,YAAY,CAAC,WAAW;qBACjD,CAAC;oBAEF,IAAI,UAAU,CAAC,YAAY,CAAC,SAAS,EAAE;wBACrC,YAAY,CAAC,SAAS,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;qBACtE;oBAED,IAAI,UAAU,CAAC,YAAY,CAAC,QAAQ,EAAE;wBACpC,YAAY,CAAC,QAAQ,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;qBACpE;iBACF;gBAED,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC;oBACzB,YAAY;oBACZ,EAAE,EAAE,UAAU,CAAC,EAAE;iBAClB,CAAC,CAAC;aACJ;YAED,OAAO,GAAG,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;IAmBM,MAAM,eAAe,CAC1B,QAA6B,EAC7B,UAAuC,EAAE;;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,MAAM,GAAG,GAA4B,EAAE,CAAC;YACxC,KAAK,MAAM,UAAU,IAAI,QAAQ,IAAI,EAAE,EAAE;gBACvC,GAAG,CAAC,IAAI,CAAC;oBACP,YAAY,EAAE;wBACZ,SAAS,EAAE,CAAA,MAAA,UAAU,CAAC,YAAY,0CAAE,SAAS;8BACzC,oBAAoB,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC;8BACvD,SAAS;wBACb,WAAW,EAAE,MAAA,UAAU,CAAC,YAAY,0CAAE,WAAW;wBACjD,QAAQ,EAAE,CAAA,MAAA,UAAU,CAAC,YAAY,0CAAE,QAAQ;8BACvC,oBAAoB,CAAC,UAAU,CAAC,YAAY,CAAC,QAAQ,CAAC;8BACtD,SAAS;qBACd;oBACD,EAAE,EAAE,UAAU,CAAC,EAAE;iBAClB,CAAC,CAAC;aACJ;YAED,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,eAAe,+CACpC,OAAO,KACV,QAAQ,EAAE,GAAG,KACV,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,cAAc,CACzB,UAAsC,EAAE;QAExC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACnF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,+BACtC,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,QAAQ,CACnB,SAAiB,EACjB,UAAgC,EAAE;QAElC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;QAC7E,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,+CAClC,OAAO,KACV,KAAK,EAAE,SAAS,KACb,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,aAAa,CACxB,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QAClF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,iCAClC,OAAO,KACV,KAAK,EAAE,OAAO,CAAC,SAAS,EACxB,cAAc,EAAE,cAAc,CAAC,cAAc,IAC7C,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,aAAa,CACxB,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QAClF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,iCAC5C,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YAEH,MAAM,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;YACnC,uCAAY,QAAQ,KAAE,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,OAAO,CAAC,IAAG;SACnF;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,gBAAgB,CAC3B,cAAsB,EACtB,UAAwC,EAAE;QAE1C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;QACrF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,gBAAgB,CACxC;gBACE,UAAU,EAAE,cAAc;aAC3B,kBAEC,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,aAAa,CACxB,iBAAyB,EACzB,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QAClF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,kBACvD,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;IAaM,cAAc,CAAC,OAAmC;QACvD,IAAI,EAAE,IAAI,CAAC,UAAU,YAAY,0BAA0B,CAAC,EAAE;YAC5D,MAAM,UAAU,CACd,uFAAuF,CACxF,CAAC;SACH;QAED,MAAM,GAAG,GAAG,8BAA8B,iBAEtC,SAAS,EAAE,IAAI,CAAC,IAAI,IACjB,OAAO,GAEZ,IAAI,CAAC,UAAU,CAChB,CAAC,QAAQ,EAAE,CAAC;QAEb,OAAO,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACxC;CACF;AAsRD;;;AAGA,MAAa,oBAAqB,SAAQ,aAAa;IAgErD,YACE,GAAW,EACX,oBAA4C,EAC5C,UAAkC,EAAE;QAEpC,IAAI,QAAkB,CAAC;QACvB,IAAI,oBAAoB,YAAY,QAAQ,EAAE;YAC5C,QAAQ,GAAG,oBAAoB,CAAC;SACjC;aAAM,IAAI,oBAAoB,YAAY,UAAU,EAAE;YACrD,QAAQ,GAAG,WAAW,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;SACvD;aAAM;;YAEL,QAAQ,GAAG,WAAW,CAAC,IAAI,mBAAmB,EAAE,EAAE,OAAO,CAAC,CAAC;SAC5D;QAED,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACrB,CAAC;YACC,QAAQ,EAAE,IAAI,CAAC,KAAK;YACpB,SAAS,EAAE,IAAI,CAAC,UAAU;YAC1B,IAAI,EAAE,IAAI,CAAC,KAAK;SACjB,GAAG,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACzD;;;;IAzED,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;IAKD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;IAKD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;IAkEM,MAAM,MAAM,CAAC,UAAkC,EAAE;QACtD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;gBAC3B,OAAO,GAAG,4DAA4D,CAAC,OAAO,CAAC,CAAC;;gBAEhF,MAAM,UAAU,GAAyB,IAAI,oBAAoB,EAAE,CAAC;gBACpE,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC;gBAC5B,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC;aACrC;YAED,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAC9B,sBAAsB,CAAC,OAAO,CAAC,cAAe,CAAC,EAC/C,wBAAwB,CAAC,OAAO,CAAC,YAAa,CAAC,EAC/C,yBAAyB,CAAC,OAAO,CAAC,aAAc,CAAC,kBAE/C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAC1B,cAAc,EAAE,OAAO,CAAC,cAAc,EACtC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,IACzC,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,iBAAiB,CAC5B,UAAkC,EAAE;;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wCAAwC,EAAE,OAAO,CAAC,CAAC;QAC/F,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC9C,uBACE,SAAS,EAAE,IAAI,IACZ,GAAG,EACN;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,uBAAuB,EAAE;gBACpD,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,iFAAiF;iBAC3F,CAAC,CAAC;gBACH,qCACE,SAAS,EAAE,KAAK,IACb,MAAA,CAAC,CAAC,QAAQ,0CAAE,aAAa,KAC5B,SAAS,EAAE,CAAC,CAAC,QAAQ,IACrB;aACH;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,aAAa,CACxB,aAAkC,EAAE;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,UAAU,CAAC,CAAC;QAC9F,IAAI;YACF,UAAU,GAAG,mEAAmE,CAAC,UAAU,CAAC,CAAC;YAE7F,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,CACrC,sBAAsB,CAAC,UAAU,CAAC,cAAe,CAAC,EAClD,wBAAwB,CAAC,UAAU,CAAC,YAAa,CAAC,EAClD,yBAAyB,CAAC,UAAU,CAAC,aAAc,CAAC,kBAElD,WAAW,EAAE,UAAU,CAAC,WAAW,EACnC,cAAc,EAAE,UAAU,CAAC,cAAc,EACzC,iBAAiB,EAAE,UAAU,CAAC,iBAAiB,IAC5C,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;IAgBM,kBAAkB,CAAC,gBAAwB;QAChD,OAAO,IAAI,oBAAoB,CAC7B,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,kBAAkB,CAAC,gBAAgB,CAAC,CAAC,EAC/D,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;;;;;;;;;IAUM,MAAM,kBAAkB,CAC7B,aAAqB,EACrB,UAAkC,EAAE;QAKpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;QAChG,IAAI;YACF,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC/D,MAAM,uBAAuB,GAAG,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC7E,OAAO;gBACL,eAAe;gBACf,uBAAuB;aACxB,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,kBAAkB,CAC7B,aAAqB,EACrB,UAAkC,EAAE;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;QAChG,IAAI;YACF,MAAM,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;YAC/D,OAAO,MAAM,eAAe,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SACrD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,UAAU,CACrB,QAAgB,EAChB,IAAY,EACZ,UAA6B,EAAE;QAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,iCAAiC,EAAE,OAAO,CAAC,CAAC;QACxF,IAAI;YACF,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAChD,MAAM,kBAAkB,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YACzE,OAAO;gBACL,UAAU;gBACV,kBAAkB;aACnB,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;;IAoBM,MAAM,UAAU,CACrB,QAAgB,EAChB,UAA6B,EAAE;QAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,iCAAiC,EAAE,OAAO,CAAC,CAAC;QACxF,IAAI;YACF,MAAM,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAChD,OAAO,MAAM,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SAChD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;;;;;;IAwBM,aAAa,CAAC,QAAgB;QACnC,OAAO,IAAI,eAAe,CACxB,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,kBAAkB,CAAC,QAAQ,CAAC,CAAC,EACvD,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;;;;;;;;;;IAWM,MAAM,MAAM,CAAC,UAAkC,EAAE;QACtD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,MAAM,IAAI,CAAC,aAAa,CAAC;gBACvB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,cAAc,kCACT,OAAO,CAAC,cAAc,GACtB,kCAAkC,CAAC,cAAc,CAAC,CACtD;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,UAAU,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,sDAAsD;iBAChE,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,aAAa,CACxB,UAAyC,EAAE;QAE3C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QAC3F,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,aAAa,iBACrC,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,MAAM,CAAC,UAAkC,EAAE;QACtD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,iBAC9B,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,cAAc,CACzB,UAAkC,EAAE;;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,qCAAqC,EAAE,OAAO,CAAC,CAAC;QAC5F,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC9C,uBACE,SAAS,EAAE,IAAI,IACZ,GAAG,EACN;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IACE,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,kBAAkB;gBAC3C,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,gBAAgB,EACzC;gBACA,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,iEAAiE;iBAC3E,CAAC,CAAC;gBACH,qCACE,SAAS,EAAE,KAAK,IACb,MAAA,CAAC,CAAC,QAAQ,0CAAE,aAAa,KAC5B,SAAS,EAAE,CAAC,CAAC,QAAQ,IACrB;aACH;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,WAAW,CACtB,QAAmB,EACnB,UAAuC,EAAE;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,iBACnC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,QAAQ,IACL,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;IAcc,kCAAkC,CAC/C,MAAe,EACf,UAA0D,EAAE;;YAE5D,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;gBACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;aAC5B;YAED,IAAI,+BAA+B,CAAC;YACpC,GAAG;gBACD,+BAA+B,GAAG,oBAAM,IAAI,CAAC,8BAA8B,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC7F,MAAM,GAAG,+BAA+B,CAAC,iBAAiB,CAAC;gBAC3D,0BAAM,oBAAM,+BAA+B,CAAA,CAAA,CAAC;aAC7C,QAAQ,MAAM,EAAE;SAClB;KAAA;;;;;;IAOc,4BAA4B,CACzC,UAA0D,EAAE;;;YAI5D,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;gBACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;aAC5B;YAED,IAAI,MAA0B,CAAC;;gBAC/B,KAAoD,IAAA,KAAAC,oBAAA,IAAI,CAAC,kCAAkC,CACzF,MAAM,EACN,OAAO,CACR,CAAA,IAAA;oBAHU,MAAM,+BAA+B,WAAA,CAAA;oBAI9C,KAAK,MAAM,IAAI,IAAI,+BAA+B,CAAC,OAAO,CAAC,SAAS,EAAE;wBACpE,0CAAQ,IAAI,EAAE,MAAM,IAAK,IAAI,EAAE,CAAC;qBACjC;oBACD,KAAK,MAAM,SAAS,IAAI,+BAA+B,CAAC,OAAO,CAAC,cAAc,EAAE;wBAC9E,0CAAQ,IAAI,EAAE,WAAW,IAAK,SAAS,EAAE,CAAC;qBAC3C;iBACF;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4FM,uBAAuB,CAC5B,UAAmD,EAAE;QAKrD,MAAM,OAAO,GAA2B,EAAE,CAAC;QAC3C,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC7B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5B;QACD,IAAI,OAAO,CAAC,WAAW,EAAE;YACvB,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACtB;QACD,IAAI,OAAO,CAAC,iBAAiB,EAAE;YAC7B,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC5B;QACD,IAAI,OAAO,CAAC,oBAAoB,EAAE;YAChC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAC/B;QACD,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;SAC5B;QAED,MAAM,cAAc,mCACf,OAAO,IACN,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,EACnD,CAAC;;QAGF,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAAC,cAAc,CAAC,CAAC;QAC/D,OAAO;;;;YAIL,MAAM,IAAI;gBACR,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;;;;YAID,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;;;;YAID,MAAM,EAAE,CAAC,WAAyB,EAAE;gBAClC,OAAO,IAAI,CAAC,kCAAkC,CAAC,QAAQ,CAAC,iBAAiB,kBACvE,UAAU,EAAE,QAAQ,CAAC,WAAW,IAC7B,cAAc,EACjB,CAAC;aACJ;SACF,CAAC;KACH;;;;;;;;;;IAWO,MAAM,8BAA8B,CAC1C,MAAe,EACf,UAA0D,EAAE;QAE5D,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,qDAAqD,EACrD,OAAO,CACR,CAAC;QAEF,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;SAC5B;QAED,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,8BAA8B,+BACtD,MAAM,IACH,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAED,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYc,qBAAqB,CAClC,MAAe,EACf,UAA8C,EAAE;;YAEhD,IAAI,mBAAmB,CAAC;YACxB,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;gBACpC,GAAG;oBACD,mBAAmB,GAAG,oBAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,CAAC;oBACrE,MAAM,GAAG,mBAAmB,CAAC,iBAAiB,CAAC;oBAC/C,0BAAM,oBAAM,mBAAmB,CAAA,CAAA,CAAC;iBACjC,QAAQ,MAAM,EAAE;aAClB;SACF;KAAA;;;;;;IAOc,eAAe,CAC5B,UAA8C,EAAE;;;YAEhD,IAAI,MAA0B,CAAC;;gBAC/B,KAAwC,IAAA,KAAAC,oBAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,IAAA;oBAAxE,MAAM,mBAAmB,WAAA,CAAA;oBAClC,IAAI,mBAAmB,CAAC,UAAU,EAAE;wBAClC,KAAK,MAAM,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE;4BACnD,0BAAM,MAAM,CAAA,CAAC;yBACd;qBACF;iBACF;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA8EM,WAAW,CAChB,UAAuC,EAAE;;QAGzC,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC3C,OAAO;;;;YAIL,MAAM,IAAI;gBACR,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;;;;YAID,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;;;;YAID,MAAM,EAAE,CAAC,WAAyB,EAAE;gBAClC,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,iBAAiB,kBAC1D,UAAU,EAAE,QAAQ,CAAC,WAAW,IAC7B,OAAO,EACV,CAAC;aACJ;SACF,CAAC;KACH;;;;;;;;;;;;IAaO,MAAM,kBAAkB,CAC9B,MAAe,EACf,UAA8C,EAAE;QAEhD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,yCAAyC,EAAE,OAAO,CAAC,CAAC;QAChG,IAAI;YACF,MAAM,GAAG,MAAM,KAAK,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;YAC5C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,+BAC7C,MAAM,IACH,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;;;YAIH,IAAK,QAAQ,CAAC,UAAkB,KAAK,EAAE,EAAE;gBACvC,QAAQ,CAAC,UAAU,GAAG,SAAS,CAAC;aACjC;YACD,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAED,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;IAaO,MAAM,wBAAwB,CACpC,MAAe,EACf,UAAoD,EAAE;QAEtD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,+CAA+C,EAC/C,OAAO,CACR,CAAC;QACF,IAAI;YACF,MAAM,GAAG,MAAM,KAAK,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;YAC5C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,gCAC1D,MAAM,IACH,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YACH,MAAM,QAAQ,GAAG,WAAiD,CAAC;YACnE,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,qBAAqB,IAAI,CAAC,CAAC;YACrE,QAAQ,CAAC,iBAAiB,GAAG,WAAW,CAAC,4BAA4B,IAAI,CAAC,CAAC;YAC3E,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,oBAAoB,CAC/B,UAAoD,EAAE;QAEtD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,2CAA2C,EAC3C,OAAO,CACR,CAAC;QACF,IAAI;YACF,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,4BAA4B,GAAG,CAAC,CAAC;YACrC,IAAI,MAAM,GAAuB,EAAE,CAAC;YAEpC,GAAG;gBACD,MAAM,QAAQ,GAAuC,MAAM,IAAI,CAAC,wBAAwB,CACtF,MAAM,EACN,cAAc,CACf,CAAC;gBACF,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACzB,IAAI,QAAQ,CAAC,kBAAkB,EAAE;oBAC/B,aAAa,IAAI,QAAQ,CAAC,kBAAkB,CAAC;iBAC9C;gBACD,IAAI,QAAQ,CAAC,iBAAiB,EAAE;oBAC9B,4BAA4B,IAAI,QAAQ,CAAC,iBAAiB,CAAC;iBAC5D;aACF,QAAQ,MAAM,EAAE;YAEjB,OAAO,EAAE,kBAAkB,EAAE,aAAa,EAAE,iBAAiB,EAAE,4BAA4B,EAAE,CAAC;SAC/F;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYM,MAAM,gBAAgB,CAC3B,QAAgB,EAChB,UAA6C,EAAE;QAE/C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,uCAAuC,EAAE,OAAO,CAAC,CAAC;QAC9F,IAAI;YACF,IAAI,QAAQ,KAAK,GAAG,EAAE;gBACpB,MAAM,IAAI,UAAU,CAClB,0GAA0G,CAC3G,CAAC;aACH;YAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,kBAC/D,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YACH,MAAM,QAAQ,GAAG,WAAiD,CAAC;YACnE,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,qBAAqB,IAAI,CAAC,CAAC;YACrE,QAAQ,CAAC,iBAAiB,GAAG,WAAW,CAAC,4BAA4B,IAAI,CAAC,CAAC;YAC3E,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;CACF;AA4lBD;;;AAGA,MAAa,eAAgB,SAAQ,aAAa;IAgEhD,YACE,GAAW,EACX,oBAA4C;;;IAG5C,OAAgC;QAEhC,IAAI,QAAkB,CAAC;QACvB,IAAI,oBAAoB,YAAY,QAAQ,EAAE;YAC5C,QAAQ,GAAG,oBAAoB,CAAC;SACjC;aAAM,IAAI,oBAAoB,YAAY,UAAU,EAAE;YACrD,QAAQ,GAAG,WAAW,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;SACvD;aAAM;;YAEL,QAAQ,GAAG,WAAW,CAAC,IAAI,mBAAmB,EAAE,EAAE,OAAO,CAAC,CAAC;SAC5D;QAED,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACrB,CAAC;YACC,QAAQ,EAAE,IAAI,CAAC,KAAK;YACpB,SAAS,EAAE,IAAI,CAAC,UAAU;YAC1B,IAAI,EAAE,IAAI,CAAC,KAAK;SACjB,GAAG,0BAA0B,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;QAC1C,IAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACpD;;;;IA3ED,IAAW,SAAS;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;;;;IAKD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;IAKD,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;;;;;;;IAoEM,iBAAiB,CAAC,aAAqB;QAC5C,OAAO,IAAI,eAAe,CACxB,eAAe,CACb,IAAI,CAAC,GAAG,EACR,YAAY,CAAC,UAAU,CAAC,cAAc,EACtC,aAAa,CAAC,MAAM,KAAK,CAAC,GAAG,SAAS,GAAG,aAAa,CACvD,EACD,IAAI,CAAC,QAAQ,CACd,CAAC;KACH;;;;;;;;;;;;;;;;;;;;;;;IAwBM,MAAM,MAAM,CAAC,IAAY,EAAE,UAA6B,EAAE;QAC/D,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAI;YACF,IAAI,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,mBAAmB,EAAE;gBAC1C,MAAM,IAAI,UAAU,CAAC,6BAA6B,mBAAmB,GAAG,CAAC,CAAC;aAC3E;YACD,OAAO,GAAG,4DAA4D,CAAC,OAAO,CAAC,CAAC;YAEhF,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;;gBAE3B,MAAM,UAAU,GAAyB,IAAI,oBAAoB,EAAE,CAAC;gBACpE,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvB,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC;aACrC;YAED,OAAO,CAAC,eAAe,GAAG,OAAO,CAAC,eAAe,IAAI,EAAE,CAAC;YAExD,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CAC9B,IAAI,EACJ,sBAAsB,CAAC,OAAO,CAAC,cAAe,CAAC,EAC/C,wBAAwB,CAAC,OAAO,CAAC,YAAa,CAAC,EAC/C,yBAAyB,CAAC,OAAO,CAAC,aAAc,CAAC,kBAE/C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,eAAe,EAAE,OAAO,CAAC,eAAe,EACxC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAC1B,cAAc,EAAE,OAAO,CAAC,cAAc,EACtC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAC5C,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+DM,MAAM,QAAQ,CACnB,SAAiB,CAAC,EAClB,KAAc,EACd,UAA+B,EAAE;QAEjC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC;QACjF,IAAI;YACF,IAAI,OAAO,CAAC,kBAAkB,IAAI,MAAM,KAAK,CAAC,IAAI,KAAK,KAAK,SAAS,EAAE;gBACrE,MAAM,IAAI,UAAU,CAAC,6DAA6D,CAAC,CAAC;aACrF;YAED,MAAM,gBAAgB,GAAG,MAAM,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YAChD,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,iBACrC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,cAAc,EAAE;oBACd,kBAAkB,EAAER,eAAM,GAAG,SAAS,GAAG,OAAO,CAAC,UAAU;iBAC5D,EACD,KAAK,EAAE,gBAAgB,GAAG,SAAS,GAAG,aAAa,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,EACtE,kBAAkB,EAAE,OAAO,CAAC,kBAAkB,EAC9C,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;;YAGH,IAAI,CAACA,eAAM,EAAE;gBACX,OAAO,GAAG,CAAC;aACZ;;;;;;YAOD,IAAI,OAAO,CAAC,gBAAgB,KAAK,SAAS,IAAI,OAAO,CAAC,gBAAgB,GAAG,CAAC,EAAE;;gBAE1E,OAAO,CAAC,gBAAgB,GAAG,mCAAmC,CAAC;aAChE;YAED,IAAI,GAAG,CAAC,aAAa,KAAK,SAAS,EAAE;gBACnC,MAAM,IAAI,UAAU,CAAC,oEAAoE,CAAC,CAAC;aAC5F;YAED,OAAO,IAAI,oBAAoB,CAC7B,GAAG,EACH,OAAO,KAAa;gBAClB,MAAM,sBAAsB,GAA+B;oBACzD,KAAK,EAAE,aAAa,CAAC;wBACnB,KAAK,EAAE,MAAM,GAAG,GAAG,CAAC,aAAc,GAAG,KAAK;wBAC1C,MAAM,EAAE,KAAK;qBACd,CAAC;iBACH,CAAC;;;;;;;gBASF,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,+BAC7C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,sBAAsB,GACtB,kCAAkC,CAAC,sBAAsB,CAAC,EAC7D,CAAC;gBAEH,IAAI,EAAE,WAAW,CAAC,IAAI,KAAK,GAAG,CAAC,IAAI,CAAC,EAAE;oBACpC,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;iBACxD;gBACD,OAAO,WAAW,CAAC,kBAAmB,CAAC;aACxC,EACD,MAAM,EACN,GAAG,CAAC,aAAc,EAClB;gBACE,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,gBAAgB,EAAE,OAAO,CAAC,gBAAgB;gBAC1C,UAAU,EAAE,OAAO,CAAC,UAAU;aAC/B,CACF,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEQ,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,MAAM,CAAC,UAA6B,EAAE;QACjD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAI;YACF,MAAM,IAAI,CAAC,aAAa,CAAC;gBACvB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,cAAc,kCACT,OAAO,CAAC,cAAc,GACtB,kCAAkC,CAAC,cAAc,CAAC,CACtD;aACF,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,CAAC,UAAU,KAAK,GAAG,EAAE;gBACxB,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,iDAAiD;iBAC3D,CAAC,CAAC;gBACH,OAAO,KAAK,CAAC;aACd;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,aAAa,CACxB,UAAoC,EAAE;QAEtC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;QACtF,IAAI;YACF,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,iBAC/B,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,aAAa,CAAC,aAA6B,EAAE;QACxD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC;QACzF,IAAI;YACF,UAAU,GAAG,mEAAmE,CAAC,UAAU,CAAC,CAAC;YAE7F,UAAU,CAAC,eAAe,GAAG,UAAU,CAAC,eAAe,IAAI,EAAE,CAAC;YAE9D,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CACtC,sBAAsB,CAAC,UAAU,CAAC,cAAe,CAAC,EAClD,wBAAwB,CAAC,UAAU,CAAC,YAAa,CAAC,EAClD,yBAAyB,CAAC,UAAU,CAAC,aAAc,CAAC,kBAElD,WAAW,EAAE,UAAU,CAAC,WAAW,EACnC,eAAe,EAAE,UAAU,CAAC,eAAe,EAC3C,cAAc,EAAE,UAAU,CAAC,cAAc,EACzC,iBAAiB,EAAE,UAAU,CAAC,iBAAiB,EAC/C,qBAAqB,EAAE,UAAU,CAAC,qBAAqB,IACpD,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;IAmBM,MAAM,MAAM,CAAC,UAA6B,EAAE;QACjD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,iBAC9B,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;IAkBM,MAAM,cAAc,CACzB,UAA6B,EAAE;;QAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;QACvF,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YAC9C,uBACE,SAAS,EAAE,IAAI,IACZ,GAAG,EACN;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IACE,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,kBAAkB;gBAC3C,CAAA,MAAA,CAAC,CAAC,OAAO,0CAAE,SAAS,MAAK,gBAAgB,EACzC;gBACA,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;oBAC1B,OAAO,EAAE,4DAA4D;iBACtE,CAAC,CAAC;gBACH,qCACE,SAAS,EAAE,KAAK,IACb,MAAA,CAAC,CAAC,QAAQ,0CAAE,aAAa,KAC5B,SAAS,EAAE,CAAC,CAAC,QAAQ,IACrB;aACH;YACD,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;IAcM,MAAM,cAAc,CACzB,kBAAmC,EAAE,EACrC,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;QACvF,IAAI;;YAEF,OAAO,GAAG,mEAAmE,CAAC,OAAO,CAAC,CAAC;YACvF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CACtC,sBAAsB,CAAC,OAAO,CAAC,cAAe,CAAC,EAC/C,wBAAwB,CAAC,OAAO,CAAC,YAAa,CAAC,EAC/C,yBAAyB,CAAC,OAAO,CAAC,aAAc,CAAC,kBAE/C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,eAAe,EACf,cAAc,EAAE,OAAO,CAAC,cAAc,EACtC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAC5C,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;IAaM,MAAM,MAAM,CACjB,MAAc,EACd,UAA6B,EAAE;QAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAI;YACF,IAAI,MAAM,GAAG,CAAC,EAAE;gBACd,MAAM,IAAI,UAAU,CAAC,6CAA6C,CAAC,CAAC;aACrE;;YAED,OAAO,GAAG,mEAAmE,CAAC,OAAO,CAAC,CAAC;YAEvF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CACtC,sBAAsB,CAAC,OAAO,CAAC,cAAe,CAAC,EAC/C,wBAAwB,CAAC,OAAO,CAAC,YAAa,CAAC,EAC/C,yBAAyB,CAAC,OAAO,CAAC,aAAc,CAAC,kBAE/C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,iBAAiB,EAAE,MAAM,EACzB,cAAc,EAAE,OAAO,CAAC,cAAc,EACtC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAC5C,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;IAaM,MAAM,WAAW,CACtB,WAAqB,EAAE,EACvB,UAAkC,EAAE;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,iBACnC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,QAAQ,EACR,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6BM,MAAM,WAAW,CACtB,IAAqB,EACrB,MAAc,EACd,aAAqB,EACrB,UAAkC,EAAE;QAEpC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,IAAI,MAAM,GAAG,CAAC,EAAE;gBACd,MAAM,IAAI,UAAU,CAAC,qBAAqB,CAAC,CAAC;aAC7C;YAED,IAAI,aAAa,IAAI,CAAC,IAAI,aAAa,GAAG,yBAAyB,EAAE;gBACnE,MAAM,IAAI,UAAU,CAAC,oCAAoC,yBAAyB,QAAQ,CAAC,CAAC;aAC7F;YAED,IAAI,aAAa,GAAG,yBAAyB,EAAE;gBAC7C,MAAM,IAAI,UAAU,CAAC,oBAAoB,yBAAyB,QAAQ,CAAC,CAAC;aAC7E;YAED,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CACnC,aAAa,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,EAC/C,QAAQ,EACR,aAAa,gCAEX,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,UAAU,EAAE,OAAO,CAAC,UAAU,EAC9B,cAAc,EAAE;oBACd,gBAAgB,EAAE,OAAO,CAAC,UAAU;iBACrC,EACD,IAAI,EAAE,IAAI,IACP,kCAAkC,CAAC,cAAc,CAAC,KACrD,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IAEvD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYM,MAAM,kBAAkB,CAC7B,SAAiB,EACjB,YAAoB,EACpB,UAAkB,EAClB,KAAa,EACb,UAAyC,EAAE;QAE3C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QAC3F,IAAI;YACF,IAAI,YAAY,GAAG,CAAC,IAAI,UAAU,GAAG,CAAC,EAAE;gBACtC,MAAM,IAAI,UAAU,CAAC,0CAA0C,CAAC,CAAC;aAClE;YAED,IAAI,KAAK,IAAI,CAAC,IAAI,KAAK,GAAG,yBAAyB,EAAE;gBACnD,MAAM,IAAI,UAAU,CAAC,4BAA4B,yBAAyB,QAAQ,CAAC,CAAC;aACrF;YAED,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAC1C,aAAa,CAAC,EAAE,MAAM,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAC5C,SAAS,EACT,CAAC,gCAEC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,WAAW,EAAE,aAAa,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,CAAC,EAC3D,8BAA8B,EAAE,OAAO,CAAC,gBAAgB,EACxD,uBAAuB,EAAE,yBAAyB,CAAC,OAAO,CAAC,mBAAmB,CAAC,IAC5E,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EAExD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IASM,MAAM,UAAU,CACrB,MAAc,EACd,aAAqB,EACrB,UAAiC,EAAE;QAEnC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACnF,IAAI;YACF,IAAI,MAAM,GAAG,CAAC,IAAI,aAAa,IAAI,CAAC,EAAE;gBACpC,MAAM,IAAI,UAAU,CAAC,gDAAgD,CAAC,CAAC;aACxE;YAED,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,CACnC,aAAa,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE,CAAC,EAC/C,OAAO,EACP,CAAC,gCAEC,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,KACrD,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IAEvD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;IAOM,MAAM,YAAY,CACvB,UAAmC,EAAE;QAErC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;QACrF,IAAI;YACF,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,iBACtD,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,KAAK,EAAE,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,EAC/D,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;;YAGH,MAAM,UAAU,GAAG,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM;kBAC3D,gBAAgB,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM;kBAC5C,EAAE,CAAC;YACP,uCACK,gBAAgB,KACnB,SAAS,kCAAO,gBAAgB,CAAC,SAAS,KAAE,UAAU,KACtD,SAAS,EAAE,gBAAgB,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,GAAG,EAAE,IACjE;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,gBAAgB,CAC3B,iBAAyB,EACzB,UAAmC,EAAE;QAErC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,6CACpC,iBAAiB,EAAE,iBAAiB,IACjC,OAAO,KACV,KAAK,EAAE,OAAO,CAAC,KAAK,GAAG,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,SAAS,KAC5D,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;IAcM,MAAM,gBAAgB,CAC3B,UAAkB,EAClB,UAAgC,EAAE;QAElC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,kBAC5C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAC1B,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,EACpD,cAAc,EAAE,OAAO,CAAC,cAAc,EACtC,iBAAiB,EAAE,OAAO,CAAC,iBAAiB,EAC5C,eAAe,EAAE,OAAO,CAAC,eAAe,IACrC,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,gBAAgB,CAC3B,MAAc,EACd,UAAuC,EAAE;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,kBACxC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,IACjD,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IAUM,MAAM,UAAU,CACrB,IAAmD,EACnD,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACnF,IAAI;YACF,UAAY;gBACV,IAAI,MAAc,CAAC;gBACnB,IAAI,IAAI,YAAY,MAAM,EAAE;oBAC1B,MAAM,GAAG,IAAI,CAAC;iBACf;qBAAM,IAAI,IAAI,YAAY,WAAW,EAAE;oBACtC,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAC5B;qBAAM;oBACL,IAAI,GAAG,IAAuB,CAAC;oBAC/B,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;iBACrE;gBAED,OAAO,IAAI,CAAC,sBAAsB,CAChC,CAAC,MAAc,EAAE,IAAY,KAAa,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,EAC7E,MAAM,CAAC,UAAU,EACjB,cAAc,CACf,CAAC;aACH;iBAAM;gBACL,MAAM,WAAW,GAAG,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACrC,OAAO,IAAI,CAAC,sBAAsB,CAChC,CAAC,MAAc,EAAE,IAAY,KAAW,WAAW,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,EAChF,WAAW,CAAC,IAAI,EAChB,cAAc,CACf,CAAC;aACH;SACF;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYD,MAAM,kBAAkB,CACtB,WAAmD,EACnD,IAAY,EACZ,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QAC3F,IAAI;YACF,OAAO,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,IAAI,EAAE,cAAc,CAAC,CAAC;SACvE;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,UAAU,CACrB,QAAgB,EAChB,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,4BAA4B,EAAE,OAAO,CAAC,CAAC;QACnF,IAAI;YACF,MAAM,IAAI,GAAG,CAAC,MAAM,MAAM,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;YAC3C,OAAO,MAAM,IAAI,CAAC,sBAAsB,CACtC,CAAC,MAAM,EAAE,KAAK;gBACZ,OAAO,MACL,kBAAkB,CAAC,QAAQ,EAAE;oBAC3B,SAAS,EAAE,IAAI;oBACf,GAAG,EAAE,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,CAAC,GAAG,QAAQ;oBAC1C,KAAK,EAAE,MAAM;iBACd,CAAC,CAAC;aACN,EACD,IAAI,EACJ,cAAc,CACf,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;IAeD,MAAM,qBAAqB,CACzB,aAAwE,EACxE,IAAY,EACZ,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,uCAAuC,EAAE,OAAO,CAAC,CAAC;QAC9F,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,sBAAsB,CACtC,CAAC,MAAc,EAAE,KAAc;gBAC7B,OAAO,MAAM,aAAa,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;aAC3C,EACD,IAAI,EACJ,cAAc,CACf,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASO,MAAM,sBAAsB,CAClC,WAA+D,EAC/D,IAAY,EACZ,UAAqC,EAAE;QAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,wCAAwC,EAAE,OAAO,CAAC,CAAC;QAC/F,IAAI;YACF,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtB,OAAO,CAAC,SAAS,GAAG,yBAAyB,CAAC;aAC/C;YACD,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,GAAG,yBAAyB,EAAE;gBAC1E,MAAM,IAAI,UAAU,CAAC,wCAAwC,yBAAyB,EAAE,CAAC,CAAC;aAC3F;YAED,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBAC5B,OAAO,CAAC,eAAe,GAAG,EAAE,CAAC;aAC9B;YAED,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBACxB,OAAO,CAAC,WAAW,GAAG,8BAA8B,CAAC;aACtD;YACD,IAAI,OAAO,CAAC,WAAW,GAAG,CAAC,EAAE;gBAC3B,MAAM,IAAI,UAAU,CAAC,yCAAyC,CAAC,CAAC;aACjE;;YAGD,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,eAAe,EAAE,OAAO,CAAC,eAAe;gBACxC,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;gBACpD,cAAc,EAAE,cAAc,CAAC,cAAc;aAC9C,CAAC,CAAC;YAEH,MAAM,SAAS,GAAW,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;YACzE,IAAI,gBAAgB,GAAW,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAE7C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;gBAClC,KAAK,CAAC,YAAY,CAChB;oBACE,MAAM,KAAK,GAAG,OAAO,CAAC,SAAU,GAAG,CAAC,CAAC;oBACrC,MAAM,GAAG,GAAG,CAAC,KAAK,SAAS,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG,OAAO,CAAC,SAAU,CAAC;oBACpE,MAAM,aAAa,GAAG,GAAG,GAAG,KAAK,CAAC;oBAClC,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,aAAa,CAAC,EAAE,KAAK,EAAE,aAAa,EAAE;wBAC9E,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;wBACpD,cAAc,EAAE,cAAc,CAAC,cAAc;qBAC9C,CAAC,CAAC;;oBAEH,gBAAgB,IAAI,aAAa,CAAC;oBAClC,IAAI,OAAO,CAAC,UAAU,EAAE;wBACtB,OAAO,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC,CAAC;qBACvD;iBACF,CACF,CAAC;aACH;YACD,OAAO,MAAM,KAAK,CAAC,EAAE,EAAE,CAAC;SACzB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;IA4CM,MAAM,gBAAgB,CAC3B,cAAgC,EAChC,aAAsB,EACtB,cAAqD,EACrD,aAA0C,EAAE;QAE5C,IAAI,MAAM,GAAuB,SAAS,CAAC;QAC3C,IAAI,MAAc,CAAC;QACnB,IAAI,KAAa,CAAC;QAClB,IAAI,OAAO,GAAgC,UAAU,CAAC;QAEtD,IAAI,cAAc,YAAY,MAAM,EAAE;YACpC,MAAM,GAAG,cAAc,CAAC;YACxB,MAAM,GAAG,aAAa,IAAI,CAAC,CAAC;YAC5B,KAAK,GAAG,OAAO,cAAc,KAAK,QAAQ,GAAG,cAAc,GAAG,CAAC,CAAC;SACjE;aAAM;YACL,MAAM,GAAG,OAAO,cAAc,KAAK,QAAQ,GAAG,cAAc,GAAG,CAAC,CAAC;YACjE,KAAK,GAAG,OAAO,aAAa,KAAK,QAAQ,GAAG,aAAa,GAAG,CAAC,CAAC;YAC9D,OAAO,GAAI,cAA8C,IAAI,EAAE,CAAC;SACjE;QAED,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QAEzF,IAAI;YACF,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;gBACtB,OAAO,CAAC,SAAS,GAAG,yBAAyB,CAAC;aAC/C;YACD,IAAI,OAAO,CAAC,SAAS,GAAG,CAAC,EAAE;gBACzB,MAAM,IAAI,UAAU,CAAC,8BAA8B,CAAC,CAAC;aACtD;YAED,IAAI,MAAM,GAAG,CAAC,EAAE;gBACd,MAAM,IAAI,UAAU,CAAC,4BAA4B,CAAC,CAAC;aACpD;YAED,IAAI,KAAK,IAAI,KAAK,IAAI,CAAC,EAAE;gBACvB,MAAM,IAAI,UAAU,CAAC,0BAA0B,CAAC,CAAC;aAClD;YAED,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;gBACxB,OAAO,CAAC,WAAW,GAAG,8BAA8B,CAAC;aACtD;YACD,IAAI,OAAO,CAAC,WAAW,GAAG,CAAC,EAAE;gBAC3B,MAAM,IAAI,UAAU,CAAC,yCAAyC,CAAC,CAAC;aACjE;;YAGD,IAAI,CAAC,KAAK,EAAE;gBACV,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC;oBACxC,WAAW,EAAE,OAAO,CAAC,WAAW;oBAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;oBACpD,cAAc,EAAE,cAAc,CAAC,cAAc;iBAC9C,CAAC,CAAC;gBACH,KAAK,GAAG,QAAQ,CAAC,aAAc,GAAG,MAAM,CAAC;gBACzC,IAAI,KAAK,GAAG,CAAC,EAAE;oBACb,MAAM,IAAI,UAAU,CAClB,UAAU,MAAM,uCAAuC,QAAQ,CAAC,aAAc,EAAE,CACjF,CAAC;iBACH;aACF;YAED,IAAI,CAAC,MAAM,EAAE;gBACX,IAAI;oBACF,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAC9B;gBAAC,OAAO,KAAK,EAAE;oBACd,MAAM,IAAI,KAAK,CACb,wCAAwC,KAAK,gDAAgD;wBAC3F,8FAA8F;wBAC9F,MAAM,KAAK,CAAC,OAAO,EAAE,CACxB,CAAC;iBACH;aACF;YAED,IAAI,MAAM,CAAC,MAAM,GAAG,KAAK,EAAE;gBACzB,MAAM,IAAI,UAAU,CAClB,mFAAmF,KAAK,EAAE,CAC3F,CAAC;aACH;YAED,IAAI,gBAAgB,GAAW,CAAC,CAAC;YACjC,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YAC7C,KAAK,IAAI,GAAG,GAAG,MAAM,EAAE,GAAG,GAAG,MAAM,GAAG,KAAK,EAAE,GAAG,GAAG,GAAG,GAAG,OAAO,CAAC,SAAS,EAAE;gBAC1E,KAAK,CAAC,YAAY,CAAC;;oBAEjB,IAAI,QAAQ,GAAG,MAAM,GAAG,KAAM,CAAC;oBAC/B,IAAI,GAAG,GAAG,OAAO,CAAC,SAAU,GAAG,QAAQ,EAAE;wBACvC,QAAQ,GAAG,GAAG,GAAG,OAAO,CAAC,SAAU,CAAC;qBACrC;oBACD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,QAAQ,GAAG,GAAG,EAAE;wBACxD,WAAW,EAAE,OAAO,CAAC,WAAW;wBAChC,gBAAgB,EAAE,OAAO,CAAC,wBAAwB;wBAClD,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;wBACpD,cAAc,EAAE,cAAc,CAAC,cAAc;qBAC9C,CAAC,CAAC;oBACH,MAAM,MAAM,GAAG,QAAQ,CAAC,kBAAmB,CAAC;oBAC5C,MAAM,cAAc,CAAC,MAAM,EAAE,MAAO,EAAE,GAAG,GAAG,MAAM,EAAE,QAAQ,GAAG,MAAM,CAAC,CAAC;;;;oBAIvE,gBAAgB,IAAI,QAAQ,GAAG,GAAG,CAAC;oBACnC,IAAI,OAAO,CAAC,UAAU,EAAE;wBACtB,OAAO,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC,CAAC;qBACvD;iBACF,CAAC,CAAC;aACJ;YACD,MAAM,KAAK,CAAC,EAAE,EAAE,CAAC;YACjB,OAAO,MAAM,CAAC;SACf;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;;;;;;IAuBM,MAAM,YAAY,CACvB,MAAgB,EAChB,IAAY,EACZ,UAAkB,EAClB,UAAkB,EAClB,UAAmC,EAAE;QAErC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;QACrF,IAAI;YACF,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE;gBAC5B,OAAO,CAAC,eAAe,GAAG,EAAE,CAAC;aAC9B;YAED,IAAI,UAAU,IAAI,CAAC,IAAI,UAAU,GAAG,yBAAyB,EAAE;gBAC7D,MAAM,IAAI,UAAU,CAAC,iCAAiC,yBAAyB,EAAE,CAAC,CAAC;aACpF;YAED,IAAI,UAAU,GAAG,CAAC,EAAE;gBAClB,MAAM,IAAI,UAAU,CAAC,yBAAyB,CAAC,CAAC;aACjD;;YAGD,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtB,WAAW,EAAE,OAAO,CAAC,WAAW;gBAChC,eAAe,EAAE,OAAO,CAAC,eAAe;gBACxC,QAAQ,EAAE,OAAO,CAAC,QAAQ;gBAC1B,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;gBACpD,cAAc,EAAE,cAAc,CAAC,cAAc;aAC9C,CAAC,CAAC;YAEH,IAAI,gBAAgB,GAAW,CAAC,CAAC;YACjC,MAAM,SAAS,GAAG,IAAI,eAAe,CACnC,MAAM,EACN,UAAU,EACV,UAAU,EACV,OAAO,MAAc,EAAE,MAAe;gBACpC,IAAI,gBAAgB,GAAG,MAAM,CAAC,MAAM,GAAG,IAAI,EAAE;oBAC3C,MAAM,IAAI,UAAU,CAClB,wCAAwC,IAAI,4BAA4B;wBACtE,iEAAiE,CACpE,CAAC;iBACH;gBAED,MAAM,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,MAAO,EAAE,MAAM,CAAC,MAAM,EAAE;oBACrD,WAAW,EAAE,OAAO,CAAC,WAAW;oBAChC,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;oBACpD,cAAc,EAAE,cAAc,CAAC,cAAc;iBAC9C,CAAC,CAAC;;gBAGH,gBAAgB,IAAI,MAAM,CAAC,MAAM,CAAC;gBAClC,IAAI,OAAO,CAAC,UAAU,EAAE;oBACtB,OAAO,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,gBAAgB,EAAE,CAAC,CAAC;iBACvD;aACF;;;;;YAKD,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC,CAChC,CAAC;YACF,OAAO,MAAM,SAAS,CAAC,EAAE,EAAE,CAAC;SAC7B;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;;;IAkBM,MAAM,cAAc,CACzB,QAAgB,EAChB,SAAiB,CAAC,EAClB,KAAc,EACd,UAA+B,EAAE;QAEjC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;QACvF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,cAAc,CAAC,CAAC;YACpE,IAAI,QAAQ,CAAC,kBAAkB,EAAE;gBAC/B,MAAM,qBAAqB,CAAC,QAAQ,CAAC,kBAAkB,EAAE,QAAQ,CAAC,CAAC;aACpE;;YAGA,QAAgB,CAAC,kBAAkB,GAAG,SAAS,CAAC;YACjD,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;IAaO,MAAM,kBAAkB,CAC9B,MAAe,EACf,UAAyC,EAAE;QAE3C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QAC3F,IAAI;YACF,MAAM,GAAG,MAAM,KAAK,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;YAC5C,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,WAAW,+BAC7C,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,MAAM,IACH,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;;;YAIH,IAAK,QAAQ,CAAC,UAAkB,KAAK,EAAE,EAAE;gBACvC,QAAQ,CAAC,UAAU,GAAG,SAAS,CAAC;aACjC;YACD,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYc,qBAAqB,CAClC,MAAe,EACf,UAAyC,EAAE;;YAE3C,IAAI,mBAAmB,CAAC;YACxB,IAAI,CAAC,CAAC,MAAM,IAAI,MAAM,KAAK,SAAS,EAAE;gBACpC,GAAG;oBACD,mBAAmB,GAAG,oBAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,CAAC;oBACrE,MAAM,GAAG,mBAAmB,CAAC,iBAAiB,CAAC;oBAC/C,0BAAM,mBAAmB,CAAA,CAAC;iBAC3B,QAAQ,MAAM,EAAE;aAClB;SACF;KAAA;;;;;;IAOc,eAAe,CAC5B,UAAyC,EAAE;;;YAE3C,IAAI,MAA0B,CAAC;;gBAC/B,KAAwC,IAAA,KAAAC,oBAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,IAAA;oBAAxE,MAAM,mBAAmB,WAAA,CAAA;oBAClC,IAAI,mBAAmB,CAAC,UAAU,EAAE;wBAClC,KAAK,MAAM,MAAM,IAAI,mBAAmB,CAAC,UAAU,EAAE;4BACnD,0BAAM,MAAM,CAAA,CAAC;yBACd;qBACF;iBACF;;;;;;;;;SACF;KAAA;;;;;;;;;;;IAYM,WAAW,CAChB,UAAkC,EAAE;;QAGpC,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAC3C,OAAO;;;;YAIL,MAAM,IAAI;gBACR,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;;;;YAID,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;;;;YAID,MAAM,EAAE,CAAC,WAAyB,EAAE;gBAClC,OAAO,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,iBAAiB,kBAC1D,WAAW,EAAE,QAAQ,CAAC,WAAW,IAC9B,OAAO,EACV,CAAC;aACJ;SACF,CAAC;KACH;;;;;;;;;;;;IAaO,MAAM,wBAAwB,CACpC,MAAe,EACf,UAAwC,EAAE;QAE1C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,0CAA0C,EAC1C,OAAO,CACR,CAAC;QACF,IAAI;YACF,MAAM,GAAG,MAAM,KAAK,EAAE,GAAG,SAAS,GAAG,MAAM,CAAC;YAC5C,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAAG,kBAC1D,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,MAAM,IACH,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YACH,MAAM,QAAQ,GAAG,WAA4C,CAAC;YAC9D,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,qBAAqB,IAAI,CAAC,CAAC;YACrE,QAAQ,CAAC,iBAAiB,GAAG,WAAW,CAAC,4BAA4B,IAAI,CAAC,CAAC;YAC3E,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAED,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,oBAAoB,CAC/B,UAAwC,EAAE;QAE1C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,sCAAsC,EAAE,OAAO,CAAC,CAAC;QAC7F,IAAI;YACF,IAAI,aAAa,GAAG,CAAC,CAAC;YACtB,IAAI,4BAA4B,GAAG,CAAC,CAAC;YACrC,IAAI,MAAM,GAAuB,EAAE,CAAC;YAEpC,GAAG;gBACD,MAAM,QAAQ,GAAkC,MAAM,IAAI,CAAC,wBAAwB,CACjF,MAAM,EACN,EAAE,cAAc,EAAE,cAAc,CAAC,cAAc,EAAE,CAClD,CAAC;gBACF,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACzB,IAAI,QAAQ,CAAC,kBAAkB,EAAE;oBAC/B,aAAa,IAAI,QAAQ,CAAC,kBAAkB,CAAC;iBAC9C;gBACD,IAAI,QAAQ,CAAC,iBAAiB,EAAE;oBAC9B,4BAA4B,IAAI,QAAQ,CAAC,iBAAiB,CAAC;iBAC5D;aACF,QAAQ,MAAM,EAAE;YAEjB,OAAO;gBACL,kBAAkB,EAAE,aAAa;gBACjC,iBAAiB,EAAE,4BAA4B;aAChD,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,gBAAgB,CAC3B,QAAgB,EAChB,UAAwC,EAAE;QAE1C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,IAAI,QAAQ,KAAK,GAAG,EAAE;gBACpB,MAAM,IAAI,UAAU,CAClB,0GAA0G,CAC3G,CAAC;aACH;YAED,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,kBAC/D,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YACH,MAAM,QAAQ,GAAG,WAA4C,CAAC;YAC9D,QAAQ,CAAC,kBAAkB,GAAG,WAAW,CAAC,qBAAqB,IAAI,CAAC,CAAC;YACrE,QAAQ,CAAC,iBAAiB,GAAG,WAAW,CAAC,4BAA4B,IAAI,CAAC,CAAC;YAC3E,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,mBAAmB,CAAC,cAAuB;QAChD,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;KACnD;;;;;;;;;;;;IAaM,cAAc,CAAC,OAAkC;QACtD,IAAI,EAAE,IAAI,CAAC,UAAU,YAAY,0BAA0B,CAAC,EAAE;YAC5D,MAAM,UAAU,CACd,uFAAuF,CACxF,CAAC;SACH;QAED,MAAM,GAAG,GAAG,8BAA8B,iBAEtC,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,QAAQ,EAAE,IAAI,CAAC,IAAI,IAChB,OAAO,GAEZ,IAAI,CAAC,UAAU,CAChB,CAAC,QAAQ,EAAE,CAAC;QAEb,OAAO,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACxC;CACF;AAuED;;;;;;AAMA,MAAa,gBAAgB;;;;;;IA4B3B,YAAY,MAAuB,EAAE,OAAgB;QACnD,MAAM,aAAa,GAAG,IAAI,oBAAoB,CAAC,MAAM,CAAC,GAAG,kBACvD,OAAO,EAAE,eAAe,IACpB,MAAc,CAAC,QAAQ,CAAC,sBAAsB,EAAE,EACpD,CAAC;QAEH,IAAI,MAAM,YAAY,WAAW,EAAE;YACjC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC;SAC5C;QACD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;QAEvB,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAGE,qBAAY,EAAE,CAAC;SAC1B;QACD,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;KACzB;;;;;;IArCD,IAAW,OAAO;QAChB,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;;;;;IAOD,IAAW,GAAG;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;;;;;;;;IAmCM,MAAM,YAAY,CACvB,WAAmB,CAAC,CAAC,EACrB,UAAiC,EAAE;QAEnC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;QACtF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,iBACxC,WAAW,EAAE,OAAO,CAAC,WAAW,EAChC,QAAQ,EACR,eAAe,EAAE,IAAI,CAAC,QAAQ,IAC3B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEF,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,WAAW,CACtB,eAAuB,EACvB,UAAiC,EAAE;QAEnC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;QACrF,IAAI;YACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,kBAC/D,eAAe,EACf,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YACH,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;YAChC,OAAO,QAAQ,CAAC;SACjB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,YAAY,CAAC,UAAiC,EAAE;QAC3D,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,+BAA+B,EAAE,OAAO,CAAC,CAAC;QACtF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,kBACtD,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;IAQM,MAAM,UAAU,CAAC,UAAiC,EAAE;QACzD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QACpF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,WAAW,CAAC,UAAU,iBACtC,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,UAAU,CAAC,UAAiC,EAAE;QACzD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,6BAA6B,EAAE,OAAO,CAAC,CAAC;QAEpF,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,MAAM,IAAI,UAAU,CAAC,8DAA8D,CAAC,CAAC;SACtF;QAED,IAAI;YACF,OAAO,MAAO,IAAI,CAAC,WAAqB,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,kBAC/D,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;CACF;;ACzwKD;AACA,AAOA;;;AAGA,MAAa,mBAAoB,SAAQ,aAAa;IAGpD,YAAY,GAAW,EAAE,QAAkB;QACzC,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACrD;IAEM,MAAM,OAAO,CAAC,UAAsC,EAAE;QAC3D,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;KACtC;CACF;;ACtBD;AACA,AA0NA;;;;AAIA,MAAa,kBAAmB,SAAQ,aAAa;IAsEnD,YACE,GAAW,EACX,oBAA4C;;;IAG5C,OAAgC;QAEhC,IAAI,QAAkB,CAAC;QACvB,IAAI,oBAAoB,YAAY,QAAQ,EAAE;YAC5C,QAAQ,GAAG,oBAAoB,CAAC;SACjC;aAAM,IAAI,oBAAoB,YAAY,UAAU,EAAE;YACrD,QAAQ,GAAG,WAAW,CAAC,oBAAoB,EAAE,OAAO,CAAC,CAAC;SACvD;aAAM;;YAEL,QAAQ,GAAG,WAAW,CAAC,IAAI,mBAAmB,EAAE,EAAE,OAAO,CAAC,CAAC;SAC5D;QAED,KAAK,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;KAC9D;;;;;;;;;;;;;;IAtEM,OAAO,oBAAoB,CAChC,gBAAwB;;;IAGxB,OAAgC;QAEhC,MAAM,cAAc,GAAG,4BAA4B,CAAC,gBAAgB,CAAC,CAAC;QACtE,IAAI,cAAc,CAAC,IAAI,KAAK,mBAAmB,EAAE;YAC/C,AAAY;gBACV,MAAM,mBAAmB,GAAG,IAAI,0BAA0B,CACxD,cAAc,CAAC,WAAY,EAC3B,cAAc,CAAC,UAAU,CAC1B,CAAC;gBACF,MAAM,QAAQ,GAAG,WAAW,CAAC,mBAAmB,EAAE,OAAO,CAAC,CAAC;gBAC3D,OAAO,IAAI,kBAAkB,CAAC,cAAc,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;aAC7D,AAEA;SACF;aAAM,IAAI,cAAc,CAAC,IAAI,KAAK,eAAe,EAAE;YAClD,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,mBAAmB,EAAE,EAAE,OAAO,CAAC,CAAC;YACjE,OAAO,IAAI,kBAAkB,CAAC,cAAc,CAAC,GAAG,GAAG,GAAG,GAAG,cAAc,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;SAC/F;aAAM;YACL,MAAM,IAAI,KAAK,CACb,0FAA0F,CAC3F,CAAC;SACH;KACF;;;;;;;;;;;;;;;IA4DM,cAAc,CAAC,SAAiB;QACrC,OAAO,IAAI,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,EAAE,SAAS,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC7E;;;;;;;;IASM,MAAM,WAAW,CACtB,SAAiB,EACjB,UAA8B,EAAE;QAEhC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;QACvF,IAAI;YACF,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACnD,MAAM,mBAAmB,GAAG,MAAM,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;YACrE,OAAO;gBACL,mBAAmB;gBACnB,WAAW;aACZ,CAAC;SACH;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;IASM,MAAM,WAAW,CACtB,SAAiB,EACjB,UAAoC,EAAE;QAEtC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,gCAAgC,EAAE,OAAO,CAAC,CAAC;QACvF,IAAI;YACF,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;YACnD,OAAO,MAAM,WAAW,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SACjD;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;IAUM,MAAM,aAAa,CACxB,UAAuC,EAAE;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,iBAC5C,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;IAWM,MAAM,aAAa,CACxB,UAAiC,EACjC,UAAuC,EAAE;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,OAAO,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,UAAU,kBACvD,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;IAcc,YAAY,CACzB,MAAe,EACf,UAA2C,EAAE;;YAE7C,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;gBACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;aAC5B;YAED,IAAI,yBAAyB,CAAC;YAC9B,GAAG;gBACD,yBAAyB,GAAG,oBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,CAAC;gBAC1E,MAAM,GAAG,yBAAyB,CAAC,iBAAiB,CAAC;gBACrD,0BAAM,oBAAM,yBAAyB,CAAA,CAAA,CAAC;aACvC,QAAQ,MAAM,EAAE;SAClB;KAAA;;;;;;IAOc,SAAS,CACtB,UAA2C,EAAE;;;YAE7C,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;gBACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;aAC5B;YAED,IAAI,MAA0B,CAAC;;gBAC/B,KAA4B,IAAA,KAAAC,oBAAA,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA,IAAA;oBAAnD,MAAM,OAAO,WAAA,CAAA;oBACtB,IAAI,OAAO,CAAC,UAAU,EAAE;wBACtB,oBAAA,OAAOE,uBAAAF,oBAAA,OAAO,CAAC,UAAU,CAAA,CAAA,CAAA,CAAC;qBAC3B;iBACF;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA4EM,UAAU,CACf,UAAoC,EAAE;QAEtC,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;SAC5B;QAED,MAAM,OAAO,GAA4B,EAAE,CAAC;QAC5C,IAAI,OAAO,CAAC,eAAe,EAAE;YAC3B,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC1B;QACD,IAAI,OAAO,CAAC,gBAAgB,EAAE;YAC5B,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAC3B;QACD,IAAI,OAAO,CAAC,cAAc,EAAE;YAC1B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACzB;QAED,MAAM,cAAc,mCACf,OAAO,IACN,OAAO,CAAC,MAAM,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,EACnD,CAAC;;QAGF,MAAM,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;QAC5C,OAAO;;;;YAIL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;;;;YAID,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;;;;YAID,MAAM,EAAE,CAAC,WAAyB,EAAE;gBAClC,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,iBAAiB,kBACjD,UAAU,EAAE,QAAQ,CAAC,WAAW,IAC7B,cAAc,EACjB,CAAC;aACJ;SACF,CAAC;KACH;;;;;;;;;;;;;;IAeO,MAAM,iBAAiB,CAC7B,MAAe,EACf,UAA2C,EAAE;QAE7C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,sCAAsC,EAAE,OAAO,CAAC,CAAC;QAE7F,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;YACzB,OAAO,CAAC,MAAM,GAAG,SAAS,CAAC;SAC5B;QAED,IAAI;YACF,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,iBAAiB,+BACrD,MAAM,IACH,OAAO,GACP,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;;YAGH,IAAI,GAAG,CAAC,UAAU,EAAE;gBAClB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBAC9C,MAAM,YAAY,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC;oBAClE,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAkB,CAAC,SAAS,GAAG,gBAAgB,CAAC,YAAY,CAAC,CAAC;iBAClF;aACF;YAED,OAAO,GAAG,CAAC;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAED,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;IAYM,MAAM,aAAa,CACxB,gBAAwB,EACxB,mBAA2B,EAC3B,UAAuC,EAAE;QAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;QACzF,IAAI;YACF,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;YAC1D,MAAM,IAAI,mBAAmB,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,iBACnE,gBAAgB,EAAE,gBAAgB,EAClC,mBAAmB,EAAE,mBAAmB,EACxC,WAAW,EAAE,OAAO,CAAC,WAAW,IAC7B,kCAAkC,CAAC,cAAc,CAAC,EACrD,CAAC;YACH,OAAO,WAAW,CAAC;SACpB;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,SAAS,CAAC;gBACb,IAAI,EAAEA,0BAAc,CAAC,KAAK;gBAC1B,OAAO,EAAE,CAAC,CAAC,OAAO;aACnB,CAAC,CAAC;YACH,MAAM,CAAC,CAAC;SACT;gBAAS;YACR,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;KACF;;;;;;;;;;;;;;;IAgBM,qBAAqB,CAC1B,SAAgB,EAChB,cAAqC,qBAAqB,CAAC,KAAK,CAAC,GAAG,CAAC,EACrE,gBAAwB,KAAK,EAC7B,UAA+C,EAAE;QAEjD,IAAI,EAAE,IAAI,CAAC,UAAU,YAAY,0BAA0B,CAAC,EAAE;YAC5D,MAAM,UAAU,CACd,+FAA+F,CAChG,CAAC;SACH;QAED,IAAI,SAAS,KAAK,SAAS,EAAE;YAC3B,MAAM,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;YACvB,SAAS,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;SACnD;QAED,MAAM,GAAG,GAAG,iCAAiC,iBAEzC,WAAW;YACX,SAAS;YACT,aAAa,EACb,QAAQ,EAAE,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,IAC/C,OAAO,GAEZ,IAAI,CAAC,UAAU,CAChB,CAAC,QAAQ,EAAE,CAAC;QAEb,OAAO,gBAAgB,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACxC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}