{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/models.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAClC,OAAO,EAAE,oBAAoB,EAAE,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAE,oBAAoB,EAAE,MAAM,sBAAsB,CAAC;AAC5D,OAAO,EAAE,MAAM,EAAE,MAAM,OAAO,CAAC;AA6K/B;;;;GAIG;AACH,MAAM,UAAU,gBAAgB,CAAC,eAAwB;IACvD,IAAI,eAAe,KAAK,SAAS,EAAE;QACjC,OAAO,SAAS,CAAC;KAClB;IAED,MAAM,gBAAgB,GAAG,eAAe,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpD,MAAM,SAAS,GAAmB,EAAE,CAAC;IACrC,KAAK,MAAM,QAAQ,IAAI,gBAAgB,EAAE;QACvC,IAAI,QAAQ,KAAK,KAAK,EAAE;YACtB,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;SAC7B;aAAM,IAAI,QAAQ,KAAK,KAAK,EAAE;YAC7B,SAAS,CAAC,UAAU,GAAG,IAAI,CAAC;SAC7B;KACF;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;AAED;;;;GAIG;AACH,MAAM,UAAU,sBAAsB,CAAC,YAA4B,EAAE;IACnE,IAAI,WAAW,GAAG,SAAS,CAAC;IAE5B,IAAI,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;QACjC,WAAW,GAAG,KAAK,CAAC;KACrB;IACD,IAAI,SAAS,CAAC,UAAU,KAAK,IAAI,EAAE;QACjC,MAAM,CAAC,IAAI,CACT,6GAA6G,CAC9G,CAAC;QACF,WAAW,GAAG,KAAK,CAAC;KACrB;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,MAAM,UAAU,6BAA6B,CAC3C,cAAuB,EACvB,iBAA0B;IAE1B,IAAI,cAAc,IAAI,iBAAiB,EAAE;QACvC,MAAM,IAAI,UAAU,CAAC,mEAAmE,CAAC,CAAC;KAC3F;AACH,CAAC;AAED,MAAM,UAAU,4DAA4D,CAC1E,OAA4C;IAE5C,6CAA6C;IAE7C,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,GAAG,EAAE,CAAC;KACd;IAED,6BAA6B,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEjF,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;QACzB,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;KAC9B;IAED,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;QAC1B,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC;KAC/B;IAED,IAAI,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;QACzD,OAAO,CAAC,cAAc,GAAG,SAAS,CAAC;KACpC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,mEAAmE,CACjF,OAAmD;IAEnD,6CAA6C;IAE7C,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,GAAG,EAAE,CAAC;KACd;IAED,6BAA6B,CAAC,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEjF,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE;QACzB,OAAO,CAAC,YAAY,GAAG,UAAU,CAAC;KACnC;IAED,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE;QAC1B,OAAO,CAAC,aAAa,GAAG,UAAU,CAAC;KACpC;IAED,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE;QAC3B,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC;KACrC;IAED,IAAI,CAAC,OAAO,CAAC,cAAc,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE;QACzD,OAAO,CAAC,cAAc,GAAG,UAAU,CAAC;KACrC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,MAAM,UAAU,sBAAsB,CACpC,cAAiE;IAEjE,OAAO,cAAc,YAAY,oBAAoB;QACnD,CAAC,CAAC,cAAc,CAAC,QAAQ,EAAE;QAC3B,CAAC,CAAC,cAAc,CAAC;AACrB,CAAC;AAED,MAAM,UAAU,wBAAwB,CAAC,IAA2C;IAClF,OAAO,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAClE,CAAC;AAED,MAAM,UAAU,yBAAyB,CAAC,IAA2C;IACnF,OAAO,IAAI,YAAY,IAAI,CAAC,CAAC,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAClE,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { logger } from \"./log\";\n\nexport interface Metadata {\n  [propertyName: string]: string;\n}\n\nexport interface FileHttpHeaders {\n  /**\n   * Optional. Sets the file's cache\n   * control. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileCacheControl?: string;\n  /**\n   * Optional. Sets the file's content type.\n   * If specified, this property is stored with the file and returned with a\n   * read request.\n   */\n  fileContentType?: string;\n  /**\n   * Optional. An MD5 hash of the file\n   * content. Note that this hash is not validated, as the hashes for the\n   * individual blocks were validated when each was uploaded.\n   */\n  fileContentMD5?: Uint8Array;\n  /**\n   * Optional. Sets the file's content\n   * encoding. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentEncoding?: string;\n  /**\n   * Optional. Set the file's content\n   * language. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentLanguage?: string;\n  /**\n   * Optional. Sets the file's\n   * Content-Disposition header.\n   */\n  fileContentDisposition?: string;\n}\n\n/**\n * Indicates inherit file permission from the parent directory.\n */\nexport type FilePermissionInheritType = \"inherit\";\n\n/**\n * Indicates keep existing file permission value unchanged.\n */\nexport type FilePermissionPreserveType = \"preserve\";\n\n/**\n * Indicates setting as the time of the request.\n */\nexport type TimeNowType = \"now\";\n\n/**\n * Indicates keep existing time value unchanged.\n */\nexport type TimePreserveType = \"preserve\";\n\n/**\n * Indicates keep existing file attributes unchanged.\n */\nexport type FileAttributesPreserveType = \"preserve\";\n\nexport interface FileAndDirectoryCreateCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, inherit will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  creationTime?: Date | TimeNowType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  lastWriteTime?: Date | TimeNowType;\n}\n\nexport interface FileAndDirectorySetPropertiesCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   * A value of preserve may be passed to keep the value unchanged.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, preserve will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType | FilePermissionPreserveType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes | FileAttributesPreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  creationTime?: Date | TimeNowType | TimePreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  lastWriteTime?: Date | TimeNowType | TimePreserveType;\n}\n\n/**\n * Close handles result information.\n */\nexport interface CloseHandlesInfo {\n  closedHandlesCount: number;\n  /**\n   * Contains count of number of handles that failed to close.\n   */\n  closeFailureCount?: number;\n}\n\n/**\n * Protocols to enable on the share. For now, only support SMB or NFS.\n */\nexport interface ShareProtocols {\n  /**\n   * The share can be accessed by SMBv3.0, SMBv2.1 and REST.\n   */\n  smbEnabled?: boolean;\n  /**\n   * The share can be accessed by NFSv4.1.\n   */\n  nfsEnabled?: boolean;\n}\n\n/**\n * Convert protocols from joined string to ShareProtocols.\n *\n * @param protocolsString -\n */\nexport function toShareProtocols(protocolsString?: string): ShareProtocols | undefined {\n  if (protocolsString === undefined) {\n    return undefined;\n  }\n\n  const protocolStrArray = protocolsString.split(\";\");\n  const protocols: ShareProtocols = {};\n  for (const protocol of protocolStrArray) {\n    if (protocol === \"SMB\") {\n      protocols.smbEnabled = true;\n    } else if (protocol === \"NFS\") {\n      protocols.nfsEnabled = true;\n    }\n  }\n  return protocols;\n}\n\n/**\n * Convert ShareProtocols to joined string.\n *\n * @param protocols -\n */\nexport function toShareProtocolsString(protocols: ShareProtocols = {}): string | undefined {\n  let protocolStr = undefined;\n\n  if (protocols.smbEnabled === true) {\n    protocolStr = \"SMB\";\n  }\n  if (protocols.nfsEnabled === true) {\n    logger.info(\n      `Using \"NFS\" in favor of \"SMB\" for the share protocol as currently they can't be supported at the same time.`\n    );\n    protocolStr = \"NFS\";\n  }\n  return protocolStr;\n}\n\nexport function validateFilePermissionOptions(\n  filePermission?: string,\n  filePermissionKey?: string\n): void {\n  if (filePermission && filePermissionKey) {\n    throw new RangeError(\"Only one of filePermission or filePermissionKey can be specified.\");\n  }\n}\n\nexport function validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(\n  options: FileAndDirectoryCreateCommonOptions\n): FileAndDirectoryCreateCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"now\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"now\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"inherit\";\n  }\n\n  return options;\n}\n\nexport function validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(\n  options: FileAndDirectorySetPropertiesCommonOptions\n): FileAndDirectorySetPropertiesCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"preserve\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"preserve\";\n  }\n\n  if (!options.fileAttributes) {\n    options.fileAttributes = \"preserve\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"preserve\";\n  }\n\n  return options;\n}\n\nexport function fileAttributesToString(\n  fileAttributes: FileSystemAttributes | FileAttributesPreserveType\n): string {\n  return fileAttributes instanceof FileSystemAttributes\n    ? fileAttributes.toString()\n    : fileAttributes;\n}\n\nexport function fileCreationTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\nexport function fileLastWriteTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n"]}