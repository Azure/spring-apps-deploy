import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { AppPlatformManagementClientContext } from "../appPlatformManagementClientContext";
/** Class representing a Services. */
export declare class Services {
    private readonly client;
    /**
     * Create a Services.
     * @param {AppPlatformManagementClientContext} client Reference to the service client.
     */
    constructor(client: AppPlatformManagementClientContext);
    /**
     * Get a Service and its properties.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.ServiceResource>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceResource>): void;
    /**
     * Create a new Service or update an exiting Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param resource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, resource: Models.ServiceResource, options?: msRest.RequestOptionsBase): Promise<Models.ServicesCreateOrUpdateResponse>;
    /**
     * Operation to delete a Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Operation to update an exiting Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param resource Parameters for the update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesUpdateResponse>
     */
    update(resourceGroupName: string, serviceName: string, resource: Models.ServiceResource, options?: msRest.RequestOptionsBase): Promise<Models.ServicesUpdateResponse>;
    /**
     * List test keys for a Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesListTestKeysResponse>
     */
    listTestKeys(resourceGroupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListTestKeysResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param callback The callback
     */
    listTestKeys(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.TestKeys>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    listTestKeys(resourceGroupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestKeys>): void;
    /**
     * Regenerate a test key for a Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param regenerateTestKeyRequest Parameters for the operation
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesRegenerateTestKeyResponse>
     */
    regenerateTestKey(resourceGroupName: string, serviceName: string, regenerateTestKeyRequest: Models.RegenerateTestKeyRequestPayload, options?: msRest.RequestOptionsBase): Promise<Models.ServicesRegenerateTestKeyResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param regenerateTestKeyRequest Parameters for the operation
     * @param callback The callback
     */
    regenerateTestKey(resourceGroupName: string, serviceName: string, regenerateTestKeyRequest: Models.RegenerateTestKeyRequestPayload, callback: msRest.ServiceCallback<Models.TestKeys>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param regenerateTestKeyRequest Parameters for the operation
     * @param options The optional parameters
     * @param callback The callback
     */
    regenerateTestKey(resourceGroupName: string, serviceName: string, regenerateTestKeyRequest: Models.RegenerateTestKeyRequestPayload, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestKeys>): void;
    /**
     * Disable test endpoint functionality for a Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    disableTestEndpoint(resourceGroupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param callback The callback
     */
    disableTestEndpoint(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<void>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    disableTestEndpoint(resourceGroupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<void>): void;
    /**
     * Enable test endpoint functionality for a Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesEnableTestEndpointResponse>
     */
    enableTestEndpoint(resourceGroupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesEnableTestEndpointResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param callback The callback
     */
    enableTestEndpoint(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.TestKeys>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    enableTestEndpoint(resourceGroupName: string, serviceName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.TestKeys>): void;
    /**
     * Checks that the resource name is valid and is not already in use.
     * @param location the region
     * @param availabilityParameters Parameters supplied to the operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesCheckNameAvailabilityResponse>
     */
    checkNameAvailability(location: string, availabilityParameters: Models.NameAvailabilityParameters, options?: msRest.RequestOptionsBase): Promise<Models.ServicesCheckNameAvailabilityResponse>;
    /**
     * @param location the region
     * @param availabilityParameters Parameters supplied to the operation.
     * @param callback The callback
     */
    checkNameAvailability(location: string, availabilityParameters: Models.NameAvailabilityParameters, callback: msRest.ServiceCallback<Models.NameAvailability>): void;
    /**
     * @param location the region
     * @param availabilityParameters Parameters supplied to the operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    checkNameAvailability(location: string, availabilityParameters: Models.NameAvailabilityParameters, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.NameAvailability>): void;
    /**
     * Handles requests to list all resources in a subscription.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesListBySubscriptionResponse>
     */
    listBySubscription(options?: msRest.RequestOptionsBase): Promise<Models.ServicesListBySubscriptionResponse>;
    /**
     * @param callback The callback
     */
    listBySubscription(callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscription(options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * Handles requests to list all resources in a resource group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesListResponse>
     */
    list(resourceGroupName: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param callback The callback
     */
    list(resourceGroupName: string, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * Create a new Service or update an exiting Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param resource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, serviceName: string, resource: Models.ServiceResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Operation to delete a Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, serviceName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Operation to update an exiting Service.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param resource Parameters for the update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, serviceName: string, resource: Models.ServiceResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Handles requests to list all resources in a subscription.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesListBySubscriptionNextResponse>
     */
    listBySubscriptionNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListBySubscriptionNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listBySubscriptionNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * Handles requests to list all resources in a resource group.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.ServicesListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.ServicesListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.ServiceResourceList>): void;
}
//# sourceMappingURL=services.d.ts.map