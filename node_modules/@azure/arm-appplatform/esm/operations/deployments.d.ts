import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { AppPlatformManagementClientContext } from "../appPlatformManagementClientContext";
/** Class representing a Deployments. */
export declare class Deployments {
    private readonly client;
    /**
     * Create a Deployments.
     * @param {AppPlatformManagementClientContext} client Reference to the service client.
     */
    constructor(client: AppPlatformManagementClientContext);
    /**
     * Get a Deployment and its properties.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, callback: msRest.ServiceCallback<Models.DeploymentResource>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.DeploymentResource>): void;
    /**
     * Create a new Deployment or update an exiting Deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param deploymentResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, deploymentResource: Models.DeploymentResource, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsCreateOrUpdateResponse>;
    /**
     * Operation to delete a Deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Operation to update an exiting Deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param deploymentResource Parameters for the update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsUpdateResponse>
     */
    update(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, deploymentResource: Models.DeploymentResource, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsUpdateResponse>;
    /**
     * Handles requests to list all resources in an App.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsListResponse>
     */
    list(resourceGroupName: string, serviceName: string, appName: string, options?: Models.DeploymentsListOptionalParams): Promise<Models.DeploymentsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param callback The callback
     */
    list(resourceGroupName: string, serviceName: string, appName: string, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, serviceName: string, appName: string, options: Models.DeploymentsListOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * List deployments for a certain service
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsListForClusterResponse>
     */
    listForCluster(resourceGroupName: string, serviceName: string, options?: Models.DeploymentsListForClusterOptionalParams): Promise<Models.DeploymentsListForClusterResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param callback The callback
     */
    listForCluster(resourceGroupName: string, serviceName: string, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    listForCluster(resourceGroupName: string, serviceName: string, options: Models.DeploymentsListForClusterOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * Start the deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    start(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Stop the deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    stop(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Restart the deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    restart(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Get deployment log file URL
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsGetLogFileUrlResponse>
     */
    getLogFileUrl(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<Models.DeploymentsGetLogFileUrlResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param callback The callback
     */
    getLogFileUrl(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, callback: msRest.ServiceCallback<Models.LogFileUrlResponse>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    getLogFileUrl(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.LogFileUrlResponse>): void;
    /**
     * Create a new Deployment or update an exiting Deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param deploymentResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, deploymentResource: Models.DeploymentResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Operation to delete a Deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Operation to update an exiting Deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param deploymentResource Parameters for the update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, deploymentResource: Models.DeploymentResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Start the deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStart(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Stop the deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginStop(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Restart the deployment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param deploymentName The name of the Deployment resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginRestart(resourceGroupName: string, serviceName: string, appName: string, deploymentName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Handles requests to list all resources in an App.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsListNextResponse>
     */
    listNext(nextPageLink: string, options?: Models.DeploymentsListNextOptionalParams): Promise<Models.DeploymentsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: Models.DeploymentsListNextOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * List deployments for a certain service
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.DeploymentsListForClusterNextResponse>
     */
    listForClusterNext(nextPageLink: string, options?: Models.DeploymentsListForClusterNextOptionalParams): Promise<Models.DeploymentsListForClusterNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listForClusterNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listForClusterNext(nextPageLink: string, options: Models.DeploymentsListForClusterNextOptionalParams, callback: msRest.ServiceCallback<Models.DeploymentResourceCollection>): void;
}
//# sourceMappingURL=deployments.d.ts.map