import * as msRest from "@azure/ms-rest-js";
import * as msRestAzure from "@azure/ms-rest-azure-js";
import * as Models from "../models";
import { AppPlatformManagementClientContext } from "../appPlatformManagementClientContext";
/** Class representing a Bindings. */
export declare class Bindings {
    private readonly client;
    /**
     * Create a Bindings.
     * @param {AppPlatformManagementClientContext} client Reference to the service client.
     */
    constructor(client: AppPlatformManagementClientContext);
    /**
     * Get a Binding and its properties.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.BindingsGetResponse>
     */
    get(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, options?: msRest.RequestOptionsBase): Promise<Models.BindingsGetResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, callback: msRest.ServiceCallback<Models.BindingResource>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    get(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BindingResource>): void;
    /**
     * Create a new Binding or update an exiting Binding.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param bindingResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.BindingsCreateOrUpdateResponse>
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, bindingResource: Models.BindingResource, options?: msRest.RequestOptionsBase): Promise<Models.BindingsCreateOrUpdateResponse>;
    /**
     * Operation to delete a Binding.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    deleteMethod(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, options?: msRest.RequestOptionsBase): Promise<msRest.RestResponse>;
    /**
     * Operation to update an exiting Binding.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param bindingResource Parameters for the update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.BindingsUpdateResponse>
     */
    update(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, bindingResource: Models.BindingResource, options?: msRest.RequestOptionsBase): Promise<Models.BindingsUpdateResponse>;
    /**
     * Handles requests to list all resources in an App.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param [options] The optional parameters
     * @returns Promise<Models.BindingsListResponse>
     */
    list(resourceGroupName: string, serviceName: string, appName: string, options?: msRest.RequestOptionsBase): Promise<Models.BindingsListResponse>;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param callback The callback
     */
    list(resourceGroupName: string, serviceName: string, appName: string, callback: msRest.ServiceCallback<Models.BindingResourceCollection>): void;
    /**
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param options The optional parameters
     * @param callback The callback
     */
    list(resourceGroupName: string, serviceName: string, appName: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BindingResourceCollection>): void;
    /**
     * Create a new Binding or update an exiting Binding.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param bindingResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginCreateOrUpdate(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, bindingResource: Models.BindingResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Operation to delete a Binding.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginDeleteMethod(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Operation to update an exiting Binding.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param bindingName The name of the Binding resource.
     * @param bindingResource Parameters for the update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    beginUpdate(resourceGroupName: string, serviceName: string, appName: string, bindingName: string, bindingResource: Models.BindingResource, options?: msRest.RequestOptionsBase): Promise<msRestAzure.LROPoller>;
    /**
     * Handles requests to list all resources in an App.
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param [options] The optional parameters
     * @returns Promise<Models.BindingsListNextResponse>
     */
    listNext(nextPageLink: string, options?: msRest.RequestOptionsBase): Promise<Models.BindingsListNextResponse>;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param callback The callback
     */
    listNext(nextPageLink: string, callback: msRest.ServiceCallback<Models.BindingResourceCollection>): void;
    /**
     * @param nextPageLink The NextLink from the previous successful call to List operation.
     * @param options The optional parameters
     * @param callback The callback
     */
    listNext(nextPageLink: string, options: msRest.RequestOptionsBase, callback: msRest.ServiceCallback<Models.BindingResourceCollection>): void;
}
//# sourceMappingURL=bindings.d.ts.map