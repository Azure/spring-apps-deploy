/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
import { __assign } from "tslib";
import * as msRest from "@azure/ms-rest-js";
import * as Mappers from "../models/customDomainsMappers";
import * as Parameters from "../models/parameters";
/** Class representing a CustomDomains. */
var CustomDomains = /** @class */ (function () {
    /**
     * Create a CustomDomains.
     * @param {AppPlatformManagementClientContext} client Reference to the service client.
     */
    function CustomDomains(client) {
        this.client = client;
    }
    CustomDomains.prototype.get = function (resourceGroupName, serviceName, appName, domainName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            appName: appName,
            domainName: domainName,
            options: options
        }, getOperationSpec, callback);
    };
    /**
     * Create or update custom domain of one lifecycle application.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param domainName The name of the custom domain resource.
     * @param domainResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.CustomDomainsCreateOrUpdateResponse>
     */
    CustomDomains.prototype.createOrUpdate = function (resourceGroupName, serviceName, appName, domainName, domainResource, options) {
        return this.beginCreateOrUpdate(resourceGroupName, serviceName, appName, domainName, domainResource, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Delete the custom domain of one lifecycle application.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param domainName The name of the custom domain resource.
     * @param [options] The optional parameters
     * @returns Promise<msRest.RestResponse>
     */
    CustomDomains.prototype.deleteMethod = function (resourceGroupName, serviceName, appName, domainName, options) {
        return this.beginDeleteMethod(resourceGroupName, serviceName, appName, domainName, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    /**
     * Update custom domain of one lifecycle application.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param domainName The name of the custom domain resource.
     * @param domainResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<Models.CustomDomainsUpdateResponse>
     */
    CustomDomains.prototype.update = function (resourceGroupName, serviceName, appName, domainName, domainResource, options) {
        return this.beginUpdate(resourceGroupName, serviceName, appName, domainName, domainResource, options)
            .then(function (lroPoller) { return lroPoller.pollUntilFinished(); });
    };
    CustomDomains.prototype.list = function (resourceGroupName, serviceName, appName, options, callback) {
        return this.client.sendOperationRequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            appName: appName,
            options: options
        }, listOperationSpec, callback);
    };
    /**
     * Create or update custom domain of one lifecycle application.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param domainName The name of the custom domain resource.
     * @param domainResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CustomDomains.prototype.beginCreateOrUpdate = function (resourceGroupName, serviceName, appName, domainName, domainResource, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            appName: appName,
            domainName: domainName,
            domainResource: domainResource,
            options: options
        }, beginCreateOrUpdateOperationSpec, options);
    };
    /**
     * Delete the custom domain of one lifecycle application.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param domainName The name of the custom domain resource.
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CustomDomains.prototype.beginDeleteMethod = function (resourceGroupName, serviceName, appName, domainName, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            appName: appName,
            domainName: domainName,
            options: options
        }, beginDeleteMethodOperationSpec, options);
    };
    /**
     * Update custom domain of one lifecycle application.
     * @param resourceGroupName The name of the resource group that contains the resource. You can
     * obtain this value from the Azure Resource Manager API or the portal.
     * @param serviceName The name of the Service resource.
     * @param appName The name of the App resource.
     * @param domainName The name of the custom domain resource.
     * @param domainResource Parameters for the create or update operation
     * @param [options] The optional parameters
     * @returns Promise<msRestAzure.LROPoller>
     */
    CustomDomains.prototype.beginUpdate = function (resourceGroupName, serviceName, appName, domainName, domainResource, options) {
        return this.client.sendLRORequest({
            resourceGroupName: resourceGroupName,
            serviceName: serviceName,
            appName: appName,
            domainName: domainName,
            domainResource: domainResource,
            options: options
        }, beginUpdateOperationSpec, options);
    };
    CustomDomains.prototype.listNext = function (nextPageLink, options, callback) {
        return this.client.sendOperationRequest({
            nextPageLink: nextPageLink,
            options: options
        }, listNextOperationSpec, callback);
    };
    return CustomDomains;
}());
export { CustomDomains };
// Operation Specifications
var serializer = new msRest.Serializer(Mappers);
var getOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.appName,
        Parameters.domainName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CustomDomainResource
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listOperationSpec = {
    httpMethod: "GET",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.appName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CustomDomainResourceCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginCreateOrUpdateOperationSpec = {
    httpMethod: "PUT",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.appName,
        Parameters.domainName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "domainResource",
        mapper: __assign(__assign({}, Mappers.CustomDomainResource), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CustomDomainResource
        },
        201: {
            bodyMapper: Mappers.CustomDomainResource
        },
        202: {
            bodyMapper: Mappers.CustomDomainResource
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginDeleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.appName,
        Parameters.domainName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {},
        202: {},
        204: {},
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var beginUpdateOperationSpec = {
    httpMethod: "PATCH",
    path: "subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}",
    urlParameters: [
        Parameters.subscriptionId,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.appName,
        Parameters.domainName
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    requestBody: {
        parameterPath: "domainResource",
        mapper: __assign(__assign({}, Mappers.CustomDomainResource), { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.CustomDomainResource
        },
        202: {
            bodyMapper: Mappers.CustomDomainResource
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
var listNextOperationSpec = {
    httpMethod: "GET",
    baseUrl: "https://management.azure.com",
    path: "{nextLink}",
    urlParameters: [
        Parameters.nextPageLink
    ],
    queryParameters: [
        Parameters.apiVersion
    ],
    headerParameters: [
        Parameters.acceptLanguage
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CustomDomainResourceCollection
        },
        default: {
            bodyMapper: Mappers.CloudError
        }
    },
    serializer: serializer
};
//# sourceMappingURL=customDomains.js.map