{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/lroImpl.ts","../src/operations/services.ts","../src/operations/configServers.ts","../src/operations/configurationServices.ts","../src/operations/serviceRegistries.ts","../src/operations/applicationLiveViews.ts","../src/operations/devToolPortals.ts","../src/operations/containerRegistries.ts","../src/operations/buildServiceOperations.ts","../src/operations/buildpackBinding.ts","../src/operations/buildServiceBuilder.ts","../src/operations/buildServiceAgentPool.ts","../src/operations/monitoringSettings.ts","../src/operations/apps.ts","../src/operations/bindings.ts","../src/operations/storages.ts","../src/operations/certificates.ts","../src/operations/customDomains.ts","../src/operations/deployments.ts","../src/operations/operations.ts","../src/operations/runtimeVersions.ts","../src/operations/skus.ts","../src/operations/gateways.ts","../src/operations/gatewayRouteConfigs.ts","../src/operations/gatewayCustomDomains.ts","../src/operations/apiPortals.ts","../src/operations/apiPortalCustomDomains.ts","../src/operations/applicationAccelerators.ts","../src/operations/customizedAccelerators.ts","../src/operations/predefinedAccelerators.ts","../src/appPlatformManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport type ContainerRegistryCredentialsUnion =\n  | ContainerRegistryCredentials\n  | ContainerRegistryBasicCredentials;\nexport type CustomPersistentDiskPropertiesUnion =\n  | CustomPersistentDiskProperties\n  | AzureFileVolume;\nexport type StoragePropertiesUnion = StorageProperties | StorageAccount;\nexport type CertificatePropertiesUnion =\n  | CertificateProperties\n  | KeyVaultCertificateProperties\n  | ContentCertificateProperties;\nexport type UserSourceInfoUnion =\n  | UserSourceInfo\n  | UploadedUserSourceInfoUnion\n  | BuildResultUserSourceInfo\n  | CustomContainerUserSourceInfo;\nexport type ProbeActionUnion =\n  | ProbeAction\n  | HttpGetAction\n  | ExecAction\n  | TCPSocketAction;\nexport type AcceleratorAuthSettingUnion =\n  | AcceleratorAuthSetting\n  | AcceleratorPublicSetting\n  | AcceleratorBasicAuthSetting\n  | AcceleratorSshSetting;\nexport type UploadedUserSourceInfoUnion =\n  | UploadedUserSourceInfo\n  | JarUploadedUserSourceInfo\n  | SourceUploadedUserSourceInfo\n  | NetCoreZipUploadedUserSourceInfo;\n\n/** Service properties payload */\nexport interface ClusterResourceProperties {\n  /**\n   * Provisioning state of the Service\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /** Network profile of the Service */\n  networkProfile?: NetworkProfile;\n  /** Additional Service settings in vnet injection instance */\n  vnetAddons?: ServiceVNetAddons;\n  /**\n   * Version of the Service\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: number;\n  /**\n   * ServiceInstanceEntity GUID which uniquely identifies a created resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceId?: string;\n  /** The resource Id of the Managed Environment that the Spring Apps instance builds on */\n  managedEnvironmentId?: string;\n  /** The name of the resource group that contains the infrastructure resources */\n  infraResourceGroup?: string;\n  /**\n   * Power state of the Service\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly powerState?: PowerState;\n  zoneRedundant?: boolean;\n  /**\n   * Fully qualified dns name of the service instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdn?: string;\n  /** Purchasing 3rd party product of the Service resource. */\n  marketplaceResource?: MarketplaceResource;\n}\n\n/** Service network profile payload */\nexport interface NetworkProfile {\n  /** Fully qualified resource Id of the subnet to host Azure Spring Apps Service Runtime */\n  serviceRuntimeSubnetId?: string;\n  /** Fully qualified resource Id of the subnet to host customer apps in Azure Spring Apps */\n  appSubnetId?: string;\n  /** Azure Spring Apps service reserved CIDR */\n  serviceCidr?: string;\n  /** Name of the resource group containing network resources of Azure Spring Apps Service Runtime */\n  serviceRuntimeNetworkResourceGroup?: string;\n  /** Name of the resource group containing network resources for customer apps in Azure Spring Apps */\n  appNetworkResourceGroup?: string;\n  /**\n   * Desired outbound IP resources for Azure Spring Apps resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly outboundIPs?: NetworkProfileOutboundIPs;\n  /**\n   * Required inbound or outbound traffics for Azure Spring Apps resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredTraffics?: RequiredTraffic[];\n  /** Ingress configuration payload for Azure Spring Apps resource. */\n  ingressConfig?: IngressConfig;\n  /** The egress traffic type of Azure Spring Apps VNet instances. */\n  outboundType?: string;\n}\n\n/** Desired outbound IP resources for Azure Spring Apps resource. */\nexport interface NetworkProfileOutboundIPs {\n  /**\n   * A list of public IP addresses.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicIPs?: string[];\n}\n\n/** Required inbound or outbound traffic for Azure Spring Apps resource. */\nexport interface RequiredTraffic {\n  /**\n   * The protocol of required traffic\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly protocol?: string;\n  /**\n   * The port of required traffic\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly port?: number;\n  /**\n   * The ip list of required traffic\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly ips?: string[];\n  /**\n   * The FQDN list of required traffic\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdns?: string[];\n  /**\n   * The direction of required traffic\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly direction?: TrafficDirection;\n}\n\n/** Ingress configuration payload for Azure Spring Apps resource. */\nexport interface IngressConfig {\n  /** Ingress read time out in seconds. */\n  readTimeoutInSeconds?: number;\n}\n\n/** Additional Service settings in vnet injection instance */\nexport interface ServiceVNetAddons {\n  /** Indicates whether the log stream in vnet injection instance could be accessed from internet. */\n  logStreamPublicEndpoint?: boolean;\n  /** Indicates whether the data plane components(log stream, app connect, remote debugging) in vnet injection instance could be accessed from internet. */\n  dataPlanePublicEndpoint?: boolean;\n}\n\n/** Purchasing 3rd Party product for one Azure Spring Apps instance */\nexport interface MarketplaceResource {\n  /** The plan id of the 3rd Party Artifact that is being procured. */\n  plan?: string;\n  /** The publisher id of the 3rd Party Artifact that is being bought. */\n  publisher?: string;\n  /** The 3rd Party artifact that is being procured. */\n  product?: string;\n}\n\n/** Sku of Azure Spring Apps */\nexport interface Sku {\n  /** Name of the Sku */\n  name?: string;\n  /** Tier of the Sku */\n  tier?: string;\n  /** Current capacity of the target resource */\n  capacity?: number;\n}\n\n/** The core properties of ARM resources. */\nexport interface Resource {\n  /**\n   * Fully qualified resource Id for the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The type of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Metadata pertaining to creation and last modification of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: LastModifiedByType;\n  /** The timestamp of resource modification (UTC). */\n  lastModifiedAt?: Date;\n}\n\n/** An error response from the service. */\nexport interface CloudError {\n  /** An error response from the service. */\n  error?: CloudErrorBody;\n}\n\n/** An error response from the service. */\nexport interface CloudErrorBody {\n  /** An identifier for the error. Codes are invariant and are intended to be consumed programmatically. */\n  code?: string;\n  /** A message describing the error, intended to be suitable for display in a user interface. */\n  message?: string;\n  /** The target of the particular error. For example, the name of the property in error. */\n  target?: string;\n  /** A list of additional details about the error. */\n  details?: CloudErrorBody[];\n}\n\n/** Test keys payload */\nexport interface TestKeys {\n  /** Primary key */\n  primaryKey?: string;\n  /** Secondary key */\n  secondaryKey?: string;\n  /** Primary test endpoint */\n  primaryTestEndpoint?: string;\n  /** Secondary test endpoint */\n  secondaryTestEndpoint?: string;\n  /** Indicates whether the test endpoint feature enabled or not */\n  enabled?: boolean;\n}\n\n/** Regenerate test key request payload */\nexport interface RegenerateTestKeyRequestPayload {\n  /** Type of the test key */\n  keyType: TestKeyType;\n}\n\n/** Config server git properties payload */\nexport interface ConfigServerProperties {\n  /**\n   * State of the config server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ConfigServerState;\n  /** Error when apply config server settings. */\n  error?: ErrorModel;\n  /** Settings of config server. */\n  configServer?: ConfigServerSettings;\n}\n\n/** The error code compose of code and message. */\nexport interface ErrorModel {\n  /** The code of error. */\n  code?: string;\n  /** The message of error. */\n  message?: string;\n}\n\n/** The settings of config server. */\nexport interface ConfigServerSettings {\n  /** Property of git environment. */\n  gitProperty?: ConfigServerGitProperty;\n}\n\n/** Property of git. */\nexport interface ConfigServerGitProperty {\n  /** Repositories of git. */\n  repositories?: GitPatternRepository[];\n  /** URI of the repository */\n  uri: string;\n  /** Label of the repository */\n  label?: string;\n  /** Searching path of the repository */\n  searchPaths?: string[];\n  /** Username of git repository basic auth. */\n  username?: string;\n  /** Password of git repository basic auth. */\n  password?: string;\n  /** Public sshKey of git repository. */\n  hostKey?: string;\n  /** SshKey algorithm of git repository. */\n  hostKeyAlgorithm?: string;\n  /** Private sshKey algorithm of git repository. */\n  privateKey?: string;\n  /** Strict host key checking or not. */\n  strictHostKeyChecking?: boolean;\n}\n\n/** Git repository property payload for config server */\nexport interface GitPatternRepository {\n  /** Name of the repository */\n  name: string;\n  /** Collection of pattern of the repository */\n  pattern?: string[];\n  /** URI of the repository */\n  uri: string;\n  /** Label of the repository */\n  label?: string;\n  /** Searching path of the repository */\n  searchPaths?: string[];\n  /** Username of git repository basic auth. */\n  username?: string;\n  /** Password of git repository basic auth. */\n  password?: string;\n  /** Public sshKey of git repository. */\n  hostKey?: string;\n  /** SshKey algorithm of git repository. */\n  hostKeyAlgorithm?: string;\n  /** Private sshKey algorithm of git repository. */\n  privateKey?: string;\n  /** Strict host key checking or not. */\n  strictHostKeyChecking?: boolean;\n}\n\n/** Validation result for config server settings */\nexport interface ConfigServerSettingsValidateResult {\n  /** Indicate if the config server settings are valid */\n  isValid?: boolean;\n  /** The detail validation results */\n  details?: ConfigServerSettingsErrorRecord[];\n}\n\n/** Error record of the config server settings */\nexport interface ConfigServerSettingsErrorRecord {\n  /** The name of the config server settings error record */\n  name?: string;\n  /** The uri of the config server settings error record */\n  uri?: string;\n  /** The detail error messages of the record */\n  messages?: string[];\n}\n\n/** Application Configuration Service properties payload */\nexport interface ConfigurationServiceProperties {\n  /**\n   * State of the Application Configuration Service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ConfigurationServiceProvisioningState;\n  /**\n   * The requested resource quantity for required CPU and Memory.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRequests?: ConfigurationServiceResourceRequests;\n  /**\n   * Collection of instances belong to Application Configuration Service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: ConfigurationServiceInstance[];\n  /** The settings of Application Configuration Service. */\n  settings?: ConfigurationServiceSettings;\n}\n\n/** Resource request payload of Application Configuration Service */\nexport interface ConfigurationServiceResourceRequests {\n  /**\n   * Cpu allocated to each Application Configuration Service instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory allocated to each Application Configuration Service instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n  /**\n   * Instance count of the Application Configuration Service\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\n/** Collection of instances belong to the Application Configuration Service */\nexport interface ConfigurationServiceInstance {\n  /**\n   * Name of the Application Configuration Service instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the Application Configuration Service instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** The settings of Application Configuration Service. */\nexport interface ConfigurationServiceSettings {\n  /** Property of git environment. */\n  gitProperty?: ConfigurationServiceGitProperty;\n}\n\n/** Property of git environment. */\nexport interface ConfigurationServiceGitProperty {\n  /** Repositories of Application Configuration Service git property. */\n  repositories?: ConfigurationServiceGitRepository[];\n}\n\n/** Git repository property payload for Application Configuration Service */\nexport interface ConfigurationServiceGitRepository {\n  /** Name of the repository */\n  name: string;\n  /** Collection of patterns of the repository */\n  patterns: string[];\n  /** URI of the repository */\n  uri: string;\n  /** Label of the repository */\n  label: string;\n  /** Searching path of the repository */\n  searchPaths?: string[];\n  /** Username of git repository basic auth. */\n  username?: string;\n  /** Password of git repository basic auth. */\n  password?: string;\n  /** Public sshKey of git repository. */\n  hostKey?: string;\n  /** SshKey algorithm of git repository. */\n  hostKeyAlgorithm?: string;\n  /** Private sshKey algorithm of git repository. */\n  privateKey?: string;\n  /** Strict host key checking or not. */\n  strictHostKeyChecking?: boolean;\n}\n\n/** Object that includes an array of configuration service resources and a possible link for next set */\nexport interface ConfigurationServiceResourceCollection {\n  /** Collection of configuration service resources */\n  value?: ConfigurationServiceResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Validation result for configuration service settings */\nexport interface ConfigurationServiceSettingsValidateResult {\n  /** Validation result for configuration service settings */\n  gitPropertyValidationResult?: ConfigurationServiceGitPropertyValidateResult;\n}\n\n/** Validation result for configuration service settings */\nexport interface ConfigurationServiceGitPropertyValidateResult {\n  /** Indicate if the configuration service settings are valid */\n  isValid?: boolean;\n  /** The detail validation results */\n  gitReposValidationResult?: ValidationMessages[];\n}\n\n/** Validate messages of the configuration service git repositories */\nexport interface ValidationMessages {\n  /** The name of the configuration service git repository. */\n  name?: string;\n  /** Detailed validation messages. */\n  messages?: string[];\n}\n\n/** Service Registry properties payload */\nexport interface ServiceRegistryProperties {\n  /**\n   * State of the Service Registry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ServiceRegistryProvisioningState;\n  /**\n   * The requested resource quantity for required CPU and Memory.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRequests?: ServiceRegistryResourceRequests;\n  /**\n   * Collection of instances belong to Service Registry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: ServiceRegistryInstance[];\n}\n\n/** Resource request payload of Service Registry */\nexport interface ServiceRegistryResourceRequests {\n  /**\n   * Cpu allocated to each Service Registry instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory allocated to each Service Registry instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n  /**\n   * Instance count of the Service Registry\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\n/** Collection of instances belong to the Service Registry */\nexport interface ServiceRegistryInstance {\n  /**\n   * Name of the Service Registry instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the Service Registry instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** Object that includes an array of Service Registry resources and a possible link for next set */\nexport interface ServiceRegistryResourceCollection {\n  /** Collection of Service Registry resources */\n  value?: ServiceRegistryResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Object that includes an array of Application Live View resources and a possible link for next set */\nexport interface ApplicationLiveViewResourceCollection {\n  /** Collection of Application Live View resources */\n  value?: ApplicationLiveViewResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Application Live View properties payload */\nexport interface ApplicationLiveViewProperties {\n  /**\n   * State of the Application Live View.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ApplicationLiveViewProvisioningState;\n  /**\n   * Component details of Application Live View\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly components?: ApplicationLiveViewComponent[];\n}\n\n/** Application Live View properties payload */\nexport interface ApplicationLiveViewComponent {\n  /**\n   * Name of the component.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: any;\n  /**\n   * The requested resource quantity for required CPU and Memory.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRequests?: ApplicationLiveViewResourceRequests;\n  /**\n   * Collection of instances belong to Application Live View.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: ApplicationLiveViewInstance[];\n}\n\n/** The resource quantity for required CPU and Memory of Application Live View component */\nexport interface ApplicationLiveViewResourceRequests {\n  /**\n   * Cpu quantity allocated to each Application Live View component instance. 1 core can be represented by 1 or 1000m.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory quantity allocated to each Application Live View component instance. 1 GB can be represented by 1Gi or 1024Mi.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n  /**\n   * Desired instance count of Application Live View component instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\n/** Collection of instances belong to the Application Live View */\nexport interface ApplicationLiveViewInstance {\n  /**\n   * Name of the Application Live View instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the Application Live View instance. It can be Pending, Running, Succeeded, Failed, Unknown.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** Object that includes an array of Dev Tool Portal resources and a possible link for next set */\nexport interface DevToolPortalResourceCollection {\n  /** Collection of Dev Tool Portal resources */\n  value?: DevToolPortalResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Dev Tool Portal properties payload */\nexport interface DevToolPortalProperties {\n  /**\n   * State of the Dev Tool Portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: DevToolPortalProvisioningState;\n  /**\n   * The requested resource quantity for required CPU and Memory.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRequests?: DevToolPortalResourceRequests;\n  /**\n   * Collection of instances belong to Dev Tool Portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: DevToolPortalInstance[];\n  /** Indicates whether the resource exposes public endpoint */\n  public?: boolean;\n  /**\n   * URL of the resource, exposed when 'public' is true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly url?: string;\n  /** Single sign-on related configuration */\n  ssoProperties?: DevToolPortalSsoProperties;\n  /** Settings for Dev Tool Portal */\n  features?: DevToolPortalFeatureSettings;\n}\n\n/** The resource quantity for required CPU and Memory of Dev Tool Portal */\nexport interface DevToolPortalResourceRequests {\n  /**\n   * Cpu quantity allocated to each Dev Tool Portal instance. 1 core can be represented by 1 or 1000m\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory quantity allocated to each Dev Tool Portal instance. 1 GB can be represented by 1Gi or 1024Mi.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n  /**\n   * Desired instance count of Dev Tool Portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\n/** Collection of instances belong to the Dev Tool Portal. */\nexport interface DevToolPortalInstance {\n  /**\n   * Name of the Dev Tool Portal instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the Dev Tool Portal instance. It can be Pending, Running, Succeeded, Failed, Unknown.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** Single sign-on related configuration */\nexport interface DevToolPortalSsoProperties {\n  /** It defines the specific actions applications can be allowed to do on a user's behalf */\n  scopes?: string[];\n  /** The public identifier for the application */\n  clientId?: string;\n  /** The secret known only to the application and the authorization server */\n  clientSecret?: string;\n  /** The URI of a JSON file with generic OIDC provider configuration. */\n  metadataUrl?: string;\n}\n\n/** Settings for Dev Tool Portal */\nexport interface DevToolPortalFeatureSettings {\n  /** Detail of Accelerator plugin */\n  applicationAccelerator?: DevToolPortalFeatureDetail;\n  /** Detail of App Live View plugin */\n  applicationLiveView?: DevToolPortalFeatureDetail;\n}\n\n/** Detail settings for Dev Tool Portal feature */\nexport interface DevToolPortalFeatureDetail {\n  /** State of the plugin */\n  state?: DevToolPortalFeatureState;\n  /**\n   * Route path to visit the plugin\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly route?: string;\n}\n\n/** Collection compose of container registry resources list and a possible link for next page. */\nexport interface ContainerRegistryResourceCollection {\n  /** The container registry resources list. */\n  value?: ContainerRegistryResource[];\n  /** The link to next page of storage list. */\n  nextLink?: string;\n}\n\n/** Container registry resource payload. */\nexport interface ContainerRegistryProperties {\n  /** The credentials of the container registry resource. */\n  credentials: ContainerRegistryCredentialsUnion;\n  /**\n   * State of the Container Registry.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ContainerRegistryProvisioningState;\n}\n\n/** The credential for the container registry resource. */\nexport interface ContainerRegistryCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"BasicAuth\";\n}\n\n/** Object that includes an array of Build service resources and a possible link for next set */\nexport interface BuildServiceCollection {\n  /** Collection of Build service resources */\n  value?: BuildService[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Build service resource properties payload */\nexport interface BuildServiceProperties {\n  /** The resource id of the container registry used in this build service. */\n  containerRegistry?: string;\n  /**\n   * The installed KPack version in this build service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kPackVersion?: string;\n  /**\n   * Provisioning state of the KPack build service\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: BuildServiceProvisioningState;\n  /** The runtime resource configuration of this build service. */\n  resourceRequests?: BuildServicePropertiesResourceRequests;\n}\n\n/** The runtime resource configuration of this build service. */\nexport interface BuildServicePropertiesResourceRequests {\n  /**\n   * vCPU allocated to the entire build service node pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory allocated to the entire build service node pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n}\n\n/** Object that includes an array of Build resources and a possible link for next set */\nexport interface BuildCollection {\n  /** Collection of Build resources */\n  value?: Build[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Build resource properties payload */\nexport interface BuildProperties {\n  /** The relative path of source code */\n  relativePath?: string;\n  /** The resource id of builder to build the source code */\n  builder?: string;\n  /** The resource id of agent pool */\n  agentPool?: string;\n  /**\n   * Provisioning state of the KPack build result\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: BuildProvisioningState;\n  /** The environment variables for this build */\n  env?: { [propertyName: string]: string };\n  /**\n   *  The build result triggered by this build\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly triggeredBuildResult?: TriggeredBuildResult;\n  /** The customized build resource for this build */\n  resourceRequests?: BuildResourceRequests;\n}\n\n/** The build result triggered by a build */\nexport interface TriggeredBuildResult {\n  /** The unique build id of this build result */\n  id?: string;\n}\n\n/** Resource request payload of Build Resource. */\nexport interface BuildResourceRequests {\n  /**\n   * Optional Cpu allocated to the build resource. 1 core can be represented by 1 or 1000m.\n   * The default value is 1, this should not exceed build service agent pool cpu size.\n   */\n  cpu?: string;\n  /**\n   * Optional Memory allocated to the build resource. 1 GB can be represented by 1Gi or 1024Mi.\n   * The default value is 2Gi, this should not exceed build service agent pool memory size.\n   */\n  memory?: string;\n}\n\n/** Object that includes an array of BuildpackBinding resources and a possible link for next set */\nexport interface BuildpackBindingResourceCollection {\n  /** Collection of BuildpackBinding resources */\n  value?: BuildpackBindingResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Properties of a buildpack binding */\nexport interface BuildpackBindingProperties {\n  /** Buildpack Binding Type */\n  bindingType?: BindingType;\n  /**\n   * State of the Buildpack Binding.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: BuildpackBindingProvisioningState;\n  /** The object describes the buildpack binding launch properties */\n  launchProperties?: BuildpackBindingLaunchProperties;\n}\n\n/** Buildpack Binding Launch Properties */\nexport interface BuildpackBindingLaunchProperties {\n  /** Non-sensitive properties for launchProperties */\n  properties?: { [propertyName: string]: string };\n  /** Sensitive properties for launchProperties */\n  secrets?: { [propertyName: string]: string };\n}\n\n/** Object that includes an array of Build result resources and a possible link for next set */\nexport interface BuildResultCollection {\n  /** Collection of Build result resources */\n  value?: BuildResult[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Build result resource properties payload */\nexport interface BuildResultProperties {\n  /** The name of this build result */\n  name?: string;\n  /**\n   * Provisioning state of the KPack build result\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: BuildResultProvisioningState;\n  /** Error when build is failed. */\n  error?: ErrorModel;\n  /** The build pod name which can be used to get the build log streaming. */\n  buildPodName?: string;\n  /**\n   * All of the build stage (init-container and container) resources in build pod.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly buildStages?: BuildStageProperties[];\n  /**\n   * The container registry image of this build result.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly image?: string;\n}\n\n/** The build stage (init-container and container) resources in build pod. */\nexport interface BuildStageProperties {\n  /**\n   * The name of this build stage resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The provisioning state of this build stage resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: KPackBuildStageProvisioningState;\n  /**\n   * The exit code of this build init container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exitCode?: string;\n  /**\n   * The reason of this build init container.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: string;\n}\n\n/** Build result log resource properties payload */\nexport interface BuildResultLog {\n  /** The public download URL of this build result log */\n  blobUrl?: string;\n}\n\n/** KPack Builder properties payload */\nexport interface BuilderProperties {\n  /**\n   * Builder provision status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: BuilderProvisioningState;\n  /** Builder cluster stack property. */\n  stack?: StackProperties;\n  /** Builder buildpack groups. */\n  buildpackGroups?: BuildpacksGroupProperties[];\n}\n\n/** KPack ClusterStack properties payload */\nexport interface StackProperties {\n  /** Id of the ClusterStack. */\n  id?: string;\n  /** Version of the ClusterStack */\n  version?: string;\n}\n\n/** Buildpack group properties of the Builder */\nexport interface BuildpacksGroupProperties {\n  /** Buildpack group name */\n  name?: string;\n  /** Buildpacks in the buildpack group */\n  buildpacks?: BuildpackProperties[];\n}\n\n/** Buildpack properties payload */\nexport interface BuildpackProperties {\n  /** Id of the buildpack */\n  id?: string;\n}\n\n/** Object that includes an array of Builder resources and a possible link for next set */\nexport interface BuilderResourceCollection {\n  /** Collection of Builder resources */\n  value?: BuilderResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Resource upload definition payload */\nexport interface ResourceUploadDefinition {\n  /** Source relative path */\n  relativePath?: string;\n  /** Upload URL */\n  uploadUrl?: string;\n}\n\n/** Object that includes an array of supported buildpacks resources and a possible link for next set */\nexport interface SupportedBuildpacksCollection {\n  /** Collection of supported buildpacks resources */\n  value?: SupportedBuildpackResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Supported buildpack resource properties */\nexport interface SupportedBuildpackResourceProperties {\n  /** The id of supported buildpack */\n  buildpackId?: string;\n}\n\n/** Object that includes an array of supported stacks resources and a possible link for next set */\nexport interface SupportedStacksCollection {\n  /** Collection of supported stacks resources */\n  value?: SupportedStackResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Supported stack resource properties */\nexport interface SupportedStackResourceProperties {\n  /** The id of supported stack */\n  stackId?: string;\n  /** The version of supported stack */\n  version?: string;\n}\n\n/** Object that includes an array of build service agent pool resources and a possible link for next set */\nexport interface BuildServiceAgentPoolResourceCollection {\n  /** Collection of build service agent pool resource */\n  value?: BuildServiceAgentPoolResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Build service agent pool properties */\nexport interface BuildServiceAgentPoolProperties {\n  /**\n   * Provisioning state of the build service agent pool\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n  /** build service agent pool size properties */\n  poolSize?: BuildServiceAgentPoolSizeProperties;\n}\n\n/** Build service agent pool size properties */\nexport interface BuildServiceAgentPoolSizeProperties {\n  /** The name of build service agent pool size */\n  name?: string;\n  /**\n   * The cpu property of build service agent pool size\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * The memory property of build service agent pool size\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n}\n\n/** Monitoring Setting properties payload */\nexport interface MonitoringSettingProperties {\n  /**\n   * State of the Monitoring Setting.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: MonitoringSettingState;\n  /** Error when apply Monitoring Setting changes. */\n  error?: ErrorModel;\n  /** Indicates whether enable the trace functionality, which will be deprecated since api version 2020-11-01-preview. Please leverage appInsightsInstrumentationKey to indicate if monitoringSettings enabled or not */\n  traceEnabled?: boolean;\n  /** Target application insight instrumentation key, null or whitespace include empty will disable monitoringSettings */\n  appInsightsInstrumentationKey?: string;\n  /** Indicates the sampling rate of application insight agent, should be in range [0.0, 100.0] */\n  appInsightsSamplingRate?: number;\n  /** Indicates the versions of application insight agent */\n  appInsightsAgentVersions?: ApplicationInsightsAgentVersions;\n}\n\n/** Application Insights agent versions properties payload */\nexport interface ApplicationInsightsAgentVersions {\n  /**\n   * Indicates the version of application insight java agent\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly java?: string;\n}\n\n/** App resource properties payload */\nexport interface AppResourceProperties {\n  /** Indicates whether the App exposes public endpoint */\n  public?: boolean;\n  /**\n   * URL of the App\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly url?: string;\n  /** Collection of addons */\n  addonConfigs?: { [propertyName: string]: Record<string, unknown> };\n  /**\n   * Provisioning state of the App\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: AppResourceProvisioningState;\n  /**\n   * Fully qualified dns Name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fqdn?: string;\n  /** Indicate if only https is allowed. */\n  httpsOnly?: boolean;\n  /** Temporary disk settings */\n  temporaryDisk?: TemporaryDisk;\n  /** Persistent disk settings */\n  persistentDisk?: PersistentDisk;\n  /** List of custom persistent disks */\n  customPersistentDisks?: CustomPersistentDiskResource[];\n  /** Indicate if end to end TLS is enabled. */\n  enableEndToEndTLS?: boolean;\n  /** Collection of loaded certificates */\n  loadedCertificates?: LoadedCertificate[];\n  /** Additional App settings in vnet injection instance */\n  vnetAddons?: AppVNetAddons;\n  /** App ingress settings payload. */\n  ingressSettings?: IngressSettings;\n  /** Collection of auth secrets */\n  secrets?: Secret[];\n}\n\n/** Temporary disk payload */\nexport interface TemporaryDisk {\n  /** Size of the temporary disk in GB */\n  sizeInGB?: number;\n  /** Mount path of the temporary disk */\n  mountPath?: string;\n}\n\n/** Persistent disk payload */\nexport interface PersistentDisk {\n  /** Size of the persistent disk in GB */\n  sizeInGB?: number;\n  /**\n   * Size of the used persistent disk in GB\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly usedInGB?: number;\n  /** Mount path of the persistent disk */\n  mountPath?: string;\n}\n\n/** Custom persistent disk resource payload. */\nexport interface CustomPersistentDiskResource {\n  /** Properties of the custom persistent disk resource payload. */\n  customPersistentDiskProperties?: CustomPersistentDiskPropertiesUnion;\n  /** The resource id of Azure Spring Apps Storage resource. */\n  storageId: string;\n}\n\n/** Custom persistent disk resource payload. */\nexport interface CustomPersistentDiskProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"AzureFileVolume\";\n  /** The mount path of the persistent disk. */\n  mountPath: string;\n  /** Indicates whether the persistent disk is a readOnly one. */\n  readOnly?: boolean;\n  /** If set to true, it will create and mount a dedicated directory for every individual app instance. */\n  enableSubPath?: boolean;\n  /** These are the mount options for a persistent disk. */\n  mountOptions?: string[];\n}\n\n/** Loaded certificate payload */\nexport interface LoadedCertificate {\n  /** Resource Id of loaded certificate */\n  resourceId: string;\n  /** Indicate whether the certificate will be loaded into default trust store, only work for Java runtime. */\n  loadTrustStore?: boolean;\n}\n\n/** Additional App settings in vnet injection instance */\nexport interface AppVNetAddons {\n  /** Indicates whether the App in vnet injection instance exposes endpoint which could be accessed from internet. */\n  publicEndpoint?: boolean;\n  /**\n   * URL of the App in vnet injection instance which could be accessed from internet\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly publicEndpointUrl?: string;\n}\n\n/** App ingress settings payload. */\nexport interface IngressSettings {\n  /** Ingress read time out in seconds. */\n  readTimeoutInSeconds?: number;\n  /** Ingress send time out in seconds. */\n  sendTimeoutInSeconds?: number;\n  /** Type of the affinity, set this to Cookie to enable session affinity. */\n  sessionAffinity?: SessionAffinity;\n  /** Time in seconds until the cookie expires. */\n  sessionCookieMaxAge?: number;\n  /** How ingress should communicate with this app backend service. */\n  backendProtocol?: BackendProtocol;\n  /** Client-Certification Authentication. */\n  clientAuth?: IngressSettingsClientAuth;\n}\n\n/** Client-Certification Authentication. */\nexport interface IngressSettingsClientAuth {\n  /** Collection of certificate resource id. */\n  certificates?: string[];\n}\n\n/** Secret definition. */\nexport interface Secret {\n  /** Secret Name. */\n  name?: string;\n  /** Secret Value. */\n  value?: string;\n}\n\n/** Managed identity properties retrieved from ARM request headers. */\nexport interface ManagedIdentityProperties {\n  /** Type of the managed identity */\n  type?: ManagedIdentityType;\n  /** Principal Id of system-assigned managed identity. */\n  principalId?: string;\n  /** Tenant Id of system-assigned managed identity. */\n  tenantId?: string;\n  /** Properties of user-assigned managed identities */\n  userAssignedIdentities?: {\n    [propertyName: string]: UserAssignedManagedIdentity;\n  };\n}\n\n/** The details of the user-assigned managed identity assigned to an App. */\nexport interface UserAssignedManagedIdentity {\n  /**\n   * Principal Id of user-assigned managed identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * Client Id of user-assigned managed identity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Object that includes an array of App resources and a possible link for next set */\nexport interface AppResourceCollection {\n  /** Collection of App resources */\n  value?: AppResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Object that includes an array of Deployment resource name and set them as active. */\nexport interface ActiveDeploymentCollection {\n  /** Collection of Deployment name. */\n  activeDeploymentNames?: string[];\n}\n\n/** Binding resource properties payload */\nexport interface BindingResourceProperties {\n  /**\n   * The name of the bound resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceName?: string;\n  /**\n   * The standard Azure resource type of the bound resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceType?: string;\n  /** The Azure resource id of the bound resource */\n  resourceId?: string;\n  /** The key of the bound resource */\n  key?: string;\n  /** Binding parameters of the Binding resource */\n  bindingParameters?: { [propertyName: string]: string };\n  /**\n   * The generated Spring Boot property file for this binding. The secret will be deducted.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly generatedProperties?: string;\n  /**\n   * Creation time of the Binding resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createdAt?: string;\n  /**\n   * Update time of the Binding resource\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updatedAt?: string;\n}\n\n/** Object that includes an array of Binding resources and a possible link for next set */\nexport interface BindingResourceCollection {\n  /** Collection of Binding resources */\n  value?: BindingResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Storage resource payload. */\nexport interface StorageProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  storageType: \"StorageAccount\";\n}\n\n/** Collection compose of storage resources list and a possible link for next page. */\nexport interface StorageResourceCollection {\n  /** The storage resources list. */\n  value?: StorageResource[];\n  /** The link to next page of storage list. */\n  nextLink?: string;\n}\n\n/** Certificate resource payload. */\nexport interface CertificateProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"KeyVaultCertificate\" | \"ContentCertificate\";\n  /**\n   * The thumbprint of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /**\n   * The issuer of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly issuer?: string;\n  /**\n   * The issue date of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly issuedDate?: string;\n  /**\n   * The expiration date of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expirationDate?: string;\n  /**\n   * The activate date of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly activateDate?: string;\n  /**\n   * The subject name of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subjectName?: string;\n  /**\n   * The domain list of certificate.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dnsNames?: string[];\n  /**\n   * Provisioning state of the Certificate\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: CertificateResourceProvisioningState;\n}\n\n/** Collection compose of certificate resources list and a possible link for next page. */\nexport interface CertificateResourceCollection {\n  /** The certificate resources list. */\n  value?: CertificateResource[];\n  /** The link to next page of certificate list. */\n  nextLink?: string;\n}\n\n/** Name availability parameters payload */\nexport interface NameAvailabilityParameters {\n  /** Type of the resource to check name availability */\n  type: string;\n  /** Name to be checked */\n  name: string;\n}\n\n/** Name availability result payload */\nexport interface NameAvailability {\n  /** Indicates whether the name is available */\n  nameAvailable?: boolean;\n  /** Reason why the name is not available */\n  reason?: string;\n  /** Message why the name is not available */\n  message?: string;\n}\n\n/** Custom domain of app resource payload. */\nexport interface CustomDomainProperties {\n  /** The thumbprint of bound certificate. */\n  thumbprint?: string;\n  /**\n   * The app name of domain.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly appName?: string;\n  /** The bound certificate name of domain. */\n  certName?: string;\n  /**\n   * Provisioning state of the Domain\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: CustomDomainResourceProvisioningState;\n}\n\n/** Collection compose of a custom domain resources list and a possible link for next page. */\nexport interface CustomDomainResourceCollection {\n  /** The custom domain resources list. */\n  value?: CustomDomainResource[];\n  /** The link to next page of custom domain list. */\n  nextLink?: string;\n}\n\n/** Custom domain validate payload. */\nexport interface CustomDomainValidatePayload {\n  /** Name to be validated */\n  name: string;\n}\n\n/** Validation result for custom domain. */\nexport interface CustomDomainValidateResult {\n  /** Indicates if domain name is valid. */\n  isValid?: boolean;\n  /** Message of why domain name is invalid. */\n  message?: string;\n}\n\n/** Deployment resource properties payload */\nexport interface DeploymentResourceProperties {\n  /** Uploaded source information of the deployment. */\n  source?: UserSourceInfoUnion;\n  /** Deployment settings of the Deployment */\n  deploymentSettings?: DeploymentSettings;\n  /**\n   * Provisioning state of the Deployment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: DeploymentResourceProvisioningState;\n  /**\n   * Status of the Deployment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: DeploymentResourceStatus;\n  /** Indicates whether the Deployment is active */\n  active?: boolean;\n  /**\n   * Collection of instances belong to the Deployment\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: DeploymentInstance[];\n}\n\n/** Source information for a deployment */\nexport interface UserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type:\n    | \"UploadedUserSourceInfo\"\n    | \"Jar\"\n    | \"Source\"\n    | \"NetCoreZip\"\n    | \"BuildResult\"\n    | \"Container\";\n  /** Version of the source */\n  version?: string;\n}\n\n/** Deployment settings payload */\nexport interface DeploymentSettings {\n  /** The requested resource quantity for required CPU and Memory. It is recommended that using this field to represent the required CPU and Memory, the old field cpu and memoryInGB will be deprecated later. */\n  resourceRequests?: ResourceRequests;\n  /** Collection of environment variables */\n  environmentVariables?: { [propertyName: string]: string };\n  /** Collection of addons */\n  addonConfigs?: { [propertyName: string]: Record<string, unknown> };\n  /** Periodic probe of App Instance liveness. App Instance will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */\n  livenessProbe?: Probe;\n  /** Periodic probe of App Instance service readiness. App Instance will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */\n  readinessProbe?: Probe;\n  /** StartupProbe indicates that the App Instance has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a App Instance's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */\n  startupProbe?: Probe;\n  /** Optional duration in seconds the App Instance needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the App Instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 90 seconds. */\n  terminationGracePeriodSeconds?: number;\n  /** Scaling properties for the Azure Spring Apps App Instance. */\n  scale?: Scale;\n  /** Container liveness and readiness probe settings */\n  containerProbeSettings?: ContainerProbeSettings;\n}\n\n/** Deployment resource request payload */\nexport interface ResourceRequests {\n  /** Required CPU. 1 core can be represented by 1 or 1000m. This should be 500m or 1 for Basic tier, and {500m, 1, 2, 3, 4} for Standard tier. */\n  cpu?: string;\n  /** Required memory. 1 GB can be represented by 1Gi or 1024Mi. This should be {512Mi, 1Gi, 2Gi} for Basic tier, and {512Mi, 1Gi, 2Gi, ..., 8Gi} for Standard tier. */\n  memory?: string;\n}\n\n/** Probe describes a health check to be performed against an App Instance to determine whether it is alive or ready to receive traffic. */\nexport interface Probe {\n  /** The action of the probe. */\n  probeAction?: ProbeActionUnion;\n  /** Indicate whether the probe is disabled. */\n  disableProbe: boolean;\n  /** Number of seconds after the App Instance has started before probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes */\n  initialDelaySeconds?: number;\n  /** How often (in seconds) to perform the probe. Minimum value is 1. */\n  periodSeconds?: number;\n  /** Number of seconds after which the probe times out. Minimum value is 1. */\n  timeoutSeconds?: number;\n  /** Minimum consecutive failures for the probe to be considered failed after having succeeded. Minimum value is 1. */\n  failureThreshold?: number;\n  /** Minimum consecutive successes for the probe to be considered successful after having failed. Must be 1 for liveness and startup. Minimum value is 1. */\n  successThreshold?: number;\n}\n\n/** The action of the probe. */\nexport interface ProbeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"HTTPGetAction\" | \"ExecAction\" | \"TCPSocketAction\";\n}\n\n/** Azure Spring Apps scaling configurations. */\nexport interface Scale {\n  /** Optional. Minimum number of container replicas. */\n  minReplicas?: number;\n  /** Optional. Maximum number of container replicas. Defaults to 10 if not set. */\n  maxReplicas?: number;\n  /** Scaling rules. */\n  rules?: ScaleRule[];\n}\n\n/** Azure Spring Apps App Instance scaling rule. */\nexport interface ScaleRule {\n  /** Scale Rule Name */\n  name?: string;\n  /** Azure Queue based scaling. */\n  azureQueue?: QueueScaleRule;\n  /** Custom scale rule. */\n  custom?: CustomScaleRule;\n  /** HTTP requests based scaling. */\n  http?: HttpScaleRule;\n  /** Tcp requests based scaling. */\n  tcp?: TcpScaleRule;\n}\n\n/** Azure Spring Apps App Instance Azure Queue based scaling rule. */\nexport interface QueueScaleRule {\n  /** Queue name. */\n  queueName?: string;\n  /** Queue length. */\n  queueLength?: number;\n  /** Authentication secrets for the queue scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Auth Secrets for Azure Spring Apps App Instance Scale Rule */\nexport interface ScaleRuleAuth {\n  /** Name of the Azure Spring Apps App Instance secret from which to pull the auth params. */\n  secretRef?: string;\n  /** Trigger Parameter that uses the secret */\n  triggerParameter?: string;\n}\n\n/** Azure Spring Apps App Instance Custom scaling rule. */\nexport interface CustomScaleRule {\n  /**\n   * Type of the custom scale rule\n   * eg: azure-servicebus, redis etc.\n   */\n  type?: string;\n  /** Metadata properties to describe custom scale rule. */\n  metadata?: { [propertyName: string]: string };\n  /** Authentication secrets for the custom scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Azure Spring Apps App Instance Http scaling rule. */\nexport interface HttpScaleRule {\n  /** Metadata properties to describe http scale rule. */\n  metadata?: { [propertyName: string]: string };\n  /** Authentication secrets for the custom scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Azure Spring Apps App Instance Tcp scaling rule. */\nexport interface TcpScaleRule {\n  /** Metadata properties to describe tcp scale rule. */\n  metadata?: { [propertyName: string]: string };\n  /** Authentication secrets for the tcp scale rule. */\n  auth?: ScaleRuleAuth[];\n}\n\n/** Container liveness and readiness probe settings */\nexport interface ContainerProbeSettings {\n  /** Indicates whether disable the liveness and readiness probe */\n  disableProbe?: boolean;\n}\n\n/** Deployment instance payload */\nexport interface DeploymentInstance {\n  /**\n   * Name of the deployment instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the deployment instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Failed reason of the deployment instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: string;\n  /**\n   * Discovery status of the deployment instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly discoveryStatus?: string;\n  /**\n   * Start time of the deployment instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * Availability zone information of the deployment instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zone?: string;\n}\n\n/** Object that includes an array of App resources and a possible link for next set */\nexport interface DeploymentResourceCollection {\n  /** Collection of Deployment resources */\n  value?: DeploymentResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** A list of deployments resource ids. */\nexport interface DeploymentList {\n  /** A list of deployment resource ids. */\n  deployments?: string[];\n}\n\n/** Remote debugging payload. */\nexport interface RemoteDebuggingPayload {\n  /** Application debugging port. */\n  port?: number;\n}\n\n/** Remote debugging config. */\nexport interface RemoteDebugging {\n  /** Application debugging port */\n  port?: number;\n  /** Indicate if remote debugging is enabled */\n  enabled?: boolean;\n}\n\n/** Log file URL payload */\nexport interface LogFileUrlResponse {\n  /** URL of the log file */\n  url: string;\n}\n\n/** Diagnostic parameters of diagnostic operations */\nexport interface DiagnosticParameters {\n  /** App instance name */\n  appInstance?: string;\n  /** Your target file path in your own BYOS */\n  filePath?: string;\n  /** Duration of your JFR. 1 min can be represented by 1m or 60s. */\n  duration?: string;\n}\n\n/** Object that includes an array of Service resources and a possible link for next set */\nexport interface ServiceResourceList {\n  /** Collection of Service resources */\n  value?: ServiceResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Available operations of the service */\nexport interface AvailableOperations {\n  /** Collection of available operation details */\n  value?: OperationDetail[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Operation detail payload */\nexport interface OperationDetail {\n  /** Name of the operation */\n  name?: string;\n  /** Indicates whether the operation is a data action */\n  isDataAction?: boolean;\n  /** Display of the operation */\n  display?: OperationDisplay;\n  /**\n   * Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionType?: ActionType;\n  /** Origin of the operation */\n  origin?: string;\n  /** Properties of the operation */\n  properties?: OperationProperties;\n}\n\n/** Operation display payload */\nexport interface OperationDisplay {\n  /** Resource provider of the operation */\n  provider?: string;\n  /** Resource of the operation */\n  resource?: string;\n  /** Localized friendly name for the operation */\n  operation?: string;\n  /** Localized friendly description for the operation */\n  description?: string;\n}\n\n/** Extra Operation properties */\nexport interface OperationProperties {\n  /** Service specifications of the operation */\n  serviceSpecification?: ServiceSpecification;\n}\n\n/** Service specification payload */\nexport interface ServiceSpecification {\n  /** Specifications of the Log for Azure Monitoring */\n  logSpecifications?: LogSpecification[];\n  /** Specifications of the Metrics for Azure Monitoring */\n  metricSpecifications?: MetricSpecification[];\n}\n\n/** Specifications of the Log for Azure Monitoring */\nexport interface LogSpecification {\n  /** Name of the log */\n  name?: string;\n  /** Localized friendly display name of the log */\n  displayName?: string;\n  /** Blob duration of the log */\n  blobDuration?: string;\n}\n\n/** Specifications of the Metrics for Azure Monitoring */\nexport interface MetricSpecification {\n  /** Name of the metric */\n  name?: string;\n  /** Localized friendly display name of the metric */\n  displayName?: string;\n  /** Localized friendly description of the metric */\n  displayDescription?: string;\n  /** Unit that makes sense for the metric */\n  unit?: string;\n  /** Name of the metric category that the metric belongs to. A metric can only belong to a single category. */\n  category?: string;\n  /** Only provide one value for this field. Valid values: Average, Minimum, Maximum, Total, Count. */\n  aggregationType?: string;\n  /** Supported aggregation types */\n  supportedAggregationTypes?: string[];\n  /** Supported time grain types */\n  supportedTimeGrainTypes?: string[];\n  /** Optional. If set to true, then zero will be returned for time duration where no metric is emitted/published. */\n  fillGapWithZero?: boolean;\n  /** Dimensions of the metric */\n  dimensions?: MetricDimension[];\n  /** Name of the MDM namespace. Optional. */\n  sourceMdmNamespace?: string;\n}\n\n/** Specifications of the Dimension of metrics */\nexport interface MetricDimension {\n  /** Name of the dimension */\n  name?: string;\n  /** Localized friendly display name of the dimension */\n  displayName?: string;\n  /** Whether this dimension should be included for the Shoebox export scenario */\n  toBeExportedForShoebox?: boolean;\n}\n\nexport interface AvailableRuntimeVersions {\n  /**\n   * A list of all supported runtime versions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SupportedRuntimeVersion[];\n}\n\n/** Supported deployment runtime version descriptor. */\nexport interface SupportedRuntimeVersion {\n  /** The raw value which could be passed to deployment CRUD operations. */\n  value?: SupportedRuntimeValue;\n  /** The platform of this runtime version (possible values: \"Java\" or \".NET\"). */\n  platform?: SupportedRuntimePlatform;\n  /** The detailed version (major.minor) of the platform. */\n  version?: string;\n}\n\n/** Object that includes an array of Azure Spring Apps SKU and a possible link for next set */\nexport interface ResourceSkuCollection {\n  /** Collection of resource SKU */\n  value?: ResourceSku[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Describes an available Azure Spring Apps SKU. */\nexport interface ResourceSku {\n  /** Gets the type of resource the SKU applies to. */\n  resourceType?: string;\n  /** Gets the name of SKU. */\n  name?: string;\n  /** Gets the tier of SKU. */\n  tier?: string;\n  /** Gets the capacity of SKU. */\n  capacity?: SkuCapacity;\n  /** Gets the set of locations that the SKU is available. */\n  locations?: string[];\n  /** Gets a list of locations and availability zones in those locations where the SKU is available. */\n  locationInfo?: ResourceSkuLocationInfo[];\n  /**\n   * Gets the restrictions because of which SKU cannot be used. This is\n   * empty if there are no restrictions.\n   */\n  restrictions?: ResourceSkuRestrictions[];\n}\n\n/** The SKU capacity */\nexport interface SkuCapacity {\n  /** Gets or sets the minimum. */\n  minimum: number;\n  /** Gets or sets the maximum. */\n  maximum?: number;\n  /** Gets or sets the default. */\n  default?: number;\n  /** Gets or sets the type of the scale. */\n  scaleType?: SkuScaleType;\n}\n\n/** Locations and availability zones where the SKU is available */\nexport interface ResourceSkuLocationInfo {\n  /** Gets location of the SKU */\n  location?: string;\n  /** Gets list of availability zones where the SKU is supported. */\n  zones?: string[];\n  /** Gets details of capabilities available to a SKU in specific zones. */\n  zoneDetails?: ResourceSkuZoneDetails[];\n}\n\n/** Details of capabilities available to a SKU in specific zones */\nexport interface ResourceSkuZoneDetails {\n  /**\n   * Gets the set of zones that the SKU is available in with the\n   * specified capabilities.\n   */\n  name?: string[];\n  /**\n   * Gets a list of capabilities that are available for the SKU in the\n   * specified list of zones.\n   */\n  capabilities?: ResourceSkuCapabilities[];\n}\n\nexport interface ResourceSkuCapabilities {\n  /** Gets an invariant to describe the feature. */\n  name?: string;\n  /** Gets an invariant if the feature is measured by quantity. */\n  value?: string;\n}\n\n/** Restrictions where the SKU cannot be used */\nexport interface ResourceSkuRestrictions {\n  /** Gets the type of restrictions. Possible values include: 'Location', 'Zone' */\n  type?: ResourceSkuRestrictionsType;\n  /**\n   * Gets the value of restrictions. If the restriction type is set to\n   * location. This would be different locations where the SKU is restricted.\n   */\n  values?: string[];\n  /** Gets the information about the restriction where the SKU cannot be used. */\n  restrictionInfo?: ResourceSkuRestrictionInfo;\n  /** Gets the reason for restriction. Possible values include: 'QuotaId', 'NotAvailableForSubscription' */\n  reasonCode?: ResourceSkuRestrictionsReasonCode;\n}\n\n/** Information about the restriction where the SKU cannot be used */\nexport interface ResourceSkuRestrictionInfo {\n  /** Gets locations where the SKU is restricted */\n  locations?: string[];\n  /** Gets list of availability zones where the SKU is restricted. */\n  zones?: string[];\n}\n\n/** Spring Cloud Gateway properties payload */\nexport interface GatewayProperties {\n  /**\n   * State of the Spring Cloud Gateway.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GatewayProvisioningState;\n  /** Indicates whether the Spring Cloud Gateway exposes endpoint. */\n  public?: boolean;\n  /**\n   * URL of the Spring Cloud Gateway, exposed when 'public' is true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly url?: string;\n  /** Indicate if only https is allowed. */\n  httpsOnly?: boolean;\n  /** Single sign-on related configuration */\n  ssoProperties?: SsoProperties;\n  /** API metadata property for Spring Cloud Gateway */\n  apiMetadataProperties?: GatewayApiMetadataProperties;\n  /** Cross-Origin Resource Sharing property */\n  corsProperties?: GatewayCorsProperties;\n  /** Client-Certification Authentication. */\n  clientAuth?: GatewayPropertiesClientAuth;\n  /** Collection of APM type used in Spring Cloud Gateway */\n  apmTypes?: ApmType[];\n  /** Environment variables of Spring Cloud Gateway */\n  environmentVariables?: GatewayPropertiesEnvironmentVariables;\n  /** The requested resource quantity for required CPU and Memory. */\n  resourceRequests?: GatewayResourceRequests;\n  /**\n   * Collection of instances belong to Spring Cloud Gateway.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: GatewayInstance[];\n  /**\n   * Properties of the Spring Cloud Gateway Operator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operatorProperties?: GatewayOperatorProperties;\n}\n\n/** Single sign-on related configuration */\nexport interface SsoProperties {\n  /** It defines the specific actions applications can be allowed to do on a user's behalf */\n  scope?: string[];\n  /** The public identifier for the application */\n  clientId?: string;\n  /** The secret known only to the application and the authorization server */\n  clientSecret?: string;\n  /** The URI of Issuer Identifier */\n  issuerUri?: string;\n}\n\n/** API metadata property for Spring Cloud Gateway */\nexport interface GatewayApiMetadataProperties {\n  /** Title describing the context of the APIs available on the Gateway instance (default: `Spring Cloud Gateway for K8S`) */\n  title?: string;\n  /** Detailed description of the APIs available on the Gateway instance (default: `Generated OpenAPI 3 document that describes the API routes configured.`) */\n  description?: string;\n  /** Location of additional documentation for the APIs available on the Gateway instance */\n  documentation?: string;\n  /** Version of APIs available on this Gateway instance (default: `unspecified`). */\n  version?: string;\n  /** Base URL that API consumers will use to access APIs on the Gateway instance. */\n  serverUrl?: string;\n}\n\n/** Cross-Origin Resource Sharing property */\nexport interface GatewayCorsProperties {\n  /** Allowed origins to make cross-site requests. The special value `*` allows all domains. */\n  allowedOrigins?: string[];\n  /** Allowed HTTP methods on cross-site requests. The special value `*` allows all methods. If not set, `GET` and `HEAD` are allowed by default. */\n  allowedMethods?: string[];\n  /** Allowed headers in cross-site requests. The special value `*` allows actual requests to send any header. */\n  allowedHeaders?: string[];\n  /** How long, in seconds, the response from a pre-flight request can be cached by clients. */\n  maxAge?: number;\n  /** Whether user credentials are supported on cross-site requests. Valid values: `true`, `false`. */\n  allowCredentials?: boolean;\n  /** HTTP response headers to expose for cross-site requests. */\n  exposedHeaders?: string[];\n}\n\n/** Client-Certification Authentication. */\nexport interface GatewayPropertiesClientAuth {\n  /** Collection of certificate resource Ids in Azure Spring Apps. */\n  certificates?: string[];\n  /** Whether to enable certificate verification or not */\n  certificateVerification?: GatewayCertificateVerification;\n}\n\n/** Environment variables of Spring Cloud Gateway */\nexport interface GatewayPropertiesEnvironmentVariables {\n  /** Non-sensitive properties */\n  properties?: { [propertyName: string]: string };\n  /** Sensitive properties */\n  secrets?: { [propertyName: string]: string };\n}\n\n/** Resource request payload of Spring Cloud Gateway. */\nexport interface GatewayResourceRequests {\n  /** Cpu allocated to each Spring Cloud Gateway instance. */\n  cpu?: string;\n  /** Memory allocated to each Spring Cloud Gateway instance. */\n  memory?: string;\n}\n\n/** Collection of instances belong to the Spring Cloud Gateway */\nexport interface GatewayInstance {\n  /**\n   * Name of the Spring Cloud Gateway instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the Spring Cloud Gateway instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** Properties of the Spring Cloud Gateway Operator. */\nexport interface GatewayOperatorProperties {\n  /**\n   * The requested resource quantity for required CPU and Memory.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRequests?: GatewayOperatorResourceRequests;\n  /**\n   * Collection of instances belong to Spring Cloud Gateway operator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: GatewayInstance[];\n}\n\n/** Properties of the Spring Cloud Gateway Operator. */\nexport interface GatewayOperatorResourceRequests {\n  /**\n   * Cpu allocated to each Spring Cloud Gateway Operator instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory allocated to each Spring Cloud Gateway Operator instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n  /**\n   * Instance count of the Spring Cloud Gateway Operator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\n/** Resource Sku object used for scaling out and scaling in. */\nexport interface SkuObject {\n  /** Sku of the Spring Cloud Gateway resource */\n  sku?: Sku;\n}\n\n/** Object that includes an array of gateway resources and a possible link for next set */\nexport interface GatewayResourceCollection {\n  /** Collection of gateway resources */\n  value?: GatewayResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** API route config of the Spring Cloud Gateway */\nexport interface GatewayRouteConfigProperties {\n  /**\n   * State of the Spring Cloud Gateway route config.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: GatewayProvisioningState;\n  /** The resource Id of the Azure Spring Apps app, required unless route defines `uri`. */\n  appResourceId?: string;\n  /** OpenAPI properties of Spring Cloud Gateway route config. */\n  openApi?: GatewayRouteConfigOpenApiProperties;\n  /** Protocol of routed Azure Spring Apps applications. */\n  protocol?: GatewayRouteConfigProtocol;\n  /** Array of API routes, each route contains properties such as `title`, `uri`, `ssoEnabled`, `predicates`, `filters`. */\n  routes?: GatewayApiRoute[];\n  /** Enable Single Sign-On in app level. */\n  ssoEnabled?: boolean;\n  /** A number of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request. */\n  predicates?: string[];\n  /** To modify the request before sending it to the target endpoint, or the received response in app level. */\n  filters?: string[];\n}\n\n/** OpenAPI properties of Spring Cloud Gateway route config. */\nexport interface GatewayRouteConfigOpenApiProperties {\n  /** The URI of OpenAPI specification. */\n  uri?: string;\n}\n\n/** API route config of the Spring Cloud Gateway */\nexport interface GatewayApiRoute {\n  /** A title, will be applied to methods in the generated OpenAPI documentation. */\n  title?: string;\n  /** A description, will be applied to methods in the generated OpenAPI documentation. */\n  description?: string;\n  /** Full uri, will override `appName`. */\n  uri?: string;\n  /** Enable sso validation. */\n  ssoEnabled?: boolean;\n  /** Pass currently-authenticated user's identity token to application service, default is 'false' */\n  tokenRelay?: boolean;\n  /** A number of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request. */\n  predicates?: string[];\n  /** To modify the request before sending it to the target endpoint, or the received response. */\n  filters?: string[];\n  /** Route processing order. */\n  order?: number;\n  /** Classification tags, will be applied to methods in the generated OpenAPI documentation. */\n  tags?: string[];\n}\n\n/** Object that includes an array of Spring Cloud Gateway route config resources and a possible link for next set */\nexport interface GatewayRouteConfigResourceCollection {\n  /** Collection of Spring Cloud Gateway route config resources */\n  value?: GatewayRouteConfigResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** The properties of custom domain for Spring Cloud Gateway */\nexport interface GatewayCustomDomainProperties {\n  /** The thumbprint of bound certificate. */\n  thumbprint?: string;\n}\n\n/** Object that includes an array of Spring Cloud Gateway custom domain resources and a possible link for next set */\nexport interface GatewayCustomDomainResourceCollection {\n  /** Collection of Spring Cloud Gateway custom domain resources */\n  value?: GatewayCustomDomainResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** API portal properties payload */\nexport interface ApiPortalProperties {\n  /**\n   * State of the API portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ApiPortalProvisioningState;\n  /** Indicates whether the API portal exposes endpoint. */\n  public?: boolean;\n  /**\n   * URL of the API portal, exposed when 'public' is true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly url?: string;\n  /** Indicate if only https is allowed. */\n  httpsOnly?: boolean;\n  /** The array of resource Ids of gateway to integrate with API portal. */\n  gatewayIds?: string[];\n  /** Collection of OpenAPI source URL locations. */\n  sourceUrls?: string[];\n  /** Single sign-on related configuration */\n  ssoProperties?: SsoProperties;\n  /**\n   * The requested resource quantity for required CPU and Memory.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceRequests?: ApiPortalResourceRequests;\n  /**\n   * Collection of instances belong to API portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instances?: ApiPortalInstance[];\n}\n\n/** Resource requests of the API portal */\nexport interface ApiPortalResourceRequests {\n  /**\n   * Cpu allocated to each API portal instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory allocated to each API portal instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n}\n\n/** Collection of instances belong to the API portal */\nexport interface ApiPortalInstance {\n  /**\n   * Name of the API portal instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the API portal instance\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** Object that includes an array of API portal resources and a possible link for next set */\nexport interface ApiPortalResourceCollection {\n  /** Collection of API portal resources */\n  value?: ApiPortalResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** The properties of custom domain for API portal */\nexport interface ApiPortalCustomDomainProperties {\n  /** The thumbprint of bound certificate. */\n  thumbprint?: string;\n}\n\n/** Object that includes an array of API portal custom domain resources and a possible link for next set */\nexport interface ApiPortalCustomDomainResourceCollection {\n  /** Collection of API portal custom domain resources */\n  value?: ApiPortalCustomDomainResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Object that includes an array of application accelerator resources and a possible link for next set */\nexport interface ApplicationAcceleratorResourceCollection {\n  /** Collection of application accelerator resources */\n  value?: ApplicationAcceleratorResource[];\n  /**\n   * URL client should use to fetch the next page (per server side paging).\n   * It's null for now, added for future use.\n   */\n  nextLink?: string;\n}\n\n/** Application accelerator properties payload */\nexport interface ApplicationAcceleratorProperties {\n  /**\n   * State of the application accelerator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ApplicationAcceleratorProvisioningState;\n  /**\n   * Collection of components belong to application accelerator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly components?: ApplicationAcceleratorComponent[];\n}\n\nexport interface ApplicationAcceleratorComponent {\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly name?: string;\n  resourceRequests?: ApplicationAcceleratorResourceRequests;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly instances?: ApplicationAcceleratorInstance[];\n}\n\nexport interface ApplicationAcceleratorResourceRequests {\n  /**\n   * Cpu allocated to each application accelerator component. 1 core can be represented by 1 or 1000m\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly cpu?: string;\n  /**\n   * Memory allocated to each application accelerator component. 1 GB can be represented by 1Gi or 1024Mi.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly memory?: string;\n  /**\n   * Instance count of the application accelerator component.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instanceCount?: number;\n}\n\nexport interface ApplicationAcceleratorInstance {\n  /**\n   * Name of the Application Accelerator instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Status of the Application Accelerator instance. It can be Pending, Running, Succeeded, Failed, Unknown.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\nexport interface CustomizedAcceleratorResourceCollection {\n  value?: CustomizedAcceleratorResource[];\n  nextLink?: string;\n}\n\n/** Customized accelerator properties payload */\nexport interface CustomizedAcceleratorProperties {\n  /**\n   * State of the customized accelerator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: CustomizedAcceleratorProvisioningState;\n  displayName?: string;\n  description?: string;\n  iconUrl?: string;\n  acceleratorTags?: string[];\n  gitRepository: AcceleratorGitRepository;\n}\n\nexport interface AcceleratorGitRepository {\n  /** Git repository URL for the accelerator. */\n  url: string;\n  /** Interval for checking for updates to Git or image repository. */\n  intervalInSeconds?: number;\n  /** Git repository branch to be used. */\n  branch?: string;\n  /** Git repository commit to be used. */\n  commit?: string;\n  /** Git repository tag to be used. */\n  gitTag?: string;\n  /** Properties of the auth setting payload. */\n  authSetting: AcceleratorAuthSettingUnion;\n}\n\n/** Auth setting payload. */\nexport interface AcceleratorAuthSetting {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"Public\" | \"BasicAuth\" | \"SSH\";\n}\n\n/** Validation result for customized accelerator properties */\nexport interface CustomizedAcceleratorValidateResult {\n  /** State of the customized accelerator validation result */\n  state?: CustomizedAcceleratorValidateResultState;\n  /** The detail validation results */\n  errorMessage?: string;\n}\n\nexport interface PredefinedAcceleratorResourceCollection {\n  value?: PredefinedAcceleratorResource[];\n  nextLink?: string;\n}\n\n/** Predefined accelerator properties payload */\nexport interface PredefinedAcceleratorProperties {\n  /**\n   * Provisioning state of the predefined accelerator.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PredefinedAcceleratorProvisioningState;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly displayName?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly description?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly iconUrl?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly acceleratorTags?: string[];\n  /** State of the predefined accelerator. */\n  state?: PredefinedAcceleratorState;\n}\n\n/** Custom container payload */\nexport interface CustomContainer {\n  /** The name of the registry that contains the container image */\n  server?: string;\n  /** Container image of the custom container. This should be in the form of <repository>:<tag> without the server name of the registry */\n  containerImage?: string;\n  /** Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. */\n  command?: string[];\n  /** Arguments to the entrypoint. The docker image's CMD is used if this is not provided. */\n  args?: string[];\n  /** Credential of the image registry */\n  imageRegistryCredential?: ImageRegistryCredential;\n  /** Language framework of the container image uploaded */\n  languageFramework?: string;\n}\n\n/** Credential of the image registry */\nexport interface ImageRegistryCredential {\n  /** The username of the image registry credential */\n  username?: string;\n  /** The password of the image registry credential */\n  password?: string;\n}\n\n/** The resource model definition for a ARM tracked top level resource. */\nexport interface TrackedResource extends Resource {\n  /** The GEO location of the resource. */\n  location?: string;\n  /** Tags of the service which is a list of key value pairs that describe the resource. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** The resource model definition for a ARM proxy resource. It will have everything other than required location and tags. */\nexport interface ProxyResource extends Resource {}\n\n/** The basic authentication properties for the container registry resource. */\nexport interface ContainerRegistryBasicCredentials\n  extends ContainerRegistryCredentials {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"BasicAuth\";\n  /** The login server of the Container Registry. */\n  server: string;\n  /** The username of the Container Registry. */\n  username: string;\n  /** The password of the Container Registry. */\n  password: string;\n}\n\n/** The properties of the Azure File volume. Azure File shares are mounted as volumes. */\nexport interface AzureFileVolume extends CustomPersistentDiskProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"AzureFileVolume\";\n  /** The share name of the Azure File share. */\n  shareName?: string;\n}\n\n/** storage resource of type Azure Storage Account. */\nexport interface StorageAccount extends StorageProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  storageType: \"StorageAccount\";\n  /** The account name of the Azure Storage Account. */\n  accountName: string;\n  /** The account key of the Azure Storage Account. */\n  accountKey: string;\n}\n\n/** Properties of certificate imported from key vault. */\nexport interface KeyVaultCertificateProperties extends CertificateProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"KeyVaultCertificate\";\n  /** The vault uri of user key vault. */\n  vaultUri: string;\n  /** The certificate name of key vault. */\n  keyVaultCertName: string;\n  /** The certificate version of key vault. */\n  certVersion?: string;\n  /** Optional. If set to true, it will not import private key from key vault. */\n  excludePrivateKey?: boolean;\n}\n\n/** Properties of certificate imported from key vault. */\nexport interface ContentCertificateProperties extends CertificateProperties {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"ContentCertificate\";\n  /** The content of uploaded certificate. */\n  content?: string;\n}\n\n/** Source with uploaded location */\nexport interface UploadedUserSourceInfo extends UserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"UploadedUserSourceInfo\" | \"Jar\" | \"Source\" | \"NetCoreZip\";\n  /** Relative path of the storage which stores the source */\n  relativePath?: string;\n}\n\n/** Reference to a build result */\nexport interface BuildResultUserSourceInfo extends UserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"BuildResult\";\n  /** Resource id of an existing succeeded build result under the same Spring instance. */\n  buildResultId?: string;\n}\n\n/** Custom container user source info */\nexport interface CustomContainerUserSourceInfo extends UserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Container\";\n  /** Custom container payload */\n  customContainer?: CustomContainer;\n}\n\n/** HTTPGetAction describes an action based on HTTP Get requests. */\nexport interface HttpGetAction extends ProbeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"HTTPGetAction\";\n  /** Path to access on the HTTP server. */\n  path?: string;\n  /**\n   * Scheme to use for connecting to the host. Defaults to HTTP.\n   *\n   * Possible enum values:\n   *  - `\"HTTP\"` means that the scheme used will be http://\n   *  - `\"HTTPS\"` means that the scheme used will be https://\n   */\n  scheme?: HttpSchemeType;\n}\n\n/** ExecAction describes a \"run in container\" action. */\nexport interface ExecAction extends ProbeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"ExecAction\";\n  /** Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. */\n  command?: string[];\n}\n\n/** TCPSocketAction describes an action based on opening a socket */\nexport interface TCPSocketAction extends ProbeAction {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"TCPSocketAction\";\n}\n\n/** Auth setting for public url. */\nexport interface AcceleratorPublicSetting extends AcceleratorAuthSetting {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"Public\";\n  /** Resource Id of CA certificate for https URL of Git repository. */\n  caCertResourceId?: string;\n}\n\n/** Auth setting for basic auth. */\nexport interface AcceleratorBasicAuthSetting extends AcceleratorAuthSetting {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"BasicAuth\";\n  /** Resource Id of CA certificate for https URL of Git repository. */\n  caCertResourceId?: string;\n  /** Username of git repository basic auth. */\n  username: string;\n  /** Password of git repository basic auth. */\n  password?: string;\n}\n\n/** Auth setting for SSH auth. */\nexport interface AcceleratorSshSetting extends AcceleratorAuthSetting {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  authType: \"SSH\";\n  /** Public SSH Key of git repository. */\n  hostKey?: string;\n  /** SSH Key algorithm of git repository. */\n  hostKeyAlgorithm?: string;\n  /** Private SSH Key algorithm of git repository. */\n  privateKey?: string;\n}\n\n/** Service resource */\nexport interface ServiceResource extends TrackedResource {\n  /** Properties of the Service resource */\n  properties?: ClusterResourceProperties;\n  /** Sku of the Service resource */\n  sku?: Sku;\n}\n\n/** Config Server resource */\nexport interface ConfigServerResource extends ProxyResource {\n  /** Properties of the Config Server resource */\n  properties?: ConfigServerProperties;\n}\n\n/** Application Configuration Service resource */\nexport interface ConfigurationServiceResource extends ProxyResource {\n  /** Application Configuration Service properties payload */\n  properties?: ConfigurationServiceProperties;\n}\n\n/** Service Registry resource */\nexport interface ServiceRegistryResource extends ProxyResource {\n  /** Service Registry properties payload */\n  properties?: ServiceRegistryProperties;\n}\n\n/** Application Live View resource */\nexport interface ApplicationLiveViewResource extends ProxyResource {\n  /** Application Live View properties payload */\n  properties?: ApplicationLiveViewProperties;\n}\n\n/** Dev Tool Portal resource */\nexport interface DevToolPortalResource extends ProxyResource {\n  /** Dev Tool Portal properties payload */\n  properties?: DevToolPortalProperties;\n}\n\n/** Container registry resource payload. */\nexport interface ContainerRegistryResource extends ProxyResource {\n  /** Properties of the container registry resource payload. */\n  properties?: ContainerRegistryProperties;\n}\n\n/** Build service resource payload */\nexport interface BuildService extends ProxyResource {\n  /** Properties of the build resource */\n  properties?: BuildServiceProperties;\n}\n\n/** Build resource payload */\nexport interface Build extends ProxyResource {\n  /** Properties of the build resource */\n  properties?: BuildProperties;\n}\n\n/** Buildpack Binding Resource object */\nexport interface BuildpackBindingResource extends ProxyResource {\n  /** Properties of a buildpack binding */\n  properties?: BuildpackBindingProperties;\n}\n\n/** Build result resource payload */\nexport interface BuildResult extends ProxyResource {\n  /** Properties of the build result resource */\n  properties?: BuildResultProperties;\n}\n\n/** KPack Builder resource */\nexport interface BuilderResource extends ProxyResource {\n  /** Property of the Builder resource. */\n  properties?: BuilderProperties;\n}\n\n/** Supported buildpack resource payload */\nexport interface SupportedBuildpackResource extends ProxyResource {\n  /** Supported buildpack resource properties */\n  properties?: SupportedBuildpackResourceProperties;\n}\n\n/** Supported stack resource payload */\nexport interface SupportedStackResource extends ProxyResource {\n  /** Supported stack resource properties */\n  properties?: SupportedStackResourceProperties;\n}\n\n/** The build service agent pool resource */\nexport interface BuildServiceAgentPoolResource extends ProxyResource {\n  /** build service agent pool properties */\n  properties?: BuildServiceAgentPoolProperties;\n}\n\n/** Monitoring Setting resource */\nexport interface MonitoringSettingResource extends ProxyResource {\n  /** Properties of the Monitoring Setting resource */\n  properties?: MonitoringSettingProperties;\n}\n\n/** App resource payload */\nexport interface AppResource extends ProxyResource {\n  /** Properties of the App resource */\n  properties?: AppResourceProperties;\n  /** The Managed Identity type of the app resource */\n  identity?: ManagedIdentityProperties;\n  /** The GEO location of the application, always the same with its parent resource */\n  location?: string;\n}\n\n/** Binding resource payload */\nexport interface BindingResource extends ProxyResource {\n  /** Properties of the Binding resource */\n  properties?: BindingResourceProperties;\n}\n\n/** Storage resource payload. */\nexport interface StorageResource extends ProxyResource {\n  /** Properties of the storage resource payload. */\n  properties?: StoragePropertiesUnion;\n}\n\n/** Certificate resource payload. */\nexport interface CertificateResource extends ProxyResource {\n  /** Properties of the certificate resource payload. */\n  properties?: CertificatePropertiesUnion;\n}\n\n/** Custom domain resource payload. */\nexport interface CustomDomainResource extends ProxyResource {\n  /** Properties of the custom domain resource. */\n  properties?: CustomDomainProperties;\n}\n\n/** Deployment resource payload */\nexport interface DeploymentResource extends ProxyResource {\n  /** Properties of the Deployment resource */\n  properties?: DeploymentResourceProperties;\n  /** Sku of the Deployment resource */\n  sku?: Sku;\n}\n\n/** Spring Cloud Gateway resource */\nexport interface GatewayResource extends ProxyResource {\n  /** Spring Cloud Gateway properties payload */\n  properties?: GatewayProperties;\n  /** Sku of the Spring Cloud Gateway resource */\n  sku?: Sku;\n}\n\n/** Spring Cloud Gateway route config resource */\nexport interface GatewayRouteConfigResource extends ProxyResource {\n  /** API route config of the Spring Cloud Gateway */\n  properties?: GatewayRouteConfigProperties;\n}\n\n/** Custom domain of the Spring Cloud Gateway */\nexport interface GatewayCustomDomainResource extends ProxyResource {\n  /** The properties of custom domain for Spring Cloud Gateway */\n  properties?: GatewayCustomDomainProperties;\n}\n\n/** API portal resource */\nexport interface ApiPortalResource extends ProxyResource {\n  /** API portal properties payload */\n  properties?: ApiPortalProperties;\n  /** Sku of the API portal resource */\n  sku?: Sku;\n}\n\n/** Custom domain of the API portal */\nexport interface ApiPortalCustomDomainResource extends ProxyResource {\n  /** The properties of custom domain for API portal */\n  properties?: ApiPortalCustomDomainProperties;\n}\n\n/** Application accelerator resource */\nexport interface ApplicationAcceleratorResource extends ProxyResource {\n  /** Application accelerator properties payload */\n  properties?: ApplicationAcceleratorProperties;\n  /** Sku of the application accelerator resource */\n  sku?: Sku;\n}\n\n/** Customized accelerator resource */\nexport interface CustomizedAcceleratorResource extends ProxyResource {\n  /** Customized accelerator properties payload */\n  properties?: CustomizedAcceleratorProperties;\n  /** Sku of the customized accelerator resource */\n  sku?: Sku;\n}\n\n/** Predefined accelerator resource */\nexport interface PredefinedAcceleratorResource extends ProxyResource {\n  /** Predefined accelerator properties payload */\n  properties?: PredefinedAcceleratorProperties;\n  /** Sku of the predefined accelerator resource */\n  sku?: Sku;\n}\n\n/** Uploaded Jar binary for a deployment */\nexport interface JarUploadedUserSourceInfo extends UploadedUserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Jar\";\n  /** Runtime version of the Jar file */\n  runtimeVersion?: string;\n  /** JVM parameter */\n  jvmOptions?: string;\n}\n\n/** Uploaded Java source code binary for a deployment */\nexport interface SourceUploadedUserSourceInfo extends UploadedUserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"Source\";\n  /**\n   * Selector for the artifact to be used for the deployment for multi-module projects. This should be\n   * the relative path to the target module/project.\n   */\n  artifactSelector?: string;\n  /** Runtime version of the source file */\n  runtimeVersion?: string;\n}\n\n/** Uploaded Jar binary for a deployment */\nexport interface NetCoreZipUploadedUserSourceInfo\n  extends UploadedUserSourceInfo {\n  /** Polymorphic discriminator, which specifies the different types this object can be */\n  type: \"NetCoreZip\";\n  /** The path to the .NET executable relative to zip root */\n  netCoreMainEntryPath?: string;\n  /** Runtime version of the .Net file */\n  runtimeVersion?: string;\n}\n\n/** Defines headers for BuildService_deleteBuild operation. */\nexport interface BuildServiceDeleteBuildHeaders {\n  location?: string;\n}\n\n/** Defines headers for Gateways_updateCapacity operation. */\nexport interface GatewaysUpdateCapacityHeaders {\n  location?: string;\n}\n\n/** Defines headers for Gateways_restart operation. */\nexport interface GatewaysRestartHeaders {\n  location?: string;\n}\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Starting */\n  Starting = \"Starting\",\n  /** Stopping */\n  Stopping = \"Stopping\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Moving */\n  Moving = \"Moving\",\n  /** Moved */\n  Moved = \"Moved\",\n  /** MoveFailed */\n  MoveFailed = \"MoveFailed\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Starting** \\\n * **Stopping** \\\n * **Deleting** \\\n * **Deleted** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Moving** \\\n * **Moved** \\\n * **MoveFailed**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link TrafficDirection} that the service accepts. */\nexport enum KnownTrafficDirection {\n  /** Inbound */\n  Inbound = \"Inbound\",\n  /** Outbound */\n  Outbound = \"Outbound\"\n}\n\n/**\n * Defines values for TrafficDirection. \\\n * {@link KnownTrafficDirection} can be used interchangeably with TrafficDirection,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inbound** \\\n * **Outbound**\n */\nexport type TrafficDirection = string;\n\n/** Known values of {@link PowerState} that the service accepts. */\nexport enum KnownPowerState {\n  /** Running */\n  Running = \"Running\",\n  /** Stopped */\n  Stopped = \"Stopped\"\n}\n\n/**\n * Defines values for PowerState. \\\n * {@link KnownPowerState} can be used interchangeably with PowerState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Running** \\\n * **Stopped**\n */\nexport type PowerState = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link LastModifiedByType} that the service accepts. */\nexport enum KnownLastModifiedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for LastModifiedByType. \\\n * {@link KnownLastModifiedByType} can be used interchangeably with LastModifiedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type LastModifiedByType = string;\n\n/** Known values of {@link TestKeyType} that the service accepts. */\nexport enum KnownTestKeyType {\n  /** Primary */\n  Primary = \"Primary\",\n  /** Secondary */\n  Secondary = \"Secondary\"\n}\n\n/**\n * Defines values for TestKeyType. \\\n * {@link KnownTestKeyType} can be used interchangeably with TestKeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Primary** \\\n * **Secondary**\n */\nexport type TestKeyType = string;\n\n/** Known values of {@link ConfigServerState} that the service accepts. */\nexport enum KnownConfigServerState {\n  /** NotAvailable */\n  NotAvailable = \"NotAvailable\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for ConfigServerState. \\\n * {@link KnownConfigServerState} can be used interchangeably with ConfigServerState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotAvailable** \\\n * **Deleted** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Updating**\n */\nexport type ConfigServerState = string;\n\n/** Known values of {@link ConfigurationServiceProvisioningState} that the service accepts. */\nexport enum KnownConfigurationServiceProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for ConfigurationServiceProvisioningState. \\\n * {@link KnownConfigurationServiceProvisioningState} can be used interchangeably with ConfigurationServiceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type ConfigurationServiceProvisioningState = string;\n\n/** Known values of {@link ServiceRegistryProvisioningState} that the service accepts. */\nexport enum KnownServiceRegistryProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for ServiceRegistryProvisioningState. \\\n * {@link KnownServiceRegistryProvisioningState} can be used interchangeably with ServiceRegistryProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type ServiceRegistryProvisioningState = string;\n\n/** Known values of {@link ApplicationLiveViewProvisioningState} that the service accepts. */\nexport enum KnownApplicationLiveViewProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ApplicationLiveViewProvisioningState. \\\n * {@link KnownApplicationLiveViewProvisioningState} can be used interchangeably with ApplicationLiveViewProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting** \\\n * **Canceled**\n */\nexport type ApplicationLiveViewProvisioningState = string;\n\n/** Known values of {@link DevToolPortalProvisioningState} that the service accepts. */\nexport enum KnownDevToolPortalProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for DevToolPortalProvisioningState. \\\n * {@link KnownDevToolPortalProvisioningState} can be used interchangeably with DevToolPortalProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting** \\\n * **Canceled**\n */\nexport type DevToolPortalProvisioningState = string;\n\n/** Known values of {@link DevToolPortalFeatureState} that the service accepts. */\nexport enum KnownDevToolPortalFeatureState {\n  /** Enable the plugin in Dev Tool Portal. */\n  Enabled = \"Enabled\",\n  /** Disable the plugin in Dev Tool Portal. */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for DevToolPortalFeatureState. \\\n * {@link KnownDevToolPortalFeatureState} can be used interchangeably with DevToolPortalFeatureState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled**: Enable the plugin in Dev Tool Portal. \\\n * **Disabled**: Disable the plugin in Dev Tool Portal.\n */\nexport type DevToolPortalFeatureState = string;\n\n/** Known values of {@link ContainerRegistryProvisioningState} that the service accepts. */\nexport enum KnownContainerRegistryProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ContainerRegistryProvisioningState. \\\n * {@link KnownContainerRegistryProvisioningState} can be used interchangeably with ContainerRegistryProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type ContainerRegistryProvisioningState = string;\n\n/** Known values of {@link BuildServiceProvisioningState} that the service accepts. */\nexport enum KnownBuildServiceProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for BuildServiceProvisioningState. \\\n * {@link KnownBuildServiceProvisioningState} can be used interchangeably with BuildServiceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type BuildServiceProvisioningState = string;\n\n/** Known values of {@link BuildProvisioningState} that the service accepts. */\nexport enum KnownBuildProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for BuildProvisioningState. \\\n * {@link KnownBuildProvisioningState} can be used interchangeably with BuildProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type BuildProvisioningState = string;\n\n/** Known values of {@link BindingType} that the service accepts. */\nexport enum KnownBindingType {\n  /** ApplicationInsights */\n  ApplicationInsights = \"ApplicationInsights\",\n  /** ApacheSkyWalking */\n  ApacheSkyWalking = \"ApacheSkyWalking\",\n  /** AppDynamics */\n  AppDynamics = \"AppDynamics\",\n  /** Dynatrace */\n  Dynatrace = \"Dynatrace\",\n  /** NewRelic */\n  NewRelic = \"NewRelic\",\n  /** ElasticAPM */\n  ElasticAPM = \"ElasticAPM\",\n  /** CACertificates */\n  CACertificates = \"CACertificates\"\n}\n\n/**\n * Defines values for BindingType. \\\n * {@link KnownBindingType} can be used interchangeably with BindingType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ApplicationInsights** \\\n * **ApacheSkyWalking** \\\n * **AppDynamics** \\\n * **Dynatrace** \\\n * **NewRelic** \\\n * **ElasticAPM** \\\n * **CACertificates**\n */\nexport type BindingType = string;\n\n/** Known values of {@link BuildpackBindingProvisioningState} that the service accepts. */\nexport enum KnownBuildpackBindingProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for BuildpackBindingProvisioningState. \\\n * {@link KnownBuildpackBindingProvisioningState} can be used interchangeably with BuildpackBindingProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type BuildpackBindingProvisioningState = string;\n\n/** Known values of {@link BuildResultProvisioningState} that the service accepts. */\nexport enum KnownBuildResultProvisioningState {\n  /** Queuing */\n  Queuing = \"Queuing\",\n  /** Building */\n  Building = \"Building\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for BuildResultProvisioningState. \\\n * {@link KnownBuildResultProvisioningState} can be used interchangeably with BuildResultProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Queuing** \\\n * **Building** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type BuildResultProvisioningState = string;\n\n/** Known values of {@link KPackBuildStageProvisioningState} that the service accepts. */\nexport enum KnownKPackBuildStageProvisioningState {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** Running */\n  Running = \"Running\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for KPackBuildStageProvisioningState. \\\n * {@link KnownKPackBuildStageProvisioningState} can be used interchangeably with KPackBuildStageProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **Running** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type KPackBuildStageProvisioningState = string;\n\n/** Known values of {@link BuilderProvisioningState} that the service accepts. */\nexport enum KnownBuilderProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for BuilderProvisioningState. \\\n * {@link KnownBuilderProvisioningState} can be used interchangeably with BuilderProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type BuilderProvisioningState = string;\n\n/** Known values of {@link MonitoringSettingState} that the service accepts. */\nexport enum KnownMonitoringSettingState {\n  /** NotAvailable */\n  NotAvailable = \"NotAvailable\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for MonitoringSettingState. \\\n * {@link KnownMonitoringSettingState} can be used interchangeably with MonitoringSettingState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotAvailable** \\\n * **Failed** \\\n * **Succeeded** \\\n * **Updating**\n */\nexport type MonitoringSettingState = string;\n\n/** Known values of {@link AppResourceProvisioningState} that the service accepts. */\nexport enum KnownAppResourceProvisioningState {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for AppResourceProvisioningState. \\\n * {@link KnownAppResourceProvisioningState} can be used interchangeably with AppResourceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed** \\\n * **Creating** \\\n * **Updating** \\\n * **Deleting**\n */\nexport type AppResourceProvisioningState = string;\n\n/** Known values of {@link Type} that the service accepts. */\nexport enum KnownType {\n  /** AzureFileVolume */\n  AzureFileVolume = \"AzureFileVolume\"\n}\n\n/**\n * Defines values for Type. \\\n * {@link KnownType} can be used interchangeably with Type,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureFileVolume**\n */\nexport type Type = string;\n\n/** Known values of {@link SessionAffinity} that the service accepts. */\nexport enum KnownSessionAffinity {\n  /** Cookie */\n  Cookie = \"Cookie\",\n  /** None */\n  None = \"None\"\n}\n\n/**\n * Defines values for SessionAffinity. \\\n * {@link KnownSessionAffinity} can be used interchangeably with SessionAffinity,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Cookie** \\\n * **None**\n */\nexport type SessionAffinity = string;\n\n/** Known values of {@link BackendProtocol} that the service accepts. */\nexport enum KnownBackendProtocol {\n  /** Grpc */\n  Grpc = \"GRPC\",\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for BackendProtocol. \\\n * {@link KnownBackendProtocol} can be used interchangeably with BackendProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GRPC** \\\n * **Default**\n */\nexport type BackendProtocol = string;\n\n/** Known values of {@link ManagedIdentityType} that the service accepts. */\nexport enum KnownManagedIdentityType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** SystemAssignedUserAssigned */\n  SystemAssignedUserAssigned = \"SystemAssigned,UserAssigned\"\n}\n\n/**\n * Defines values for ManagedIdentityType. \\\n * {@link KnownManagedIdentityType} can be used interchangeably with ManagedIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **SystemAssigned,UserAssigned**\n */\nexport type ManagedIdentityType = string;\n\n/** Known values of {@link StorageType} that the service accepts. */\nexport enum KnownStorageType {\n  /** StorageAccount */\n  StorageAccount = \"StorageAccount\"\n}\n\n/**\n * Defines values for StorageType. \\\n * {@link KnownStorageType} can be used interchangeably with StorageType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **StorageAccount**\n */\nexport type StorageType = string;\n\n/** Known values of {@link CertificateResourceProvisioningState} that the service accepts. */\nexport enum KnownCertificateResourceProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for CertificateResourceProvisioningState. \\\n * {@link KnownCertificateResourceProvisioningState} can be used interchangeably with CertificateResourceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type CertificateResourceProvisioningState = string;\n\n/** Known values of {@link CustomDomainResourceProvisioningState} that the service accepts. */\nexport enum KnownCustomDomainResourceProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for CustomDomainResourceProvisioningState. \\\n * {@link KnownCustomDomainResourceProvisioningState} can be used interchangeably with CustomDomainResourceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type CustomDomainResourceProvisioningState = string;\n\n/** Known values of {@link ProbeActionType} that the service accepts. */\nexport enum KnownProbeActionType {\n  /** HttpGetAction */\n  HttpGetAction = \"HTTPGetAction\",\n  /** TCPSocketAction */\n  TCPSocketAction = \"TCPSocketAction\",\n  /** ExecAction */\n  ExecAction = \"ExecAction\"\n}\n\n/**\n * Defines values for ProbeActionType. \\\n * {@link KnownProbeActionType} can be used interchangeably with ProbeActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HTTPGetAction** \\\n * **TCPSocketAction** \\\n * **ExecAction**\n */\nexport type ProbeActionType = string;\n\n/** Known values of {@link DeploymentResourceProvisioningState} that the service accepts. */\nexport enum KnownDeploymentResourceProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for DeploymentResourceProvisioningState. \\\n * {@link KnownDeploymentResourceProvisioningState} can be used interchangeably with DeploymentResourceProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type DeploymentResourceProvisioningState = string;\n\n/** Known values of {@link DeploymentResourceStatus} that the service accepts. */\nexport enum KnownDeploymentResourceStatus {\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Running */\n  Running = \"Running\"\n}\n\n/**\n * Defines values for DeploymentResourceStatus. \\\n * {@link KnownDeploymentResourceStatus} can be used interchangeably with DeploymentResourceStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Stopped** \\\n * **Running**\n */\nexport type DeploymentResourceStatus = string;\n\n/** Known values of {@link ActionType} that the service accepts. */\nexport enum KnownActionType {\n  /** Internal */\n  Internal = \"Internal\"\n}\n\n/**\n * Defines values for ActionType. \\\n * {@link KnownActionType} can be used interchangeably with ActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Internal**\n */\nexport type ActionType = string;\n\n/** Known values of {@link SupportedRuntimeValue} that the service accepts. */\nexport enum KnownSupportedRuntimeValue {\n  /** Java8 */\n  Java8 = \"Java_8\",\n  /** Java11 */\n  Java11 = \"Java_11\",\n  /** Java17 */\n  Java17 = \"Java_17\",\n  /** NetCore31 */\n  NetCore31 = \"NetCore_31\"\n}\n\n/**\n * Defines values for SupportedRuntimeValue. \\\n * {@link KnownSupportedRuntimeValue} can be used interchangeably with SupportedRuntimeValue,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Java_8** \\\n * **Java_11** \\\n * **Java_17** \\\n * **NetCore_31**\n */\nexport type SupportedRuntimeValue = string;\n\n/** Known values of {@link SupportedRuntimePlatform} that the service accepts. */\nexport enum KnownSupportedRuntimePlatform {\n  /** Java */\n  Java = \"Java\",\n  /** NETCore */\n  NETCore = \".NET Core\"\n}\n\n/**\n * Defines values for SupportedRuntimePlatform. \\\n * {@link KnownSupportedRuntimePlatform} can be used interchangeably with SupportedRuntimePlatform,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Java** \\\n * **.NET Core**\n */\nexport type SupportedRuntimePlatform = string;\n\n/** Known values of {@link SkuScaleType} that the service accepts. */\nexport enum KnownSkuScaleType {\n  /** None */\n  None = \"None\",\n  /** Manual */\n  Manual = \"Manual\",\n  /** Automatic */\n  Automatic = \"Automatic\"\n}\n\n/**\n * Defines values for SkuScaleType. \\\n * {@link KnownSkuScaleType} can be used interchangeably with SkuScaleType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Manual** \\\n * **Automatic**\n */\nexport type SkuScaleType = string;\n\n/** Known values of {@link ResourceSkuRestrictionsType} that the service accepts. */\nexport enum KnownResourceSkuRestrictionsType {\n  /** Location */\n  Location = \"Location\",\n  /** Zone */\n  Zone = \"Zone\"\n}\n\n/**\n * Defines values for ResourceSkuRestrictionsType. \\\n * {@link KnownResourceSkuRestrictionsType} can be used interchangeably with ResourceSkuRestrictionsType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Location** \\\n * **Zone**\n */\nexport type ResourceSkuRestrictionsType = string;\n\n/** Known values of {@link ResourceSkuRestrictionsReasonCode} that the service accepts. */\nexport enum KnownResourceSkuRestrictionsReasonCode {\n  /** QuotaId */\n  QuotaId = \"QuotaId\",\n  /** NotAvailableForSubscription */\n  NotAvailableForSubscription = \"NotAvailableForSubscription\"\n}\n\n/**\n * Defines values for ResourceSkuRestrictionsReasonCode. \\\n * {@link KnownResourceSkuRestrictionsReasonCode} can be used interchangeably with ResourceSkuRestrictionsReasonCode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **QuotaId** \\\n * **NotAvailableForSubscription**\n */\nexport type ResourceSkuRestrictionsReasonCode = string;\n\n/** Known values of {@link GatewayProvisioningState} that the service accepts. */\nexport enum KnownGatewayProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for GatewayProvisioningState. \\\n * {@link KnownGatewayProvisioningState} can be used interchangeably with GatewayProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type GatewayProvisioningState = string;\n\n/** Known values of {@link GatewayCertificateVerification} that the service accepts. */\nexport enum KnownGatewayCertificateVerification {\n  /** Enable certificate verification in Spring Cloud Gateway. */\n  Enabled = \"Enabled\",\n  /** Disable certificate verification in Spring Cloud Gateway. */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for GatewayCertificateVerification. \\\n * {@link KnownGatewayCertificateVerification} can be used interchangeably with GatewayCertificateVerification,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled**: Enable certificate verification in Spring Cloud Gateway. \\\n * **Disabled**: Disable certificate verification in Spring Cloud Gateway.\n */\nexport type GatewayCertificateVerification = string;\n\n/** Known values of {@link ApmType} that the service accepts. */\nexport enum KnownApmType {\n  /** ApplicationInsights */\n  ApplicationInsights = \"ApplicationInsights\",\n  /** AppDynamics */\n  AppDynamics = \"AppDynamics\",\n  /** Dynatrace */\n  Dynatrace = \"Dynatrace\",\n  /** NewRelic */\n  NewRelic = \"NewRelic\",\n  /** ElasticAPM */\n  ElasticAPM = \"ElasticAPM\"\n}\n\n/**\n * Defines values for ApmType. \\\n * {@link KnownApmType} can be used interchangeably with ApmType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ApplicationInsights** \\\n * **AppDynamics** \\\n * **Dynatrace** \\\n * **NewRelic** \\\n * **ElasticAPM**\n */\nexport type ApmType = string;\n\n/** Known values of {@link GatewayRouteConfigProtocol} that the service accepts. */\nexport enum KnownGatewayRouteConfigProtocol {\n  /** Http */\n  Http = \"HTTP\",\n  /** Https */\n  Https = \"HTTPS\"\n}\n\n/**\n * Defines values for GatewayRouteConfigProtocol. \\\n * {@link KnownGatewayRouteConfigProtocol} can be used interchangeably with GatewayRouteConfigProtocol,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HTTP** \\\n * **HTTPS**\n */\nexport type GatewayRouteConfigProtocol = string;\n\n/** Known values of {@link ApiPortalProvisioningState} that the service accepts. */\nexport enum KnownApiPortalProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for ApiPortalProvisioningState. \\\n * {@link KnownApiPortalProvisioningState} can be used interchangeably with ApiPortalProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type ApiPortalProvisioningState = string;\n\n/** Known values of {@link ApplicationAcceleratorProvisioningState} that the service accepts. */\nexport enum KnownApplicationAcceleratorProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for ApplicationAcceleratorProvisioningState. \\\n * {@link KnownApplicationAcceleratorProvisioningState} can be used interchangeably with ApplicationAcceleratorProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type ApplicationAcceleratorProvisioningState = string;\n\n/** Known values of {@link CustomizedAcceleratorProvisioningState} that the service accepts. */\nexport enum KnownCustomizedAcceleratorProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\"\n}\n\n/**\n * Defines values for CustomizedAcceleratorProvisioningState. \\\n * {@link KnownCustomizedAcceleratorProvisioningState} can be used interchangeably with CustomizedAcceleratorProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Deleting**\n */\nexport type CustomizedAcceleratorProvisioningState = string;\n\n/** Known values of {@link CustomizedAcceleratorValidateResultState} that the service accepts. */\nexport enum KnownCustomizedAcceleratorValidateResultState {\n  /** Customized accelerator properties are valid. */\n  Valid = \"Valid\",\n  /** Customized accelerator properties are invalid. */\n  Invalid = \"Invalid\"\n}\n\n/**\n * Defines values for CustomizedAcceleratorValidateResultState. \\\n * {@link KnownCustomizedAcceleratorValidateResultState} can be used interchangeably with CustomizedAcceleratorValidateResultState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Valid**: Customized accelerator properties are valid. \\\n * **Invalid**: Customized accelerator properties are invalid.\n */\nexport type CustomizedAcceleratorValidateResultState = string;\n\n/** Known values of {@link PredefinedAcceleratorProvisioningState} that the service accepts. */\nexport enum KnownPredefinedAcceleratorProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for PredefinedAcceleratorProvisioningState. \\\n * {@link KnownPredefinedAcceleratorProvisioningState} can be used interchangeably with PredefinedAcceleratorProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Updating** \\\n * **Succeeded** \\\n * **Failed**\n */\nexport type PredefinedAcceleratorProvisioningState = string;\n\n/** Known values of {@link PredefinedAcceleratorState} that the service accepts. */\nexport enum KnownPredefinedAcceleratorState {\n  /** Enable the predefined accelerator. */\n  Enabled = \"Enabled\",\n  /** Disable the predefined accelerator. */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for PredefinedAcceleratorState. \\\n * {@link KnownPredefinedAcceleratorState} can be used interchangeably with PredefinedAcceleratorState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled**: Enable the predefined accelerator. \\\n * **Disabled**: Disable the predefined accelerator.\n */\nexport type PredefinedAcceleratorState = string;\n\n/** Known values of {@link HttpSchemeType} that the service accepts. */\nexport enum KnownHttpSchemeType {\n  /** Http */\n  Http = \"HTTP\",\n  /** Https */\n  Https = \"HTTPS\"\n}\n\n/**\n * Defines values for HttpSchemeType. \\\n * {@link KnownHttpSchemeType} can be used interchangeably with HttpSchemeType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HTTP** \\\n * **HTTPS**\n */\nexport type HttpSchemeType = string;\n\n/** Optional parameters. */\nexport interface ServicesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServicesGetResponse = ServiceResource;\n\n/** Optional parameters. */\nexport interface ServicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServicesCreateOrUpdateResponse = ServiceResource;\n\n/** Optional parameters. */\nexport interface ServicesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServicesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ServicesUpdateResponse = ServiceResource;\n\n/** Optional parameters. */\nexport interface ServicesListTestKeysOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listTestKeys operation. */\nexport type ServicesListTestKeysResponse = TestKeys;\n\n/** Optional parameters. */\nexport interface ServicesRegenerateTestKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the regenerateTestKey operation. */\nexport type ServicesRegenerateTestKeyResponse = TestKeys;\n\n/** Optional parameters. */\nexport interface ServicesDisableTestEndpointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ServicesEnableTestEndpointOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the enableTestEndpoint operation. */\nexport type ServicesEnableTestEndpointResponse = TestKeys;\n\n/** Optional parameters. */\nexport interface ServicesStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServicesStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServicesCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type ServicesCheckNameAvailabilityResponse = NameAvailability;\n\n/** Optional parameters. */\nexport interface ServicesListBySubscriptionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscription operation. */\nexport type ServicesListBySubscriptionResponse = ServiceResourceList;\n\n/** Optional parameters. */\nexport interface ServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ServicesListResponse = ServiceResourceList;\n\n/** Optional parameters. */\nexport interface ServicesListBySubscriptionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySubscriptionNext operation. */\nexport type ServicesListBySubscriptionNextResponse = ServiceResourceList;\n\n/** Optional parameters. */\nexport interface ServicesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ServicesListNextResponse = ServiceResourceList;\n\n/** Optional parameters. */\nexport interface ConfigServersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigServersGetResponse = ConfigServerResource;\n\n/** Optional parameters. */\nexport interface ConfigServersUpdatePutOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updatePut operation. */\nexport type ConfigServersUpdatePutResponse = ConfigServerResource;\n\n/** Optional parameters. */\nexport interface ConfigServersUpdatePatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updatePatch operation. */\nexport type ConfigServersUpdatePatchResponse = ConfigServerResource;\n\n/** Optional parameters. */\nexport interface ConfigServersValidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validate operation. */\nexport type ConfigServersValidateResponse = ConfigServerSettingsValidateResult;\n\n/** Optional parameters. */\nexport interface ConfigurationServicesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ConfigurationServicesGetResponse = ConfigurationServiceResource;\n\n/** Optional parameters. */\nexport interface ConfigurationServicesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ConfigurationServicesCreateOrUpdateResponse = ConfigurationServiceResource;\n\n/** Optional parameters. */\nexport interface ConfigurationServicesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ConfigurationServicesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ConfigurationServicesListResponse = ConfigurationServiceResourceCollection;\n\n/** Optional parameters. */\nexport interface ConfigurationServicesValidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the validate operation. */\nexport type ConfigurationServicesValidateResponse = ConfigurationServiceSettingsValidateResult;\n\n/** Optional parameters. */\nexport interface ConfigurationServicesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ConfigurationServicesListNextResponse = ConfigurationServiceResourceCollection;\n\n/** Optional parameters. */\nexport interface ServiceRegistriesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServiceRegistriesGetResponse = ServiceRegistryResource;\n\n/** Optional parameters. */\nexport interface ServiceRegistriesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServiceRegistriesCreateOrUpdateResponse = ServiceRegistryResource;\n\n/** Optional parameters. */\nexport interface ServiceRegistriesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServiceRegistriesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ServiceRegistriesListResponse = ServiceRegistryResourceCollection;\n\n/** Optional parameters. */\nexport interface ServiceRegistriesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ServiceRegistriesListNextResponse = ServiceRegistryResourceCollection;\n\n/** Optional parameters. */\nexport interface ApplicationLiveViewsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApplicationLiveViewsListResponse = ApplicationLiveViewResourceCollection;\n\n/** Optional parameters. */\nexport interface ApplicationLiveViewsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationLiveViewsGetResponse = ApplicationLiveViewResource;\n\n/** Optional parameters. */\nexport interface ApplicationLiveViewsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ApplicationLiveViewsCreateOrUpdateResponse = ApplicationLiveViewResource;\n\n/** Optional parameters. */\nexport interface ApplicationLiveViewsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationLiveViewsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApplicationLiveViewsListNextResponse = ApplicationLiveViewResourceCollection;\n\n/** Optional parameters. */\nexport interface DevToolPortalsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DevToolPortalsListResponse = DevToolPortalResourceCollection;\n\n/** Optional parameters. */\nexport interface DevToolPortalsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DevToolPortalsGetResponse = DevToolPortalResource;\n\n/** Optional parameters. */\nexport interface DevToolPortalsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DevToolPortalsCreateOrUpdateResponse = DevToolPortalResource;\n\n/** Optional parameters. */\nexport interface DevToolPortalsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DevToolPortalsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DevToolPortalsListNextResponse = DevToolPortalResourceCollection;\n\n/** Optional parameters. */\nexport interface ContainerRegistriesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ContainerRegistriesListResponse = ContainerRegistryResourceCollection;\n\n/** Optional parameters. */\nexport interface ContainerRegistriesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ContainerRegistriesGetResponse = ContainerRegistryResource;\n\n/** Optional parameters. */\nexport interface ContainerRegistriesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ContainerRegistriesCreateOrUpdateResponse = ContainerRegistryResource;\n\n/** Optional parameters. */\nexport interface ContainerRegistriesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ContainerRegistriesListNextResponse = ContainerRegistryResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceListBuildServicesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBuildServices operation. */\nexport type BuildServiceListBuildServicesResponse = BuildServiceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceGetBuildServiceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getBuildService operation. */\nexport type BuildServiceGetBuildServiceResponse = BuildService;\n\n/** Optional parameters. */\nexport interface BuildServiceCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BuildServiceCreateOrUpdateResponse = BuildService;\n\n/** Optional parameters. */\nexport interface BuildServiceListBuildsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBuilds operation. */\nexport type BuildServiceListBuildsResponse = BuildCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceGetBuildOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getBuild operation. */\nexport type BuildServiceGetBuildResponse = Build;\n\n/** Optional parameters. */\nexport interface BuildServiceCreateOrUpdateBuildOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdateBuild operation. */\nexport type BuildServiceCreateOrUpdateBuildResponse = Build;\n\n/** Optional parameters. */\nexport interface BuildServiceDeleteBuildOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BuildServiceListBuildResultsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBuildResults operation. */\nexport type BuildServiceListBuildResultsResponse = BuildResultCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceGetBuildResultOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getBuildResult operation. */\nexport type BuildServiceGetBuildResultResponse = BuildResult;\n\n/** Optional parameters. */\nexport interface BuildServiceGetBuildResultLogOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getBuildResultLog operation. */\nexport type BuildServiceGetBuildResultLogResponse = BuildResultLog;\n\n/** Optional parameters. */\nexport interface BuildServiceGetResourceUploadUrlOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getResourceUploadUrl operation. */\nexport type BuildServiceGetResourceUploadUrlResponse = ResourceUploadDefinition;\n\n/** Optional parameters. */\nexport interface BuildServiceListSupportedBuildpacksOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSupportedBuildpacks operation. */\nexport type BuildServiceListSupportedBuildpacksResponse = SupportedBuildpacksCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceGetSupportedBuildpackOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSupportedBuildpack operation. */\nexport type BuildServiceGetSupportedBuildpackResponse = SupportedBuildpackResource;\n\n/** Optional parameters. */\nexport interface BuildServiceListSupportedStacksOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSupportedStacks operation. */\nexport type BuildServiceListSupportedStacksResponse = SupportedStacksCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceGetSupportedStackOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getSupportedStack operation. */\nexport type BuildServiceGetSupportedStackResponse = SupportedStackResource;\n\n/** Optional parameters. */\nexport interface BuildServiceListBuildServicesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBuildServicesNext operation. */\nexport type BuildServiceListBuildServicesNextResponse = BuildServiceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceListBuildsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBuildsNext operation. */\nexport type BuildServiceListBuildsNextResponse = BuildCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceListBuildResultsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBuildResultsNext operation. */\nexport type BuildServiceListBuildResultsNextResponse = BuildResultCollection;\n\n/** Optional parameters. */\nexport interface BuildpackBindingListForClusterOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForCluster operation. */\nexport type BuildpackBindingListForClusterResponse = BuildpackBindingResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildpackBindingGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BuildpackBindingGetResponse = BuildpackBindingResource;\n\n/** Optional parameters. */\nexport interface BuildpackBindingCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BuildpackBindingCreateOrUpdateResponse = BuildpackBindingResource;\n\n/** Optional parameters. */\nexport interface BuildpackBindingDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BuildpackBindingListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BuildpackBindingListResponse = BuildpackBindingResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildpackBindingListForClusterNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForClusterNext operation. */\nexport type BuildpackBindingListForClusterNextResponse = BuildpackBindingResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildpackBindingListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BuildpackBindingListNextResponse = BuildpackBindingResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceBuilderGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BuildServiceBuilderGetResponse = BuilderResource;\n\n/** Optional parameters. */\nexport interface BuildServiceBuilderCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BuildServiceBuilderCreateOrUpdateResponse = BuilderResource;\n\n/** Optional parameters. */\nexport interface BuildServiceBuilderDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BuildServiceBuilderListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BuildServiceBuilderListResponse = BuilderResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceBuilderListDeploymentsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listDeployments operation. */\nexport type BuildServiceBuilderListDeploymentsResponse = DeploymentList;\n\n/** Optional parameters. */\nexport interface BuildServiceBuilderListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BuildServiceBuilderListNextResponse = BuilderResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceAgentPoolListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BuildServiceAgentPoolListResponse = BuildServiceAgentPoolResourceCollection;\n\n/** Optional parameters. */\nexport interface BuildServiceAgentPoolGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BuildServiceAgentPoolGetResponse = BuildServiceAgentPoolResource;\n\n/** Optional parameters. */\nexport interface BuildServiceAgentPoolUpdatePutOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updatePut operation. */\nexport type BuildServiceAgentPoolUpdatePutResponse = BuildServiceAgentPoolResource;\n\n/** Optional parameters. */\nexport interface BuildServiceAgentPoolListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BuildServiceAgentPoolListNextResponse = BuildServiceAgentPoolResourceCollection;\n\n/** Optional parameters. */\nexport interface MonitoringSettingsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type MonitoringSettingsGetResponse = MonitoringSettingResource;\n\n/** Optional parameters. */\nexport interface MonitoringSettingsUpdatePutOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updatePut operation. */\nexport type MonitoringSettingsUpdatePutResponse = MonitoringSettingResource;\n\n/** Optional parameters. */\nexport interface MonitoringSettingsUpdatePatchOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updatePatch operation. */\nexport type MonitoringSettingsUpdatePatchResponse = MonitoringSettingResource;\n\n/** Optional parameters. */\nexport interface AppsGetOptionalParams extends coreClient.OperationOptions {\n  /** Indicates whether sync status */\n  syncStatus?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type AppsGetResponse = AppResource;\n\n/** Optional parameters. */\nexport interface AppsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type AppsCreateOrUpdateResponse = AppResource;\n\n/** Optional parameters. */\nexport interface AppsDeleteOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface AppsUpdateOptionalParams extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type AppsUpdateResponse = AppResource;\n\n/** Optional parameters. */\nexport interface AppsListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type AppsListResponse = AppResourceCollection;\n\n/** Optional parameters. */\nexport interface AppsGetResourceUploadUrlOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getResourceUploadUrl operation. */\nexport type AppsGetResourceUploadUrlResponse = ResourceUploadDefinition;\n\n/** Optional parameters. */\nexport interface AppsSetActiveDeploymentsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the setActiveDeployments operation. */\nexport type AppsSetActiveDeploymentsResponse = AppResource;\n\n/** Optional parameters. */\nexport interface AppsValidateDomainOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validateDomain operation. */\nexport type AppsValidateDomainResponse = CustomDomainValidateResult;\n\n/** Optional parameters. */\nexport interface AppsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type AppsListNextResponse = AppResourceCollection;\n\n/** Optional parameters. */\nexport interface BindingsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BindingsGetResponse = BindingResource;\n\n/** Optional parameters. */\nexport interface BindingsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BindingsCreateOrUpdateResponse = BindingResource;\n\n/** Optional parameters. */\nexport interface BindingsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface BindingsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type BindingsUpdateResponse = BindingResource;\n\n/** Optional parameters. */\nexport interface BindingsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type BindingsListResponse = BindingResourceCollection;\n\n/** Optional parameters. */\nexport interface BindingsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type BindingsListNextResponse = BindingResourceCollection;\n\n/** Optional parameters. */\nexport interface StoragesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type StoragesGetResponse = StorageResource;\n\n/** Optional parameters. */\nexport interface StoragesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type StoragesCreateOrUpdateResponse = StorageResource;\n\n/** Optional parameters. */\nexport interface StoragesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface StoragesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type StoragesListResponse = StorageResourceCollection;\n\n/** Optional parameters. */\nexport interface StoragesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type StoragesListNextResponse = StorageResourceCollection;\n\n/** Optional parameters. */\nexport interface CertificatesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CertificatesGetResponse = CertificateResource;\n\n/** Optional parameters. */\nexport interface CertificatesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CertificatesCreateOrUpdateResponse = CertificateResource;\n\n/** Optional parameters. */\nexport interface CertificatesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CertificatesListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CertificatesListResponse = CertificateResourceCollection;\n\n/** Optional parameters. */\nexport interface CertificatesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CertificatesListNextResponse = CertificateResourceCollection;\n\n/** Optional parameters. */\nexport interface CustomDomainsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CustomDomainsGetResponse = CustomDomainResource;\n\n/** Optional parameters. */\nexport interface CustomDomainsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CustomDomainsCreateOrUpdateResponse = CustomDomainResource;\n\n/** Optional parameters. */\nexport interface CustomDomainsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CustomDomainsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type CustomDomainsUpdateResponse = CustomDomainResource;\n\n/** Optional parameters. */\nexport interface CustomDomainsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CustomDomainsListResponse = CustomDomainResourceCollection;\n\n/** Optional parameters. */\nexport interface CustomDomainsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CustomDomainsListNextResponse = CustomDomainResourceCollection;\n\n/** Optional parameters. */\nexport interface DeploymentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeploymentsGetResponse = DeploymentResource;\n\n/** Optional parameters. */\nexport interface DeploymentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DeploymentsCreateOrUpdateResponse = DeploymentResource;\n\n/** Optional parameters. */\nexport interface DeploymentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type DeploymentsUpdateResponse = DeploymentResource;\n\n/** Optional parameters. */\nexport interface DeploymentsListOptionalParams\n  extends coreClient.OperationOptions {\n  /** Version of the deployments to be listed */\n  version?: string[];\n}\n\n/** Contains response data for the list operation. */\nexport type DeploymentsListResponse = DeploymentResourceCollection;\n\n/** Optional parameters. */\nexport interface DeploymentsListForClusterOptionalParams\n  extends coreClient.OperationOptions {\n  /** Version of the deployments to be listed */\n  version?: string[];\n}\n\n/** Contains response data for the listForCluster operation. */\nexport type DeploymentsListForClusterResponse = DeploymentResourceCollection;\n\n/** Optional parameters. */\nexport interface DeploymentsStartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsStopOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsEnableRemoteDebuggingOptionalParams\n  extends coreClient.OperationOptions {\n  /** Parameters for enable remote debugging */\n  remoteDebuggingPayload?: RemoteDebuggingPayload;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the enableRemoteDebugging operation. */\nexport type DeploymentsEnableRemoteDebuggingResponse = RemoteDebugging;\n\n/** Optional parameters. */\nexport interface DeploymentsDisableRemoteDebuggingOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the disableRemoteDebugging operation. */\nexport type DeploymentsDisableRemoteDebuggingResponse = RemoteDebugging;\n\n/** Optional parameters. */\nexport interface DeploymentsGetRemoteDebuggingConfigOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getRemoteDebuggingConfig operation. */\nexport type DeploymentsGetRemoteDebuggingConfigResponse = RemoteDebugging;\n\n/** Optional parameters. */\nexport interface DeploymentsGetLogFileUrlOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getLogFileUrl operation. */\nexport type DeploymentsGetLogFileUrlResponse = LogFileUrlResponse;\n\n/** Optional parameters. */\nexport interface DeploymentsGenerateHeapDumpOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsGenerateThreadDumpOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsStartJFROptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DeploymentsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeploymentsListNextResponse = DeploymentResourceCollection;\n\n/** Optional parameters. */\nexport interface DeploymentsListForClusterNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listForClusterNext operation. */\nexport type DeploymentsListForClusterNextResponse = DeploymentResourceCollection;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = AvailableOperations;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = AvailableOperations;\n\n/** Optional parameters. */\nexport interface RuntimeVersionsListRuntimeVersionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRuntimeVersions operation. */\nexport type RuntimeVersionsListRuntimeVersionsResponse = AvailableRuntimeVersions;\n\n/** Optional parameters. */\nexport interface SkusListOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type SkusListResponse = ResourceSkuCollection;\n\n/** Optional parameters. */\nexport interface SkusListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type SkusListNextResponse = ResourceSkuCollection;\n\n/** Optional parameters. */\nexport interface GatewaysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GatewaysGetResponse = GatewayResource;\n\n/** Optional parameters. */\nexport interface GatewaysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GatewaysCreateOrUpdateResponse = GatewayResource;\n\n/** Optional parameters. */\nexport interface GatewaysUpdateCapacityOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateCapacity operation. */\nexport type GatewaysUpdateCapacityResponse = GatewayResource;\n\n/** Optional parameters. */\nexport interface GatewaysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GatewaysListEnvSecretsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listEnvSecrets operation. */\nexport type GatewaysListEnvSecretsResponse = { [propertyName: string]: string };\n\n/** Optional parameters. */\nexport interface GatewaysRestartOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GatewaysListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type GatewaysListResponse = GatewayResourceCollection;\n\n/** Optional parameters. */\nexport interface GatewaysValidateDomainOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validateDomain operation. */\nexport type GatewaysValidateDomainResponse = CustomDomainValidateResult;\n\n/** Optional parameters. */\nexport interface GatewaysListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type GatewaysListNextResponse = GatewayResourceCollection;\n\n/** Optional parameters. */\nexport interface GatewayRouteConfigsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GatewayRouteConfigsGetResponse = GatewayRouteConfigResource;\n\n/** Optional parameters. */\nexport interface GatewayRouteConfigsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GatewayRouteConfigsCreateOrUpdateResponse = GatewayRouteConfigResource;\n\n/** Optional parameters. */\nexport interface GatewayRouteConfigsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GatewayRouteConfigsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type GatewayRouteConfigsListResponse = GatewayRouteConfigResourceCollection;\n\n/** Optional parameters. */\nexport interface GatewayRouteConfigsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type GatewayRouteConfigsListNextResponse = GatewayRouteConfigResourceCollection;\n\n/** Optional parameters. */\nexport interface GatewayCustomDomainsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GatewayCustomDomainsGetResponse = GatewayCustomDomainResource;\n\n/** Optional parameters. */\nexport interface GatewayCustomDomainsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GatewayCustomDomainsCreateOrUpdateResponse = GatewayCustomDomainResource;\n\n/** Optional parameters. */\nexport interface GatewayCustomDomainsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface GatewayCustomDomainsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type GatewayCustomDomainsListResponse = GatewayCustomDomainResourceCollection;\n\n/** Optional parameters. */\nexport interface GatewayCustomDomainsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type GatewayCustomDomainsListNextResponse = GatewayCustomDomainResourceCollection;\n\n/** Optional parameters. */\nexport interface ApiPortalsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApiPortalsGetResponse = ApiPortalResource;\n\n/** Optional parameters. */\nexport interface ApiPortalsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ApiPortalsCreateOrUpdateResponse = ApiPortalResource;\n\n/** Optional parameters. */\nexport interface ApiPortalsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApiPortalsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApiPortalsListResponse = ApiPortalResourceCollection;\n\n/** Optional parameters. */\nexport interface ApiPortalsValidateDomainOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validateDomain operation. */\nexport type ApiPortalsValidateDomainResponse = CustomDomainValidateResult;\n\n/** Optional parameters. */\nexport interface ApiPortalsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApiPortalsListNextResponse = ApiPortalResourceCollection;\n\n/** Optional parameters. */\nexport interface ApiPortalCustomDomainsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApiPortalCustomDomainsGetResponse = ApiPortalCustomDomainResource;\n\n/** Optional parameters. */\nexport interface ApiPortalCustomDomainsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ApiPortalCustomDomainsCreateOrUpdateResponse = ApiPortalCustomDomainResource;\n\n/** Optional parameters. */\nexport interface ApiPortalCustomDomainsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApiPortalCustomDomainsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApiPortalCustomDomainsListResponse = ApiPortalCustomDomainResourceCollection;\n\n/** Optional parameters. */\nexport interface ApiPortalCustomDomainsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApiPortalCustomDomainsListNextResponse = ApiPortalCustomDomainResourceCollection;\n\n/** Optional parameters. */\nexport interface ApplicationAcceleratorsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type ApplicationAcceleratorsListResponse = ApplicationAcceleratorResourceCollection;\n\n/** Optional parameters. */\nexport interface ApplicationAcceleratorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ApplicationAcceleratorsGetResponse = ApplicationAcceleratorResource;\n\n/** Optional parameters. */\nexport interface ApplicationAcceleratorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ApplicationAcceleratorsCreateOrUpdateResponse = ApplicationAcceleratorResource;\n\n/** Optional parameters. */\nexport interface ApplicationAcceleratorsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ApplicationAcceleratorsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ApplicationAcceleratorsListNextResponse = ApplicationAcceleratorResourceCollection;\n\n/** Optional parameters. */\nexport interface CustomizedAcceleratorsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type CustomizedAcceleratorsListResponse = CustomizedAcceleratorResourceCollection;\n\n/** Optional parameters. */\nexport interface CustomizedAcceleratorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type CustomizedAcceleratorsGetResponse = CustomizedAcceleratorResource;\n\n/** Optional parameters. */\nexport interface CustomizedAcceleratorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type CustomizedAcceleratorsCreateOrUpdateResponse = CustomizedAcceleratorResource;\n\n/** Optional parameters. */\nexport interface CustomizedAcceleratorsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface CustomizedAcceleratorsValidateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the validate operation. */\nexport type CustomizedAcceleratorsValidateResponse = CustomizedAcceleratorValidateResult;\n\n/** Optional parameters. */\nexport interface CustomizedAcceleratorsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type CustomizedAcceleratorsListNextResponse = CustomizedAcceleratorResourceCollection;\n\n/** Optional parameters. */\nexport interface PredefinedAcceleratorsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type PredefinedAcceleratorsListResponse = PredefinedAcceleratorResourceCollection;\n\n/** Optional parameters. */\nexport interface PredefinedAcceleratorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PredefinedAcceleratorsGetResponse = PredefinedAcceleratorResource;\n\n/** Optional parameters. */\nexport interface PredefinedAcceleratorsDisableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PredefinedAcceleratorsEnableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PredefinedAcceleratorsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type PredefinedAcceleratorsListNextResponse = PredefinedAcceleratorResourceCollection;\n\n/** Optional parameters. */\nexport interface AppPlatformManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Api Version */\n  apiVersion?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const ClusterResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ClusterResourceProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkProfile: {\n        serializedName: \"networkProfile\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkProfile\"\n        }\n      },\n      vnetAddons: {\n        serializedName: \"vnetAddons\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceVNetAddons\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serviceId: {\n        serializedName: \"serviceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedEnvironmentId: {\n        serializedName: \"managedEnvironmentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      infraResourceGroup: {\n        serializedName: \"infraResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      powerState: {\n        serializedName: \"powerState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneRedundant: {\n        defaultValue: false,\n        serializedName: \"zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fqdn: {\n        serializedName: \"fqdn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      marketplaceResource: {\n        serializedName: \"marketplaceResource\",\n        type: {\n          name: \"Composite\",\n          className: \"MarketplaceResource\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkProfile: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkProfile\",\n    modelProperties: {\n      serviceRuntimeSubnetId: {\n        serializedName: \"serviceRuntimeSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appSubnetId: {\n        serializedName: \"appSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceCidr: {\n        serializedName: \"serviceCidr\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceRuntimeNetworkResourceGroup: {\n        serializedName: \"serviceRuntimeNetworkResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appNetworkResourceGroup: {\n        serializedName: \"appNetworkResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outboundIPs: {\n        serializedName: \"outboundIPs\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkProfileOutboundIPs\"\n        }\n      },\n      requiredTraffics: {\n        serializedName: \"requiredTraffics\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RequiredTraffic\"\n            }\n          }\n        }\n      },\n      ingressConfig: {\n        serializedName: \"ingressConfig\",\n        type: {\n          name: \"Composite\",\n          className: \"IngressConfig\"\n        }\n      },\n      outboundType: {\n        serializedName: \"outboundType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkProfileOutboundIPs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkProfileOutboundIPs\",\n    modelProperties: {\n      publicIPs: {\n        serializedName: \"publicIPs\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RequiredTraffic: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RequiredTraffic\",\n    modelProperties: {\n      protocol: {\n        serializedName: \"protocol\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      ips: {\n        serializedName: \"ips\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      fqdns: {\n        serializedName: \"fqdns\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      direction: {\n        serializedName: \"direction\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IngressConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IngressConfig\",\n    modelProperties: {\n      readTimeoutInSeconds: {\n        serializedName: \"readTimeoutInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceVNetAddons: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceVNetAddons\",\n    modelProperties: {\n      logStreamPublicEndpoint: {\n        defaultValue: false,\n        serializedName: \"logStreamPublicEndpoint\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      dataPlanePublicEndpoint: {\n        defaultValue: false,\n        serializedName: \"dataPlanePublicEndpoint\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MarketplaceResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MarketplaceResource\",\n    modelProperties: {\n      plan: {\n        serializedName: \"plan\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisher: {\n        serializedName: \"publisher\",\n        type: {\n          name: \"String\"\n        }\n      },\n      product: {\n        serializedName: \"product\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        defaultValue: \"S0\",\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        defaultValue: \"Standard\",\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudError\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"CloudErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const CloudErrorBody: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CloudErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CloudErrorBody\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TestKeys: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TestKeys\",\n    modelProperties: {\n      primaryKey: {\n        serializedName: \"primaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryKey: {\n        serializedName: \"secondaryKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryTestEndpoint: {\n        serializedName: \"primaryTestEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      secondaryTestEndpoint: {\n        serializedName: \"secondaryTestEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegenerateTestKeyRequestPayload: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegenerateTestKeyRequestPayload\",\n    modelProperties: {\n      keyType: {\n        serializedName: \"keyType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigServerProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigServerProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      },\n      configServer: {\n        serializedName: \"configServer\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigServerSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigServerSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigServerSettings\",\n    modelProperties: {\n      gitProperty: {\n        serializedName: \"gitProperty\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigServerGitProperty\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigServerGitProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigServerGitProperty\",\n    modelProperties: {\n      repositories: {\n        serializedName: \"repositories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GitPatternRepository\"\n            }\n          }\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchPaths: {\n        serializedName: \"searchPaths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKey: {\n        serializedName: \"hostKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKeyAlgorithm: {\n        serializedName: \"hostKeyAlgorithm\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKey: {\n        serializedName: \"privateKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      strictHostKeyChecking: {\n        serializedName: \"strictHostKeyChecking\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const GitPatternRepository: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GitPatternRepository\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pattern: {\n        serializedName: \"pattern\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchPaths: {\n        serializedName: \"searchPaths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKey: {\n        serializedName: \"hostKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKeyAlgorithm: {\n        serializedName: \"hostKeyAlgorithm\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKey: {\n        serializedName: \"privateKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      strictHostKeyChecking: {\n        serializedName: \"strictHostKeyChecking\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigServerSettingsValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigServerSettingsValidateResult\",\n    modelProperties: {\n      isValid: {\n        serializedName: \"isValid\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigServerSettingsErrorRecord\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigServerSettingsErrorRecord: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigServerSettingsErrorRecord\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      messages: {\n        serializedName: \"messages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationServiceResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationServiceInstance\"\n            }\n          }\n        }\n      },\n      settings: {\n        serializedName: \"settings\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationServiceSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceCount: {\n        serializedName: \"instanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceSettings\",\n    modelProperties: {\n      gitProperty: {\n        serializedName: \"gitProperty\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationServiceGitProperty\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceGitProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceGitProperty\",\n    modelProperties: {\n      repositories: {\n        serializedName: \"repositories\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationServiceGitRepository\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceGitRepository: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceGitRepository\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      patterns: {\n        serializedName: \"patterns\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"label\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      searchPaths: {\n        serializedName: \"searchPaths\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKey: {\n        serializedName: \"hostKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKeyAlgorithm: {\n        serializedName: \"hostKeyAlgorithm\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKey: {\n        serializedName: \"privateKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      strictHostKeyChecking: {\n        serializedName: \"strictHostKeyChecking\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ConfigurationServiceResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceSettingsValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceSettingsValidateResult\",\n    modelProperties: {\n      gitPropertyValidationResult: {\n        serializedName: \"gitPropertyValidationResult\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationServiceGitPropertyValidateResult\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceGitPropertyValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceGitPropertyValidateResult\",\n    modelProperties: {\n      isValid: {\n        serializedName: \"isValid\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      gitReposValidationResult: {\n        serializedName: \"gitReposValidationResult\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ValidationMessages\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ValidationMessages: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidationMessages\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      messages: {\n        serializedName: \"messages\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceRegistryProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceRegistryProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceRegistryResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceRegistryInstance\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceRegistryResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceRegistryResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceCount: {\n        serializedName: \"instanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceRegistryInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceRegistryInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceRegistryResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceRegistryResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceRegistryResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationLiveViewResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationLiveViewResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationLiveViewResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationLiveViewProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationLiveViewProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      components: {\n        serializedName: \"components\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationLiveViewComponent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationLiveViewComponent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationLiveViewComponent\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"any\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationLiveViewResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationLiveViewInstance\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationLiveViewResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationLiveViewResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceCount: {\n        serializedName: \"instanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationLiveViewInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationLiveViewInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DevToolPortalResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"DevToolPortalResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DevToolPortalInstance\"\n            }\n          }\n        }\n      },\n      public: {\n        defaultValue: false,\n        serializedName: \"public\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ssoProperties: {\n        serializedName: \"ssoProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"DevToolPortalSsoProperties\"\n        }\n      },\n      features: {\n        serializedName: \"features\",\n        type: {\n          name: \"Composite\",\n          className: \"DevToolPortalFeatureSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceCount: {\n        serializedName: \"instanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalSsoProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalSsoProperties\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        serializedName: \"clientSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadataUrl: {\n        serializedName: \"metadataUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalFeatureSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalFeatureSettings\",\n    modelProperties: {\n      applicationAccelerator: {\n        serializedName: \"applicationAccelerator\",\n        type: {\n          name: \"Composite\",\n          className: \"DevToolPortalFeatureDetail\"\n        }\n      },\n      applicationLiveView: {\n        serializedName: \"applicationLiveView\",\n        type: {\n          name: \"Composite\",\n          className: \"DevToolPortalFeatureDetail\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalFeatureDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalFeatureDetail\",\n    modelProperties: {\n      state: {\n        defaultValue: \"Enabled\",\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      route: {\n        serializedName: \"route\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRegistryResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRegistryResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContainerRegistryResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRegistryProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRegistryProperties\",\n    modelProperties: {\n      credentials: {\n        serializedName: \"credentials\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerRegistryCredentials\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRegistryCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRegistryCredentials\",\n    uberParent: \"ContainerRegistryCredentials\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildService\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceProperties\",\n    modelProperties: {\n      containerRegistry: {\n        serializedName: \"containerRegistry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      kPackVersion: {\n        serializedName: \"kPackVersion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildServicePropertiesResourceRequests\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServicePropertiesResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServicePropertiesResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Build\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildProperties\",\n    modelProperties: {\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      builder: {\n        serializedName: \"builder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      agentPool: {\n        serializedName: \"agentPool\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      env: {\n        serializedName: \"env\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      triggeredBuildResult: {\n        serializedName: \"triggeredBuildResult\",\n        type: {\n          name: \"Composite\",\n          className: \"TriggeredBuildResult\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildResourceRequests\"\n        }\n      }\n    }\n  }\n};\n\nexport const TriggeredBuildResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TriggeredBuildResult\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildResourceRequests\",\n    modelProperties: {\n      cpu: {\n        defaultValue: \"1\",\n        serializedName: \"cpu\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        defaultValue: \"2Gi\",\n        serializedName: \"memory\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildpackBindingResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildpackBindingResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildpackBindingResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildpackBindingProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildpackBindingProperties\",\n    modelProperties: {\n      bindingType: {\n        serializedName: \"bindingType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      launchProperties: {\n        serializedName: \"launchProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildpackBindingLaunchProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildpackBindingLaunchProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildpackBindingLaunchProperties\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const BuildResultCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildResultCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildResult\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildResultProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildResultProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      },\n      buildPodName: {\n        serializedName: \"buildPodName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      buildStages: {\n        serializedName: \"buildStages\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildStageProperties\"\n            }\n          }\n        }\n      },\n      image: {\n        serializedName: \"image\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildStageProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildStageProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      exitCode: {\n        serializedName: \"exitCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildResultLog: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildResultLog\",\n    modelProperties: {\n      blobUrl: {\n        serializedName: \"blobUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuilderProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuilderProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stack: {\n        serializedName: \"stack\",\n        type: {\n          name: \"Composite\",\n          className: \"StackProperties\"\n        }\n      },\n      buildpackGroups: {\n        serializedName: \"buildpackGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildpacksGroupProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const StackProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StackProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildpacksGroupProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildpacksGroupProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      buildpacks: {\n        serializedName: \"buildpacks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildpackProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BuildpackProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildpackProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuilderResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuilderResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuilderResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceUploadDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceUploadDefinition\",\n    modelProperties: {\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uploadUrl: {\n        serializedName: \"uploadUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedBuildpacksCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedBuildpacksCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SupportedBuildpackResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedBuildpackResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedBuildpackResourceProperties\",\n    modelProperties: {\n      buildpackId: {\n        serializedName: \"buildpackId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedStacksCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedStacksCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SupportedStackResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedStackResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedStackResourceProperties\",\n    modelProperties: {\n      stackId: {\n        serializedName: \"stackId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceAgentPoolResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceAgentPoolResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BuildServiceAgentPoolResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceAgentPoolProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceAgentPoolProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      poolSize: {\n        serializedName: \"poolSize\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildServiceAgentPoolSizeProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceAgentPoolSizeProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceAgentPoolSizeProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringSettingProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringSettingProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorModel\"\n        }\n      },\n      traceEnabled: {\n        serializedName: \"traceEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      appInsightsInstrumentationKey: {\n        serializedName: \"appInsightsInstrumentationKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appInsightsSamplingRate: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"appInsightsSamplingRate\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      appInsightsAgentVersions: {\n        serializedName: \"appInsightsAgentVersions\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationInsightsAgentVersions\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationInsightsAgentVersions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationInsightsAgentVersions\",\n    modelProperties: {\n      java: {\n        serializedName: \"java\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppResourceProperties\",\n    modelProperties: {\n      public: {\n        serializedName: \"public\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      addonConfigs: {\n        serializedName: \"addonConfigs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fqdn: {\n        serializedName: \"fqdn\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      httpsOnly: {\n        defaultValue: false,\n        serializedName: \"httpsOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      temporaryDisk: {\n        serializedName: \"temporaryDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"TemporaryDisk\"\n        }\n      },\n      persistentDisk: {\n        serializedName: \"persistentDisk\",\n        type: {\n          name: \"Composite\",\n          className: \"PersistentDisk\"\n        }\n      },\n      customPersistentDisks: {\n        serializedName: \"customPersistentDisks\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomPersistentDiskResource\"\n            }\n          }\n        }\n      },\n      enableEndToEndTLS: {\n        defaultValue: false,\n        serializedName: \"enableEndToEndTLS\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      loadedCertificates: {\n        serializedName: \"loadedCertificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LoadedCertificate\"\n            }\n          }\n        }\n      },\n      vnetAddons: {\n        serializedName: \"vnetAddons\",\n        type: {\n          name: \"Composite\",\n          className: \"AppVNetAddons\"\n        }\n      },\n      ingressSettings: {\n        serializedName: \"ingressSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"IngressSettings\"\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Secret\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TemporaryDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TemporaryDisk\",\n    modelProperties: {\n      sizeInGB: {\n        constraints: {\n          InclusiveMaximum: 5,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"sizeInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      mountPath: {\n        defaultValue: \"/tmp\",\n        serializedName: \"mountPath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PersistentDisk: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PersistentDisk\",\n    modelProperties: {\n      sizeInGB: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"sizeInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      usedInGB: {\n        constraints: {\n          InclusiveMaximum: 50,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"usedInGB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mountPath: {\n        serializedName: \"mountPath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomPersistentDiskResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomPersistentDiskResource\",\n    modelProperties: {\n      customPersistentDiskProperties: {\n        serializedName: \"customPersistentDiskProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomPersistentDiskProperties\"\n        }\n      },\n      storageId: {\n        serializedName: \"storageId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomPersistentDiskProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomPersistentDiskProperties\",\n    uberParent: \"CustomPersistentDiskProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mountPath: {\n        serializedName: \"mountPath\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      readOnly: {\n        serializedName: \"readOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      enableSubPath: {\n        defaultValue: false,\n        serializedName: \"enableSubPath\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mountOptions: {\n        serializedName: \"mountOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LoadedCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LoadedCertificate\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      loadTrustStore: {\n        defaultValue: false,\n        serializedName: \"loadTrustStore\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppVNetAddons: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppVNetAddons\",\n    modelProperties: {\n      publicEndpoint: {\n        defaultValue: false,\n        serializedName: \"publicEndpoint\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      publicEndpointUrl: {\n        serializedName: \"publicEndpointUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const IngressSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IngressSettings\",\n    modelProperties: {\n      readTimeoutInSeconds: {\n        serializedName: \"readTimeoutInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sendTimeoutInSeconds: {\n        serializedName: \"sendTimeoutInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sessionAffinity: {\n        serializedName: \"sessionAffinity\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sessionCookieMaxAge: {\n        serializedName: \"sessionCookieMaxAge\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      backendProtocol: {\n        serializedName: \"backendProtocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientAuth: {\n        serializedName: \"clientAuth\",\n        type: {\n          name: \"Composite\",\n          className: \"IngressSettingsClientAuth\"\n        }\n      }\n    }\n  }\n};\n\nexport const IngressSettingsClientAuth: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"IngressSettingsClientAuth\",\n    modelProperties: {\n      certificates: {\n        serializedName: \"certificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Secret: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Secret\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedIdentityProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedIdentityProperties\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"UserAssignedManagedIdentity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserAssignedManagedIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserAssignedManagedIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"AppResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ActiveDeploymentCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ActiveDeploymentCollection\",\n    modelProperties: {\n      activeDeploymentNames: {\n        serializedName: \"activeDeploymentNames\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const BindingResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BindingResourceProperties\",\n    modelProperties: {\n      resourceName: {\n        serializedName: \"resourceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceType: {\n        serializedName: \"resourceType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bindingParameters: {\n        serializedName: \"bindingParameters\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      generatedProperties: {\n        serializedName: \"generatedProperties\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      updatedAt: {\n        serializedName: \"updatedAt\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BindingResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BindingResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BindingResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageProperties\",\n    uberParent: \"StorageProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"storageType\",\n      clientName: \"storageType\"\n    },\n    modelProperties: {\n      storageType: {\n        serializedName: \"storageType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateProperties\",\n    uberParent: \"CertificateProperties\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      issuer: {\n        serializedName: \"issuer\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      issuedDate: {\n        serializedName: \"issuedDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expirationDate: {\n        serializedName: \"expirationDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      activateDate: {\n        serializedName: \"activateDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subjectName: {\n        serializedName: \"subjectName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsNames: {\n        serializedName: \"dnsNames\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CertificateResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameAvailabilityParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameAvailabilityParameters\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameAvailability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameAvailability\",\n    modelProperties: {\n      nameAvailable: {\n        serializedName: \"nameAvailable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainProperties\",\n    modelProperties: {\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      appName: {\n        serializedName: \"appName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certName: {\n        serializedName: \"certName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomDomainResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainValidatePayload: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainValidatePayload\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainValidateResult\",\n    modelProperties: {\n      isValid: {\n        serializedName: \"isValid\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentResourceProperties\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        type: {\n          name: \"Composite\",\n          className: \"UserSourceInfo\"\n        }\n      },\n      deploymentSettings: {\n        serializedName: \"deploymentSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentSettings\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentInstance\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UserSourceInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserSourceInfo\",\n    uberParent: \"UserSourceInfo\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentSettings\",\n    modelProperties: {\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceRequests\"\n        }\n      },\n      environmentVariables: {\n        serializedName: \"environmentVariables\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      addonConfigs: {\n        serializedName: \"addonConfigs\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      },\n      livenessProbe: {\n        serializedName: \"livenessProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"Probe\"\n        }\n      },\n      readinessProbe: {\n        serializedName: \"readinessProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"Probe\"\n        }\n      },\n      startupProbe: {\n        serializedName: \"startupProbe\",\n        type: {\n          name: \"Composite\",\n          className: \"Probe\"\n        }\n      },\n      terminationGracePeriodSeconds: {\n        defaultValue: 90,\n        serializedName: \"terminationGracePeriodSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scale: {\n        serializedName: \"scale\",\n        type: {\n          name: \"Composite\",\n          className: \"Scale\"\n        }\n      },\n      containerProbeSettings: {\n        serializedName: \"containerProbeSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerProbeSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Probe: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Probe\",\n    modelProperties: {\n      probeAction: {\n        serializedName: \"probeAction\",\n        type: {\n          name: \"Composite\",\n          className: \"ProbeAction\"\n        }\n      },\n      disableProbe: {\n        defaultValue: false,\n        serializedName: \"disableProbe\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      initialDelaySeconds: {\n        serializedName: \"initialDelaySeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      periodSeconds: {\n        serializedName: \"periodSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeoutSeconds: {\n        serializedName: \"timeoutSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      failureThreshold: {\n        serializedName: \"failureThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      successThreshold: {\n        serializedName: \"successThreshold\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProbeAction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProbeAction\",\n    uberParent: \"ProbeAction\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Scale: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Scale\",\n    modelProperties: {\n      minReplicas: {\n        serializedName: \"minReplicas\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxReplicas: {\n        defaultValue: 10,\n        serializedName: \"maxReplicas\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      rules: {\n        serializedName: \"rules\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleRule\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      azureQueue: {\n        serializedName: \"azureQueue\",\n        type: {\n          name: \"Composite\",\n          className: \"QueueScaleRule\"\n        }\n      },\n      custom: {\n        serializedName: \"custom\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomScaleRule\"\n        }\n      },\n      http: {\n        serializedName: \"http\",\n        type: {\n          name: \"Composite\",\n          className: \"HttpScaleRule\"\n        }\n      },\n      tcp: {\n        serializedName: \"tcp\",\n        type: {\n          name: \"Composite\",\n          className: \"TcpScaleRule\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueueScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueueScaleRule\",\n    modelProperties: {\n      queueName: {\n        serializedName: \"queueName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queueLength: {\n        serializedName: \"queueLength\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ScaleRuleAuth: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ScaleRuleAuth\",\n    modelProperties: {\n      secretRef: {\n        serializedName: \"secretRef\",\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerParameter: {\n        serializedName: \"triggerParameter\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomScaleRule\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const HttpScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HttpScaleRule\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TcpScaleRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TcpScaleRule\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      auth: {\n        serializedName: \"auth\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ScaleRuleAuth\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerProbeSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerProbeSettings\",\n    modelProperties: {\n      disableProbe: {\n        serializedName: \"disableProbe\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      discoveryStatus: {\n        serializedName: \"discoveryStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zone: {\n        serializedName: \"zone\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeploymentResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentList\",\n    modelProperties: {\n      deployments: {\n        serializedName: \"deployments\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RemoteDebuggingPayload: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoteDebuggingPayload\",\n    modelProperties: {\n      port: {\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RemoteDebugging: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RemoteDebugging\",\n    modelProperties: {\n      port: {\n        serializedName: \"port\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogFileUrlResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogFileUrlResponse\",\n    modelProperties: {\n      url: {\n        serializedName: \"url\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DiagnosticParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DiagnosticParameters\",\n    modelProperties: {\n      appInstance: {\n        serializedName: \"appInstance\",\n        type: {\n          name: \"String\"\n        }\n      },\n      filePath: {\n        serializedName: \"filePath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceResourceList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceResourceList\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableOperations: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableOperations\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationDetail\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDetail: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDetail\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDataAction: {\n        serializedName: \"isDataAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      actionType: {\n        serializedName: \"actionType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationProperties\",\n    modelProperties: {\n      serviceSpecification: {\n        serializedName: \"serviceSpecification\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceSpecification\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSpecification\",\n    modelProperties: {\n      logSpecifications: {\n        serializedName: \"logSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LogSpecification\"\n            }\n          }\n        }\n      },\n      metricSpecifications: {\n        serializedName: \"metricSpecifications\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricSpecification\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LogSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blobDuration: {\n        serializedName: \"blobDuration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricSpecification: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricSpecification\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayDescription: {\n        serializedName: \"displayDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      category: {\n        serializedName: \"category\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregationType: {\n        serializedName: \"aggregationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedAggregationTypes: {\n        serializedName: \"supportedAggregationTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      supportedTimeGrainTypes: {\n        serializedName: \"supportedTimeGrainTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      fillGapWithZero: {\n        serializedName: \"fillGapWithZero\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      dimensions: {\n        serializedName: \"dimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricDimension\"\n            }\n          }\n        }\n      },\n      sourceMdmNamespace: {\n        serializedName: \"sourceMdmNamespace\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricDimension: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDimension\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toBeExportedForShoebox: {\n        serializedName: \"toBeExportedForShoebox\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const AvailableRuntimeVersions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AvailableRuntimeVersions\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SupportedRuntimeVersion\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedRuntimeVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedRuntimeVersion\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      platform: {\n        serializedName: \"platform\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSku\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSku\",\n    modelProperties: {\n      resourceType: {\n        serializedName: \"resourceType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Composite\",\n          className: \"SkuCapacity\"\n        }\n      },\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      locationInfo: {\n        serializedName: \"locationInfo\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuLocationInfo\"\n            }\n          }\n        }\n      },\n      restrictions: {\n        serializedName: \"restrictions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuRestrictions\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SkuCapacity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuCapacity\",\n    modelProperties: {\n      minimum: {\n        serializedName: \"minimum\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      scaleType: {\n        serializedName: \"scaleType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuLocationInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuLocationInfo\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      zoneDetails: {\n        serializedName: \"zoneDetails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuZoneDetails\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuZoneDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuZoneDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ResourceSkuCapabilities\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuCapabilities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuCapabilities\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuRestrictions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuRestrictions\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      restrictionInfo: {\n        serializedName: \"restrictionInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceSkuRestrictionInfo\"\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceSkuRestrictionInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceSkuRestrictionInfo\",\n    modelProperties: {\n      locations: {\n        serializedName: \"locations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      zones: {\n        serializedName: \"zones\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      public: {\n        defaultValue: false,\n        serializedName: \"public\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      httpsOnly: {\n        defaultValue: false,\n        serializedName: \"httpsOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      ssoProperties: {\n        serializedName: \"ssoProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"SsoProperties\"\n        }\n      },\n      apiMetadataProperties: {\n        serializedName: \"apiMetadataProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayApiMetadataProperties\"\n        }\n      },\n      corsProperties: {\n        serializedName: \"corsProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayCorsProperties\"\n        }\n      },\n      clientAuth: {\n        serializedName: \"clientAuth\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayPropertiesClientAuth\"\n        }\n      },\n      apmTypes: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"apmTypes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      environmentVariables: {\n        serializedName: \"environmentVariables\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayPropertiesEnvironmentVariables\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GatewayInstance\"\n            }\n          }\n        }\n      },\n      operatorProperties: {\n        serializedName: \"operatorProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayOperatorProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SsoProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SsoProperties\",\n    modelProperties: {\n      scope: {\n        serializedName: \"scope\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientSecret: {\n        serializedName: \"clientSecret\",\n        type: {\n          name: \"String\"\n        }\n      },\n      issuerUri: {\n        serializedName: \"issuerUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayApiMetadataProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayApiMetadataProperties\",\n    modelProperties: {\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      documentation: {\n        serializedName: \"documentation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverUrl: {\n        serializedName: \"serverUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayCorsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayCorsProperties\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"allowedOrigins\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      allowedMethods: {\n        serializedName: \"allowedMethods\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      allowedHeaders: {\n        serializedName: \"allowedHeaders\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      maxAge: {\n        serializedName: \"maxAge\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      allowCredentials: {\n        serializedName: \"allowCredentials\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      exposedHeaders: {\n        serializedName: \"exposedHeaders\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayPropertiesClientAuth: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayPropertiesClientAuth\",\n    modelProperties: {\n      certificates: {\n        constraints: {\n          UniqueItems: true\n        },\n        serializedName: \"certificates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      certificateVerification: {\n        defaultValue: \"Disabled\",\n        serializedName: \"certificateVerification\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayPropertiesEnvironmentVariables: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayPropertiesEnvironmentVariables\",\n    modelProperties: {\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      secrets: {\n        serializedName: \"secrets\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayResourceRequests\",\n    modelProperties: {\n      cpu: {\n        defaultValue: \"1\",\n        serializedName: \"cpu\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        defaultValue: \"2Gi\",\n        serializedName: \"memory\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayOperatorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayOperatorProperties\",\n    modelProperties: {\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayOperatorResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GatewayInstance\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayOperatorResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayOperatorResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceCount: {\n        serializedName: \"instanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SkuObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SkuObject\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GatewayResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayRouteConfigProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayRouteConfigProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      appResourceId: {\n        serializedName: \"appResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      openApi: {\n        serializedName: \"openApi\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayRouteConfigOpenApiProperties\"\n        }\n      },\n      protocol: {\n        defaultValue: \"HTTP\",\n        serializedName: \"protocol\",\n        type: {\n          name: \"String\"\n        }\n      },\n      routes: {\n        serializedName: \"routes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GatewayApiRoute\"\n            }\n          }\n        }\n      },\n      ssoEnabled: {\n        serializedName: \"ssoEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      predicates: {\n        serializedName: \"predicates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      filters: {\n        serializedName: \"filters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayRouteConfigOpenApiProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayRouteConfigOpenApiProperties\",\n    modelProperties: {\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayApiRoute: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayApiRoute\",\n    modelProperties: {\n      title: {\n        serializedName: \"title\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ssoEnabled: {\n        serializedName: \"ssoEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      tokenRelay: {\n        serializedName: \"tokenRelay\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      predicates: {\n        serializedName: \"predicates\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      filters: {\n        serializedName: \"filters\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      order: {\n        serializedName: \"order\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayRouteConfigResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayRouteConfigResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GatewayRouteConfigResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayCustomDomainProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayCustomDomainProperties\",\n    modelProperties: {\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayCustomDomainResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayCustomDomainResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GatewayCustomDomainResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      public: {\n        defaultValue: false,\n        serializedName: \"public\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      httpsOnly: {\n        defaultValue: false,\n        serializedName: \"httpsOnly\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      gatewayIds: {\n        serializedName: \"gatewayIds\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      sourceUrls: {\n        serializedName: \"sourceUrls\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      ssoProperties: {\n        serializedName: \"ssoProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"SsoProperties\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiPortalResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiPortalInstance\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiPortalResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalCustomDomainProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalCustomDomainProperties\",\n    modelProperties: {\n      thumbprint: {\n        serializedName: \"thumbprint\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalCustomDomainResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalCustomDomainResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApiPortalCustomDomainResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationAcceleratorResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationAcceleratorResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationAcceleratorResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationAcceleratorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationAcceleratorProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      components: {\n        serializedName: \"components\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationAcceleratorComponent\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationAcceleratorComponent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationAcceleratorComponent\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceRequests: {\n        serializedName: \"resourceRequests\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationAcceleratorResourceRequests\"\n        }\n      },\n      instances: {\n        serializedName: \"instances\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ApplicationAcceleratorInstance\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationAcceleratorResourceRequests: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationAcceleratorResourceRequests\",\n    modelProperties: {\n      cpu: {\n        serializedName: \"cpu\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      memory: {\n        serializedName: \"memory\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      instanceCount: {\n        serializedName: \"instanceCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationAcceleratorInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationAcceleratorInstance\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomizedAcceleratorResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomizedAcceleratorResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CustomizedAcceleratorResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomizedAcceleratorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomizedAcceleratorProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      iconUrl: {\n        serializedName: \"iconUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceleratorTags: {\n        serializedName: \"acceleratorTags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      gitRepository: {\n        serializedName: \"gitRepository\",\n        type: {\n          name: \"Composite\",\n          className: \"AcceleratorGitRepository\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcceleratorGitRepository: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcceleratorGitRepository\",\n    modelProperties: {\n      url: {\n        serializedName: \"url\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      intervalInSeconds: {\n        serializedName: \"intervalInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      branch: {\n        serializedName: \"branch\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commit: {\n        serializedName: \"commit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gitTag: {\n        serializedName: \"gitTag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authSetting: {\n        serializedName: \"authSetting\",\n        type: {\n          name: \"Composite\",\n          className: \"AcceleratorAuthSetting\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcceleratorAuthSetting: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcceleratorAuthSetting\",\n    uberParent: \"AcceleratorAuthSetting\",\n    polymorphicDiscriminator: {\n      serializedName: \"authType\",\n      clientName: \"authType\"\n    },\n    modelProperties: {\n      authType: {\n        serializedName: \"authType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomizedAcceleratorValidateResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomizedAcceleratorValidateResult\",\n    modelProperties: {\n      state: {\n        defaultValue: \"Valid\",\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredefinedAcceleratorResourceCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredefinedAcceleratorResourceCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PredefinedAcceleratorResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredefinedAcceleratorProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredefinedAcceleratorProperties\",\n    modelProperties: {\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      iconUrl: {\n        serializedName: \"iconUrl\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      acceleratorTags: {\n        serializedName: \"acceleratorTags\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      state: {\n        defaultValue: \"Enabled\",\n        serializedName: \"state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomContainer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomContainer\",\n    modelProperties: {\n      server: {\n        serializedName: \"server\",\n        type: {\n          name: \"String\"\n        }\n      },\n      containerImage: {\n        serializedName: \"containerImage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      command: {\n        serializedName: \"command\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      args: {\n        serializedName: \"args\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      imageRegistryCredential: {\n        serializedName: \"imageRegistryCredential\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageRegistryCredential\"\n        }\n      },\n      languageFramework: {\n        serializedName: \"languageFramework\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageRegistryCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImageRegistryCredential\",\n    modelProperties: {\n      username: {\n        serializedName: \"username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const ContainerRegistryBasicCredentials: coreClient.CompositeMapper = {\n  serializedName: \"BasicAuth\",\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRegistryBasicCredentials\",\n    uberParent: \"ContainerRegistryCredentials\",\n    polymorphicDiscriminator:\n      ContainerRegistryCredentials.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ContainerRegistryCredentials.type.modelProperties,\n      server: {\n        serializedName: \"server\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureFileVolume: coreClient.CompositeMapper = {\n  serializedName: \"AzureFileVolume\",\n  type: {\n    name: \"Composite\",\n    className: \"AzureFileVolume\",\n    uberParent: \"CustomPersistentDiskProperties\",\n    polymorphicDiscriminator:\n      CustomPersistentDiskProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CustomPersistentDiskProperties.type.modelProperties,\n      shareName: {\n        serializedName: \"shareName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageAccount: coreClient.CompositeMapper = {\n  serializedName: \"StorageAccount\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageAccount\",\n    uberParent: \"StorageProperties\",\n    polymorphicDiscriminator: StorageProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...StorageProperties.type.modelProperties,\n      accountName: {\n        serializedName: \"accountName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      accountKey: {\n        serializedName: \"accountKey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyVaultCertificateProperties: coreClient.CompositeMapper = {\n  serializedName: \"KeyVaultCertificate\",\n  type: {\n    name: \"Composite\",\n    className: \"KeyVaultCertificateProperties\",\n    uberParent: \"CertificateProperties\",\n    polymorphicDiscriminator:\n      CertificateProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CertificateProperties.type.modelProperties,\n      vaultUri: {\n        serializedName: \"vaultUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      keyVaultCertName: {\n        serializedName: \"keyVaultCertName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      certVersion: {\n        serializedName: \"certVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      excludePrivateKey: {\n        defaultValue: false,\n        serializedName: \"excludePrivateKey\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContentCertificateProperties: coreClient.CompositeMapper = {\n  serializedName: \"ContentCertificate\",\n  type: {\n    name: \"Composite\",\n    className: \"ContentCertificateProperties\",\n    uberParent: \"CertificateProperties\",\n    polymorphicDiscriminator:\n      CertificateProperties.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...CertificateProperties.type.modelProperties,\n      content: {\n        serializedName: \"content\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UploadedUserSourceInfo: coreClient.CompositeMapper = {\n  serializedName: \"UploadedUserSourceInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"UploadedUserSourceInfo\",\n    uberParent: \"UserSourceInfo\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      ...UserSourceInfo.type.modelProperties,\n      relativePath: {\n        serializedName: \"relativePath\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildResultUserSourceInfo: coreClient.CompositeMapper = {\n  serializedName: \"BuildResult\",\n  type: {\n    name: \"Composite\",\n    className: \"BuildResultUserSourceInfo\",\n    uberParent: \"UserSourceInfo\",\n    polymorphicDiscriminator: UserSourceInfo.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UserSourceInfo.type.modelProperties,\n      buildResultId: {\n        serializedName: \"buildResultId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomContainerUserSourceInfo: coreClient.CompositeMapper = {\n  serializedName: \"Container\",\n  type: {\n    name: \"Composite\",\n    className: \"CustomContainerUserSourceInfo\",\n    uberParent: \"UserSourceInfo\",\n    polymorphicDiscriminator: UserSourceInfo.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UserSourceInfo.type.modelProperties,\n      customContainer: {\n        serializedName: \"customContainer\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomContainer\"\n        }\n      }\n    }\n  }\n};\n\nexport const HttpGetAction: coreClient.CompositeMapper = {\n  serializedName: \"HTTPGetAction\",\n  type: {\n    name: \"Composite\",\n    className: \"HttpGetAction\",\n    uberParent: \"ProbeAction\",\n    polymorphicDiscriminator: ProbeAction.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ProbeAction.type.modelProperties,\n      path: {\n        serializedName: \"path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      scheme: {\n        serializedName: \"scheme\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExecAction: coreClient.CompositeMapper = {\n  serializedName: \"ExecAction\",\n  type: {\n    name: \"Composite\",\n    className: \"ExecAction\",\n    uberParent: \"ProbeAction\",\n    polymorphicDiscriminator: ProbeAction.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ProbeAction.type.modelProperties,\n      command: {\n        serializedName: \"command\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TCPSocketAction: coreClient.CompositeMapper = {\n  serializedName: \"TCPSocketAction\",\n  type: {\n    name: \"Composite\",\n    className: \"TCPSocketAction\",\n    uberParent: \"ProbeAction\",\n    polymorphicDiscriminator: ProbeAction.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...ProbeAction.type.modelProperties\n    }\n  }\n};\n\nexport const AcceleratorPublicSetting: coreClient.CompositeMapper = {\n  serializedName: \"Public\",\n  type: {\n    name: \"Composite\",\n    className: \"AcceleratorPublicSetting\",\n    uberParent: \"AcceleratorAuthSetting\",\n    polymorphicDiscriminator:\n      AcceleratorAuthSetting.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AcceleratorAuthSetting.type.modelProperties,\n      caCertResourceId: {\n        serializedName: \"caCertResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcceleratorBasicAuthSetting: coreClient.CompositeMapper = {\n  serializedName: \"BasicAuth\",\n  type: {\n    name: \"Composite\",\n    className: \"AcceleratorBasicAuthSetting\",\n    uberParent: \"AcceleratorAuthSetting\",\n    polymorphicDiscriminator:\n      AcceleratorAuthSetting.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AcceleratorAuthSetting.type.modelProperties,\n      caCertResourceId: {\n        serializedName: \"caCertResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      username: {\n        serializedName: \"username\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcceleratorSshSetting: coreClient.CompositeMapper = {\n  serializedName: \"SSH\",\n  type: {\n    name: \"Composite\",\n    className: \"AcceleratorSshSetting\",\n    uberParent: \"AcceleratorAuthSetting\",\n    polymorphicDiscriminator:\n      AcceleratorAuthSetting.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...AcceleratorAuthSetting.type.modelProperties,\n      hostKey: {\n        serializedName: \"hostKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostKeyAlgorithm: {\n        serializedName: \"hostKeyAlgorithm\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateKey: {\n        serializedName: \"privateKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceResource\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ClusterResourceProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigServerResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigServerResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigServerProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigurationServiceResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigurationServiceResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ConfigurationServiceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceRegistryResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceRegistryResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ServiceRegistryProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationLiveViewResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationLiveViewResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationLiveViewProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DevToolPortalResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DevToolPortalResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DevToolPortalProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContainerRegistryResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContainerRegistryResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ContainerRegistryProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildService: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildService\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildServiceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const Build: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Build\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildpackBindingResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildpackBindingResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildpackBindingProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildResultProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuilderResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuilderResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuilderProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedBuildpackResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedBuildpackResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedBuildpackResourceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SupportedStackResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SupportedStackResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SupportedStackResourceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceAgentPoolResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceAgentPoolResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BuildServiceAgentPoolProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const MonitoringSettingResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MonitoringSettingResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"MonitoringSettingProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const AppResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AppResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"AppResourceProperties\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedIdentityProperties\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BindingResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BindingResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"BindingResourceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"StorageProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CertificateResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CertificateResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CertificateProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomDomainResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomDomainResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomDomainProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeploymentResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeploymentResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"DeploymentResourceProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayRouteConfigResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayRouteConfigResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayRouteConfigProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewayCustomDomainResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewayCustomDomainResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"GatewayCustomDomainProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiPortalProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiPortalCustomDomainResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiPortalCustomDomainResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ApiPortalCustomDomainProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApplicationAcceleratorResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApplicationAcceleratorResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ApplicationAcceleratorProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const CustomizedAcceleratorResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CustomizedAcceleratorResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"CustomizedAcceleratorProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const PredefinedAcceleratorResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PredefinedAcceleratorResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PredefinedAcceleratorProperties\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      }\n    }\n  }\n};\n\nexport const JarUploadedUserSourceInfo: coreClient.CompositeMapper = {\n  serializedName: \"Jar\",\n  type: {\n    name: \"Composite\",\n    className: \"JarUploadedUserSourceInfo\",\n    uberParent: \"UploadedUserSourceInfo\",\n    polymorphicDiscriminator:\n      UploadedUserSourceInfo.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UploadedUserSourceInfo.type.modelProperties,\n      runtimeVersion: {\n        serializedName: \"runtimeVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      jvmOptions: {\n        serializedName: \"jvmOptions\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SourceUploadedUserSourceInfo: coreClient.CompositeMapper = {\n  serializedName: \"Source\",\n  type: {\n    name: \"Composite\",\n    className: \"SourceUploadedUserSourceInfo\",\n    uberParent: \"UploadedUserSourceInfo\",\n    polymorphicDiscriminator:\n      UploadedUserSourceInfo.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UploadedUserSourceInfo.type.modelProperties,\n      artifactSelector: {\n        serializedName: \"artifactSelector\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runtimeVersion: {\n        serializedName: \"runtimeVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetCoreZipUploadedUserSourceInfo: coreClient.CompositeMapper = {\n  serializedName: \"NetCoreZip\",\n  type: {\n    name: \"Composite\",\n    className: \"NetCoreZipUploadedUserSourceInfo\",\n    uberParent: \"UploadedUserSourceInfo\",\n    polymorphicDiscriminator:\n      UploadedUserSourceInfo.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...UploadedUserSourceInfo.type.modelProperties,\n      netCoreMainEntryPath: {\n        serializedName: \"netCoreMainEntryPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      runtimeVersion: {\n        serializedName: \"runtimeVersion\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BuildServiceDeleteBuildHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BuildServiceDeleteBuildHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewaysUpdateCapacityHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewaysUpdateCapacityHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GatewaysRestartHeaders: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GatewaysRestartHeaders\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  ContainerRegistryCredentials: ContainerRegistryCredentials,\n  CustomPersistentDiskProperties: CustomPersistentDiskProperties,\n  StorageProperties: StorageProperties,\n  CertificateProperties: CertificateProperties,\n  UserSourceInfo: UserSourceInfo,\n  ProbeAction: ProbeAction,\n  AcceleratorAuthSetting: AcceleratorAuthSetting,\n  \"ContainerRegistryCredentials.BasicAuth\": ContainerRegistryBasicCredentials,\n  \"CustomPersistentDiskProperties.AzureFileVolume\": AzureFileVolume,\n  \"StorageProperties.StorageAccount\": StorageAccount,\n  \"CertificateProperties.KeyVaultCertificate\": KeyVaultCertificateProperties,\n  \"CertificateProperties.ContentCertificate\": ContentCertificateProperties,\n  \"UserSourceInfo.UploadedUserSourceInfo\": UploadedUserSourceInfo,\n  \"UserSourceInfo.BuildResult\": BuildResultUserSourceInfo,\n  \"UserSourceInfo.Container\": CustomContainerUserSourceInfo,\n  \"ProbeAction.HTTPGetAction\": HttpGetAction,\n  \"ProbeAction.ExecAction\": ExecAction,\n  \"ProbeAction.TCPSocketAction\": TCPSocketAction,\n  \"AcceleratorAuthSetting.Public\": AcceleratorPublicSetting,\n  \"AcceleratorAuthSetting.BasicAuth\": AcceleratorBasicAuthSetting,\n  \"AcceleratorAuthSetting.SSH\": AcceleratorSshSetting,\n  \"UploadedUserSourceInfo.Jar\": JarUploadedUserSourceInfo,\n  \"UploadedUserSourceInfo.Source\": SourceUploadedUserSourceInfo,\n  \"UploadedUserSourceInfo.NetCoreZip\": NetCoreZipUploadedUserSourceInfo\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  ServiceResource as ServiceResourceMapper,\n  RegenerateTestKeyRequestPayload as RegenerateTestKeyRequestPayloadMapper,\n  NameAvailabilityParameters as NameAvailabilityParametersMapper,\n  ConfigServerResource as ConfigServerResourceMapper,\n  ConfigServerSettings as ConfigServerSettingsMapper,\n  ConfigurationServiceResource as ConfigurationServiceResourceMapper,\n  ConfigurationServiceSettings as ConfigurationServiceSettingsMapper,\n  ApplicationLiveViewResource as ApplicationLiveViewResourceMapper,\n  DevToolPortalResource as DevToolPortalResourceMapper,\n  ContainerRegistryResource as ContainerRegistryResourceMapper,\n  BuildService as BuildServiceMapper,\n  Build as BuildMapper,\n  BuildpackBindingResource as BuildpackBindingResourceMapper,\n  BuilderResource as BuilderResourceMapper,\n  BuildServiceAgentPoolResource as BuildServiceAgentPoolResourceMapper,\n  MonitoringSettingResource as MonitoringSettingResourceMapper,\n  AppResource as AppResourceMapper,\n  ActiveDeploymentCollection as ActiveDeploymentCollectionMapper,\n  CustomDomainValidatePayload as CustomDomainValidatePayloadMapper,\n  BindingResource as BindingResourceMapper,\n  StorageResource as StorageResourceMapper,\n  CertificateResource as CertificateResourceMapper,\n  CustomDomainResource as CustomDomainResourceMapper,\n  DeploymentResource as DeploymentResourceMapper,\n  RemoteDebuggingPayload as RemoteDebuggingPayloadMapper,\n  DiagnosticParameters as DiagnosticParametersMapper,\n  GatewayResource as GatewayResourceMapper,\n  SkuObject as SkuObjectMapper,\n  GatewayRouteConfigResource as GatewayRouteConfigResourceMapper,\n  GatewayCustomDomainResource as GatewayCustomDomainResourceMapper,\n  ApiPortalResource as ApiPortalResourceMapper,\n  ApiPortalCustomDomainResource as ApiPortalCustomDomainResourceMapper,\n  ApplicationAcceleratorResource as ApplicationAcceleratorResourceMapper,\n  CustomizedAcceleratorResource as CustomizedAcceleratorResourceMapper,\n  CustomizedAcceleratorProperties as CustomizedAcceleratorPropertiesMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2023-03-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const serviceName: OperationURLParameter = {\n  parameterPath: \"serviceName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z][a-z0-9-]*[a-z0-9]$\")\n    },\n    serializedName: \"serviceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resource: OperationParameter = {\n  parameterPath: \"resource\",\n  mapper: ServiceResourceMapper\n};\n\nexport const regenerateTestKeyRequest: OperationParameter = {\n  parameterPath: \"regenerateTestKeyRequest\",\n  mapper: RegenerateTestKeyRequestPayloadMapper\n};\n\nexport const availabilityParameters: OperationParameter = {\n  parameterPath: \"availabilityParameters\",\n  mapper: NameAvailabilityParametersMapper\n};\n\nexport const location: OperationURLParameter = {\n  parameterPath: \"location\",\n  mapper: {\n    serializedName: \"location\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const configServerResource: OperationParameter = {\n  parameterPath: \"configServerResource\",\n  mapper: ConfigServerResourceMapper\n};\n\nexport const configServerSettings: OperationParameter = {\n  parameterPath: \"configServerSettings\",\n  mapper: ConfigServerSettingsMapper\n};\n\nexport const configurationServiceName: OperationURLParameter = {\n  parameterPath: \"configurationServiceName\",\n  mapper: {\n    serializedName: \"configurationServiceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const configurationServiceResource: OperationParameter = {\n  parameterPath: \"configurationServiceResource\",\n  mapper: ConfigurationServiceResourceMapper\n};\n\nexport const settings: OperationParameter = {\n  parameterPath: \"settings\",\n  mapper: ConfigurationServiceSettingsMapper\n};\n\nexport const serviceRegistryName: OperationURLParameter = {\n  parameterPath: \"serviceRegistryName\",\n  mapper: {\n    serializedName: \"serviceRegistryName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const applicationLiveViewName: OperationURLParameter = {\n  parameterPath: \"applicationLiveViewName\",\n  mapper: {\n    serializedName: \"applicationLiveViewName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const applicationLiveViewResource: OperationParameter = {\n  parameterPath: \"applicationLiveViewResource\",\n  mapper: ApplicationLiveViewResourceMapper\n};\n\nexport const devToolPortalName: OperationURLParameter = {\n  parameterPath: \"devToolPortalName\",\n  mapper: {\n    serializedName: \"devToolPortalName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const devToolPortalResource: OperationParameter = {\n  parameterPath: \"devToolPortalResource\",\n  mapper: DevToolPortalResourceMapper\n};\n\nexport const containerRegistryName: OperationURLParameter = {\n  parameterPath: \"containerRegistryName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z][a-z0-9-]*[a-z0-9]$\")\n    },\n    serializedName: \"containerRegistryName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const containerRegistryResource: OperationParameter = {\n  parameterPath: \"containerRegistryResource\",\n  mapper: ContainerRegistryResourceMapper\n};\n\nexport const buildServiceName: OperationURLParameter = {\n  parameterPath: \"buildServiceName\",\n  mapper: {\n    serializedName: \"buildServiceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const buildService: OperationParameter = {\n  parameterPath: \"buildService\",\n  mapper: BuildServiceMapper\n};\n\nexport const buildName: OperationURLParameter = {\n  parameterPath: \"buildName\",\n  mapper: {\n    serializedName: \"buildName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const build: OperationParameter = {\n  parameterPath: \"build\",\n  mapper: BuildMapper\n};\n\nexport const buildResultName: OperationURLParameter = {\n  parameterPath: \"buildResultName\",\n  mapper: {\n    serializedName: \"buildResultName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const buildpackName: OperationURLParameter = {\n  parameterPath: \"buildpackName\",\n  mapper: {\n    serializedName: \"buildpackName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const stackName: OperationURLParameter = {\n  parameterPath: \"stackName\",\n  mapper: {\n    serializedName: \"stackName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const builderName: OperationURLParameter = {\n  parameterPath: \"builderName\",\n  mapper: {\n    serializedName: \"builderName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const buildpackBindingName: OperationURLParameter = {\n  parameterPath: \"buildpackBindingName\",\n  mapper: {\n    serializedName: \"buildpackBindingName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const buildpackBinding: OperationParameter = {\n  parameterPath: \"buildpackBinding\",\n  mapper: BuildpackBindingResourceMapper\n};\n\nexport const builderResource: OperationParameter = {\n  parameterPath: \"builderResource\",\n  mapper: BuilderResourceMapper\n};\n\nexport const agentPoolName: OperationURLParameter = {\n  parameterPath: \"agentPoolName\",\n  mapper: {\n    serializedName: \"agentPoolName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const agentPoolResource: OperationParameter = {\n  parameterPath: \"agentPoolResource\",\n  mapper: BuildServiceAgentPoolResourceMapper\n};\n\nexport const monitoringSettingResource: OperationParameter = {\n  parameterPath: \"monitoringSettingResource\",\n  mapper: MonitoringSettingResourceMapper\n};\n\nexport const appName: OperationURLParameter = {\n  parameterPath: \"appName\",\n  mapper: {\n    serializedName: \"appName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const syncStatus: OperationQueryParameter = {\n  parameterPath: [\"options\", \"syncStatus\"],\n  mapper: {\n    serializedName: \"syncStatus\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const appResource: OperationParameter = {\n  parameterPath: \"appResource\",\n  mapper: AppResourceMapper\n};\n\nexport const activeDeploymentCollection: OperationParameter = {\n  parameterPath: \"activeDeploymentCollection\",\n  mapper: ActiveDeploymentCollectionMapper\n};\n\nexport const validatePayload: OperationParameter = {\n  parameterPath: \"validatePayload\",\n  mapper: CustomDomainValidatePayloadMapper\n};\n\nexport const bindingName: OperationURLParameter = {\n  parameterPath: \"bindingName\",\n  mapper: {\n    serializedName: \"bindingName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const bindingResource: OperationParameter = {\n  parameterPath: \"bindingResource\",\n  mapper: BindingResourceMapper\n};\n\nexport const storageName: OperationURLParameter = {\n  parameterPath: \"storageName\",\n  mapper: {\n    serializedName: \"storageName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const storageResource: OperationParameter = {\n  parameterPath: \"storageResource\",\n  mapper: StorageResourceMapper\n};\n\nexport const certificateName: OperationURLParameter = {\n  parameterPath: \"certificateName\",\n  mapper: {\n    serializedName: \"certificateName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const certificateResource: OperationParameter = {\n  parameterPath: \"certificateResource\",\n  mapper: CertificateResourceMapper\n};\n\nexport const domainName: OperationURLParameter = {\n  parameterPath: \"domainName\",\n  mapper: {\n    serializedName: \"domainName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const domainResource: OperationParameter = {\n  parameterPath: \"domainResource\",\n  mapper: CustomDomainResourceMapper\n};\n\nexport const deploymentName: OperationURLParameter = {\n  parameterPath: \"deploymentName\",\n  mapper: {\n    serializedName: \"deploymentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deploymentResource: OperationParameter = {\n  parameterPath: \"deploymentResource\",\n  mapper: DeploymentResourceMapper\n};\n\nexport const version: OperationQueryParameter = {\n  parameterPath: [\"options\", \"version\"],\n  mapper: {\n    serializedName: \"version\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const remoteDebuggingPayload: OperationParameter = {\n  parameterPath: [\"options\", \"remoteDebuggingPayload\"],\n  mapper: RemoteDebuggingPayloadMapper\n};\n\nexport const diagnosticParameters: OperationParameter = {\n  parameterPath: \"diagnosticParameters\",\n  mapper: DiagnosticParametersMapper\n};\n\nexport const gatewayName: OperationURLParameter = {\n  parameterPath: \"gatewayName\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"^[a-z][a-z0-9]*$\")\n    },\n    serializedName: \"gatewayName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const gatewayResource: OperationParameter = {\n  parameterPath: \"gatewayResource\",\n  mapper: GatewayResourceMapper\n};\n\nexport const gatewayCapacityResource: OperationParameter = {\n  parameterPath: \"gatewayCapacityResource\",\n  mapper: SkuObjectMapper\n};\n\nexport const routeConfigName: OperationURLParameter = {\n  parameterPath: \"routeConfigName\",\n  mapper: {\n    serializedName: \"routeConfigName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const gatewayRouteConfigResource: OperationParameter = {\n  parameterPath: \"gatewayRouteConfigResource\",\n  mapper: GatewayRouteConfigResourceMapper\n};\n\nexport const gatewayCustomDomainResource: OperationParameter = {\n  parameterPath: \"gatewayCustomDomainResource\",\n  mapper: GatewayCustomDomainResourceMapper\n};\n\nexport const apiPortalName: OperationURLParameter = {\n  parameterPath: \"apiPortalName\",\n  mapper: {\n    serializedName: \"apiPortalName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiPortalResource: OperationParameter = {\n  parameterPath: \"apiPortalResource\",\n  mapper: ApiPortalResourceMapper\n};\n\nexport const apiPortalCustomDomainResource: OperationParameter = {\n  parameterPath: \"apiPortalCustomDomainResource\",\n  mapper: ApiPortalCustomDomainResourceMapper\n};\n\nexport const applicationAcceleratorName: OperationURLParameter = {\n  parameterPath: \"applicationAcceleratorName\",\n  mapper: {\n    serializedName: \"applicationAcceleratorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const applicationAcceleratorResource: OperationParameter = {\n  parameterPath: \"applicationAcceleratorResource\",\n  mapper: ApplicationAcceleratorResourceMapper\n};\n\nexport const customizedAcceleratorName: OperationURLParameter = {\n  parameterPath: \"customizedAcceleratorName\",\n  mapper: {\n    serializedName: \"customizedAcceleratorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const customizedAcceleratorResource: OperationParameter = {\n  parameterPath: \"customizedAcceleratorResource\",\n  mapper: CustomizedAcceleratorResourceMapper\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: CustomizedAcceleratorPropertiesMapper\n};\n\nexport const predefinedAcceleratorName: OperationURLParameter = {\n  parameterPath: \"predefinedAcceleratorName\",\n  mapper: {\n    serializedName: \"predefinedAcceleratorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport function createLroSpec<T>(inputs: {\n  sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>;\n  args: Record<string, unknown>;\n  spec: {\n    readonly requestBody?: unknown;\n    readonly path?: string;\n    readonly httpMethod: string;\n  } & Record<string, any>;\n}): LongRunningOperation<T> {\n  const { args, spec, sendOperationFn } = inputs;\n  return {\n    requestMethod: spec.httpMethod,\n    requestPath: spec.path!,\n    sendInitialRequest: () => sendOperationFn(args, spec),\n    sendPollRequest: (\n      path: string,\n      options?: { abortSignal?: AbortSignalLike }\n    ) => {\n      const { requestBody, ...restSpec } = spec;\n      return sendOperationFn(args, {\n        ...restSpec,\n        httpMethod: \"GET\",\n        path,\n        abortSignal: options?.abortSignal\n      });\n    }\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Services } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ServiceResource,\n  ServicesListBySubscriptionNextOptionalParams,\n  ServicesListBySubscriptionOptionalParams,\n  ServicesListBySubscriptionResponse,\n  ServicesListNextOptionalParams,\n  ServicesListOptionalParams,\n  ServicesListResponse,\n  ServicesGetOptionalParams,\n  ServicesGetResponse,\n  ServicesCreateOrUpdateOptionalParams,\n  ServicesCreateOrUpdateResponse,\n  ServicesDeleteOptionalParams,\n  ServicesUpdateOptionalParams,\n  ServicesUpdateResponse,\n  ServicesListTestKeysOptionalParams,\n  ServicesListTestKeysResponse,\n  RegenerateTestKeyRequestPayload,\n  ServicesRegenerateTestKeyOptionalParams,\n  ServicesRegenerateTestKeyResponse,\n  ServicesDisableTestEndpointOptionalParams,\n  ServicesEnableTestEndpointOptionalParams,\n  ServicesEnableTestEndpointResponse,\n  ServicesStopOptionalParams,\n  ServicesStartOptionalParams,\n  NameAvailabilityParameters,\n  ServicesCheckNameAvailabilityOptionalParams,\n  ServicesCheckNameAvailabilityResponse,\n  ServicesListBySubscriptionNextResponse,\n  ServicesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Services operations. */\nexport class ServicesImpl implements Services {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Services class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a subscription.\n   * @param options The options parameters.\n   */\n  public listBySubscription(\n    options?: ServicesListBySubscriptionOptionalParams\n  ): PagedAsyncIterableIterator<ServiceResource> {\n    const iter = this.listBySubscriptionPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySubscriptionPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listBySubscriptionPagingPage(\n    options?: ServicesListBySubscriptionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServiceResource[]> {\n    let result: ServicesListBySubscriptionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySubscription(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySubscriptionNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySubscriptionPagingAll(\n    options?: ServicesListBySubscriptionOptionalParams\n  ): AsyncIterableIterator<ServiceResource> {\n    for await (const page of this.listBySubscriptionPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handles requests to list all resources in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    options?: ServicesListOptionalParams\n  ): PagedAsyncIterableIterator<ServiceResource> {\n    const iter = this.listPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(resourceGroupName, options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    options?: ServicesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServiceResource[]> {\n    let result: ServicesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    options?: ServicesListOptionalParams\n  ): AsyncIterableIterator<ServiceResource> {\n    for await (const page of this.listPagingPage(resourceGroupName, options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a Service and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesGetOptionalParams\n  ): Promise<ServicesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a new Service or update an exiting Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param resource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    resource: ServiceResource,\n    options?: ServicesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ServicesCreateOrUpdateResponse>,\n      ServicesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServicesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, resource, options },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ServicesCreateOrUpdateResponse,\n      OperationState<ServicesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a new Service or update an exiting Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param resource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    resource: ServiceResource,\n    options?: ServicesCreateOrUpdateOptionalParams\n  ): Promise<ServicesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      resource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to delete a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to delete a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to update an exiting Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param resource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    resource: ServiceResource,\n    options?: ServicesUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ServicesUpdateResponse>,\n      ServicesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServicesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, resource, options },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ServicesUpdateResponse,\n      OperationState<ServicesUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to update an exiting Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param resource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    resource: ServiceResource,\n    options?: ServicesUpdateOptionalParams\n  ): Promise<ServicesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serviceName,\n      resource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List test keys for a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  listTestKeys(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesListTestKeysOptionalParams\n  ): Promise<ServicesListTestKeysResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listTestKeysOperationSpec\n    );\n  }\n\n  /**\n   * Regenerate a test key for a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param regenerateTestKeyRequest Parameters for the operation\n   * @param options The options parameters.\n   */\n  regenerateTestKey(\n    resourceGroupName: string,\n    serviceName: string,\n    regenerateTestKeyRequest: RegenerateTestKeyRequestPayload,\n    options?: ServicesRegenerateTestKeyOptionalParams\n  ): Promise<ServicesRegenerateTestKeyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, regenerateTestKeyRequest, options },\n      regenerateTestKeyOperationSpec\n    );\n  }\n\n  /**\n   * Disable test endpoint functionality for a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  disableTestEndpoint(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesDisableTestEndpointOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      disableTestEndpointOperationSpec\n    );\n  }\n\n  /**\n   * Enable test endpoint functionality for a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  enableTestEndpoint(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesEnableTestEndpointOptionalParams\n  ): Promise<ServicesEnableTestEndpointResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      enableTestEndpointOperationSpec\n    );\n  }\n\n  /**\n   * Stop a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesStopOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, options },\n      spec: stopOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Stop a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(\n      resourceGroupName,\n      serviceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Start a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesStartOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, options },\n      spec: startOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Start a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServicesStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      serviceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Checks that the resource name is valid and is not already in use.\n   * @param location the region\n   * @param availabilityParameters Parameters supplied to the operation.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    location: string,\n    availabilityParameters: NameAvailabilityParameters,\n    options?: ServicesCheckNameAvailabilityOptionalParams\n  ): Promise<ServicesCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { location, availabilityParameters, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * Handles requests to list all resources in a subscription.\n   * @param options The options parameters.\n   */\n  private _listBySubscription(\n    options?: ServicesListBySubscriptionOptionalParams\n  ): Promise<ServicesListBySubscriptionResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listBySubscriptionOperationSpec\n    );\n  }\n\n  /**\n   * Handles requests to list all resources in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    options?: ServicesListOptionalParams\n  ): Promise<ServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListBySubscriptionNext\n   * @param nextLink The nextLink from the previous successful call to the ListBySubscription method.\n   * @param options The options parameters.\n   */\n  private _listBySubscriptionNext(\n    nextLink: string,\n    options?: ServicesListBySubscriptionNextOptionalParams\n  ): Promise<ServicesListBySubscriptionNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listBySubscriptionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ServicesListNextOptionalParams\n  ): Promise<ServicesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    201: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    202: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    204: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.resource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    201: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    202: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    204: {\n      bodyMapper: Mappers.ServiceResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.resource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listTestKeysOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/listTestKeys\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestKeys\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst regenerateTestKeyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/regenerateTestKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestKeys\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.regenerateTestKeyRequest,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst disableTestEndpointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/disableTestEndpoint\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableTestEndpointOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/enableTestEndpoint\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TestKeys\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    404: {\n      isError: true\n    },\n    409: {\n      isError: true\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    404: {\n      isError: true\n    },\n    409: {\n      isError: true\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/locations/{location}/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameAvailability\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.availabilityParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.location\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySubscriptionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/Spring\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResourceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResourceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySubscriptionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResourceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceResourceList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ConfigServers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ConfigServersGetOptionalParams,\n  ConfigServersGetResponse,\n  ConfigServerResource,\n  ConfigServersUpdatePutOptionalParams,\n  ConfigServersUpdatePutResponse,\n  ConfigServersUpdatePatchOptionalParams,\n  ConfigServersUpdatePatchResponse,\n  ConfigServerSettings,\n  ConfigServersValidateOptionalParams,\n  ConfigServersValidateResponse\n} from \"../models\";\n\n/** Class containing ConfigServers operations. */\nexport class ConfigServersImpl implements ConfigServers {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ConfigServers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the config server and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ConfigServersGetOptionalParams\n  ): Promise<ConfigServersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update the config server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configServerResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePut(\n    resourceGroupName: string,\n    serviceName: string,\n    configServerResource: ConfigServerResource,\n    options?: ConfigServersUpdatePutOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConfigServersUpdatePutResponse>,\n      ConfigServersUpdatePutResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ConfigServersUpdatePutResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, configServerResource, options },\n      spec: updatePutOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ConfigServersUpdatePutResponse,\n      OperationState<ConfigServersUpdatePutResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update the config server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configServerResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePutAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    configServerResource: ConfigServerResource,\n    options?: ConfigServersUpdatePutOptionalParams\n  ): Promise<ConfigServersUpdatePutResponse> {\n    const poller = await this.beginUpdatePut(\n      resourceGroupName,\n      serviceName,\n      configServerResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update the config server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configServerResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePatch(\n    resourceGroupName: string,\n    serviceName: string,\n    configServerResource: ConfigServerResource,\n    options?: ConfigServersUpdatePatchOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConfigServersUpdatePatchResponse>,\n      ConfigServersUpdatePatchResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ConfigServersUpdatePatchResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, configServerResource, options },\n      spec: updatePatchOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ConfigServersUpdatePatchResponse,\n      OperationState<ConfigServersUpdatePatchResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update the config server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configServerResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePatchAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    configServerResource: ConfigServerResource,\n    options?: ConfigServersUpdatePatchOptionalParams\n  ): Promise<ConfigServersUpdatePatchResponse> {\n    const poller = await this.beginUpdatePatch(\n      resourceGroupName,\n      serviceName,\n      configServerResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Check if the config server settings are valid.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configServerSettings Config server settings to be validated\n   * @param options The options parameters.\n   */\n  async beginValidate(\n    resourceGroupName: string,\n    serviceName: string,\n    configServerSettings: ConfigServerSettings,\n    options?: ConfigServersValidateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConfigServersValidateResponse>,\n      ConfigServersValidateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ConfigServersValidateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, configServerSettings, options },\n      spec: validateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ConfigServersValidateResponse,\n      OperationState<ConfigServersValidateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Check if the config server settings are valid.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configServerSettings Config server settings to be validated\n   * @param options The options parameters.\n   */\n  async beginValidateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    configServerSettings: ConfigServerSettings,\n    options?: ConfigServersValidateOptionalParams\n  ): Promise<ConfigServersValidateResponse> {\n    const poller = await this.beginValidate(\n      resourceGroupName,\n      serviceName,\n      configServerSettings,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updatePutOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    201: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    202: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    204: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.configServerResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updatePatchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/default\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    201: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    202: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    204: {\n      bodyMapper: Mappers.ConfigServerResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.configServerResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configServers/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigServerSettingsValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.ConfigServerSettingsValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.ConfigServerSettingsValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.ConfigServerSettingsValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.configServerSettings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ConfigurationServices } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ConfigurationServiceResource,\n  ConfigurationServicesListNextOptionalParams,\n  ConfigurationServicesListOptionalParams,\n  ConfigurationServicesListResponse,\n  ConfigurationServicesGetOptionalParams,\n  ConfigurationServicesGetResponse,\n  ConfigurationServicesCreateOrUpdateOptionalParams,\n  ConfigurationServicesCreateOrUpdateResponse,\n  ConfigurationServicesDeleteOptionalParams,\n  ConfigurationServiceSettings,\n  ConfigurationServicesValidateOptionalParams,\n  ConfigurationServicesValidateResponse,\n  ConfigurationServicesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ConfigurationServices operations. */\nexport class ConfigurationServicesImpl implements ConfigurationServices {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ConfigurationServices class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ConfigurationServicesListOptionalParams\n  ): PagedAsyncIterableIterator<ConfigurationServiceResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ConfigurationServicesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ConfigurationServiceResource[]> {\n    let result: ConfigurationServicesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ConfigurationServicesListOptionalParams\n  ): AsyncIterableIterator<ConfigurationServiceResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Application Configuration Service and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    options?: ConfigurationServicesGetOptionalParams\n  ): Promise<ConfigurationServicesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, configurationServiceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default Application Configuration Service or update the existing Application\n   * Configuration Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param configurationServiceResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    configurationServiceResource: ConfigurationServiceResource,\n    options?: ConfigurationServicesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConfigurationServicesCreateOrUpdateResponse>,\n      ConfigurationServicesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ConfigurationServicesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        configurationServiceName,\n        configurationServiceResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ConfigurationServicesCreateOrUpdateResponse,\n      OperationState<ConfigurationServicesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default Application Configuration Service or update the existing Application\n   * Configuration Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param configurationServiceResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    configurationServiceResource: ConfigurationServiceResource,\n    options?: ConfigurationServicesCreateOrUpdateOptionalParams\n  ): Promise<ConfigurationServicesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      configurationServiceName,\n      configurationServiceResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable the default Application Configuration Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    options?: ConfigurationServicesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        configurationServiceName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable the default Application Configuration Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    options?: ConfigurationServicesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      configurationServiceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ConfigurationServicesListOptionalParams\n  ): Promise<ConfigurationServicesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Check if the Application Configuration Service settings are valid.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param settings Application Configuration Service settings to be validated\n   * @param options The options parameters.\n   */\n  async beginValidate(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    settings: ConfigurationServiceSettings,\n    options?: ConfigurationServicesValidateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ConfigurationServicesValidateResponse>,\n      ConfigurationServicesValidateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ConfigurationServicesValidateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        configurationServiceName,\n        settings,\n        options\n      },\n      spec: validateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ConfigurationServicesValidateResponse,\n      OperationState<ConfigurationServicesValidateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Check if the Application Configuration Service settings are valid.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param configurationServiceName The name of Application Configuration Service.\n   * @param settings Application Configuration Service settings to be validated\n   * @param options The options parameters.\n   */\n  async beginValidateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    configurationServiceName: string,\n    settings: ConfigurationServiceSettings,\n    options?: ConfigurationServicesValidateOptionalParams\n  ): Promise<ConfigurationServicesValidateResponse> {\n    const poller = await this.beginValidate(\n      resourceGroupName,\n      serviceName,\n      configurationServiceName,\n      settings,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: ConfigurationServicesListNextOptionalParams\n  ): Promise<ConfigurationServicesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationServiceResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.configurationServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationServiceResource\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationServiceResource\n    },\n    202: {\n      bodyMapper: Mappers.ConfigurationServiceResource\n    },\n    204: {\n      bodyMapper: Mappers.ConfigurationServiceResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.configurationServiceResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.configurationServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.configurationServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationServiceResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/configurationServices/{configurationServiceName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationServiceSettingsValidateResult\n    },\n    201: {\n      bodyMapper: Mappers.ConfigurationServiceSettingsValidateResult\n    },\n    202: {\n      bodyMapper: Mappers.ConfigurationServiceSettingsValidateResult\n    },\n    204: {\n      bodyMapper: Mappers.ConfigurationServiceSettingsValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.settings,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.configurationServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigurationServiceResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServiceRegistries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ServiceRegistryResource,\n  ServiceRegistriesListNextOptionalParams,\n  ServiceRegistriesListOptionalParams,\n  ServiceRegistriesListResponse,\n  ServiceRegistriesGetOptionalParams,\n  ServiceRegistriesGetResponse,\n  ServiceRegistriesCreateOrUpdateOptionalParams,\n  ServiceRegistriesCreateOrUpdateResponse,\n  ServiceRegistriesDeleteOptionalParams,\n  ServiceRegistriesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServiceRegistries operations. */\nexport class ServiceRegistriesImpl implements ServiceRegistries {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServiceRegistries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServiceRegistriesListOptionalParams\n  ): PagedAsyncIterableIterator<ServiceRegistryResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServiceRegistriesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServiceRegistryResource[]> {\n    let result: ServiceRegistriesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServiceRegistriesListOptionalParams\n  ): AsyncIterableIterator<ServiceRegistryResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Service Registry and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param serviceRegistryName The name of Service Registry.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    serviceRegistryName: string,\n    options?: ServiceRegistriesGetOptionalParams\n  ): Promise<ServiceRegistriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, serviceRegistryName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default Service Registry or update the existing Service Registry.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param serviceRegistryName The name of Service Registry.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    serviceRegistryName: string,\n    options?: ServiceRegistriesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ServiceRegistriesCreateOrUpdateResponse>,\n      ServiceRegistriesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServiceRegistriesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, serviceRegistryName, options },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ServiceRegistriesCreateOrUpdateResponse,\n      OperationState<ServiceRegistriesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default Service Registry or update the existing Service Registry.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param serviceRegistryName The name of Service Registry.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    serviceRegistryName: string,\n    options?: ServiceRegistriesCreateOrUpdateOptionalParams\n  ): Promise<ServiceRegistriesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      serviceRegistryName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable the default Service Registry.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param serviceRegistryName The name of Service Registry.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    serviceRegistryName: string,\n    options?: ServiceRegistriesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, serviceRegistryName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable the default Service Registry.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param serviceRegistryName The name of Service Registry.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    serviceRegistryName: string,\n    options?: ServiceRegistriesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      serviceRegistryName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ServiceRegistriesListOptionalParams\n  ): Promise<ServiceRegistriesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: ServiceRegistriesListNextOptionalParams\n  ): Promise<ServiceRegistriesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries/{serviceRegistryName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceRegistryResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.serviceRegistryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries/{serviceRegistryName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceRegistryResource\n    },\n    201: {\n      bodyMapper: Mappers.ServiceRegistryResource\n    },\n    202: {\n      bodyMapper: Mappers.ServiceRegistryResource\n    },\n    204: {\n      bodyMapper: Mappers.ServiceRegistryResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.serviceRegistryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries/{serviceRegistryName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.serviceRegistryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/serviceRegistries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceRegistryResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceRegistryResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ApplicationLiveViews } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ApplicationLiveViewResource,\n  ApplicationLiveViewsListNextOptionalParams,\n  ApplicationLiveViewsListOptionalParams,\n  ApplicationLiveViewsListResponse,\n  ApplicationLiveViewsGetOptionalParams,\n  ApplicationLiveViewsGetResponse,\n  ApplicationLiveViewsCreateOrUpdateOptionalParams,\n  ApplicationLiveViewsCreateOrUpdateResponse,\n  ApplicationLiveViewsDeleteOptionalParams,\n  ApplicationLiveViewsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ApplicationLiveViews operations. */\nexport class ApplicationLiveViewsImpl implements ApplicationLiveViews {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ApplicationLiveViews class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationLiveViewsListOptionalParams\n  ): PagedAsyncIterableIterator<ApplicationLiveViewResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationLiveViewsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ApplicationLiveViewResource[]> {\n    let result: ApplicationLiveViewsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationLiveViewsListOptionalParams\n  ): AsyncIterableIterator<ApplicationLiveViewResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationLiveViewsListOptionalParams\n  ): Promise<ApplicationLiveViewsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the Application Live  and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationLiveViewName The name of Application Live View.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationLiveViewName: string,\n    options?: ApplicationLiveViewsGetOptionalParams\n  ): Promise<ApplicationLiveViewsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, applicationLiveViewName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default Application Live View or update the existing Application Live View.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationLiveViewName The name of Application Live View.\n   * @param applicationLiveViewResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationLiveViewName: string,\n    applicationLiveViewResource: ApplicationLiveViewResource,\n    options?: ApplicationLiveViewsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ApplicationLiveViewsCreateOrUpdateResponse>,\n      ApplicationLiveViewsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ApplicationLiveViewsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationLiveViewName,\n        applicationLiveViewResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ApplicationLiveViewsCreateOrUpdateResponse,\n      OperationState<ApplicationLiveViewsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default Application Live View or update the existing Application Live View.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationLiveViewName The name of Application Live View.\n   * @param applicationLiveViewResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationLiveViewName: string,\n    applicationLiveViewResource: ApplicationLiveViewResource,\n    options?: ApplicationLiveViewsCreateOrUpdateOptionalParams\n  ): Promise<ApplicationLiveViewsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      applicationLiveViewName,\n      applicationLiveViewResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable the default Application Live View.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationLiveViewName The name of Application Live View.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationLiveViewName: string,\n    options?: ApplicationLiveViewsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationLiveViewName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable the default Application Live View.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationLiveViewName The name of Application Live View.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationLiveViewName: string,\n    options?: ApplicationLiveViewsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      applicationLiveViewName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: ApplicationLiveViewsListNextOptionalParams\n  ): Promise<ApplicationLiveViewsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationLiveViews\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationLiveViewResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationLiveViews/{applicationLiveViewName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationLiveViewResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationLiveViewName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationLiveViews/{applicationLiveViewName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationLiveViewResource\n    },\n    201: {\n      bodyMapper: Mappers.ApplicationLiveViewResource\n    },\n    202: {\n      bodyMapper: Mappers.ApplicationLiveViewResource\n    },\n    204: {\n      bodyMapper: Mappers.ApplicationLiveViewResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.applicationLiveViewResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationLiveViewName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationLiveViews/{applicationLiveViewName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationLiveViewName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationLiveViewResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DevToolPortals } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  DevToolPortalResource,\n  DevToolPortalsListNextOptionalParams,\n  DevToolPortalsListOptionalParams,\n  DevToolPortalsListResponse,\n  DevToolPortalsGetOptionalParams,\n  DevToolPortalsGetResponse,\n  DevToolPortalsCreateOrUpdateOptionalParams,\n  DevToolPortalsCreateOrUpdateResponse,\n  DevToolPortalsDeleteOptionalParams,\n  DevToolPortalsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DevToolPortals operations. */\nexport class DevToolPortalsImpl implements DevToolPortals {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class DevToolPortals class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DevToolPortalsListOptionalParams\n  ): PagedAsyncIterableIterator<DevToolPortalResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DevToolPortalsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DevToolPortalResource[]> {\n    let result: DevToolPortalsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DevToolPortalsListOptionalParams\n  ): AsyncIterableIterator<DevToolPortalResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DevToolPortalsListOptionalParams\n  ): Promise<DevToolPortalsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the Application Live  and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param devToolPortalName The name of Dev Tool Portal.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    devToolPortalName: string,\n    options?: DevToolPortalsGetOptionalParams\n  ): Promise<DevToolPortalsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, devToolPortalName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default Dev Tool Portal or update the existing Dev Tool Portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param devToolPortalName The name of Dev Tool Portal.\n   * @param devToolPortalResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    devToolPortalName: string,\n    devToolPortalResource: DevToolPortalResource,\n    options?: DevToolPortalsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DevToolPortalsCreateOrUpdateResponse>,\n      DevToolPortalsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DevToolPortalsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        devToolPortalName,\n        devToolPortalResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DevToolPortalsCreateOrUpdateResponse,\n      OperationState<DevToolPortalsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default Dev Tool Portal or update the existing Dev Tool Portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param devToolPortalName The name of Dev Tool Portal.\n   * @param devToolPortalResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    devToolPortalName: string,\n    devToolPortalResource: DevToolPortalResource,\n    options?: DevToolPortalsCreateOrUpdateOptionalParams\n  ): Promise<DevToolPortalsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      devToolPortalName,\n      devToolPortalResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable the default Dev Tool Portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param devToolPortalName The name of Dev Tool Portal.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    devToolPortalName: string,\n    options?: DevToolPortalsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, devToolPortalName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable the default Dev Tool Portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param devToolPortalName The name of Dev Tool Portal.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    devToolPortalName: string,\n    options?: DevToolPortalsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      devToolPortalName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: DevToolPortalsListNextOptionalParams\n  ): Promise<DevToolPortalsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/DevToolPortals\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DevToolPortalResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/DevToolPortals/{devToolPortalName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DevToolPortalResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.devToolPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/DevToolPortals/{devToolPortalName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DevToolPortalResource\n    },\n    201: {\n      bodyMapper: Mappers.DevToolPortalResource\n    },\n    202: {\n      bodyMapper: Mappers.DevToolPortalResource\n    },\n    204: {\n      bodyMapper: Mappers.DevToolPortalResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.devToolPortalResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.devToolPortalName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/DevToolPortals/{devToolPortalName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.devToolPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DevToolPortalResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ContainerRegistries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ContainerRegistryResource,\n  ContainerRegistriesListNextOptionalParams,\n  ContainerRegistriesListOptionalParams,\n  ContainerRegistriesListResponse,\n  ContainerRegistriesGetOptionalParams,\n  ContainerRegistriesGetResponse,\n  ContainerRegistriesCreateOrUpdateOptionalParams,\n  ContainerRegistriesCreateOrUpdateResponse,\n  ContainerRegistriesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ContainerRegistries operations. */\nexport class ContainerRegistriesImpl implements ContainerRegistries {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ContainerRegistries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List container registries resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ContainerRegistriesListOptionalParams\n  ): PagedAsyncIterableIterator<ContainerRegistryResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ContainerRegistriesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ContainerRegistryResource[]> {\n    let result: ContainerRegistriesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ContainerRegistriesListOptionalParams\n  ): AsyncIterableIterator<ContainerRegistryResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List container registries resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ContainerRegistriesListOptionalParams\n  ): Promise<ContainerRegistriesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the container registries resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param containerRegistryName The name of the container registry.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    containerRegistryName: string,\n    options?: ContainerRegistriesGetOptionalParams\n  ): Promise<ContainerRegistriesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, containerRegistryName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update container registry resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param containerRegistryName The name of the container registry.\n   * @param containerRegistryResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    containerRegistryName: string,\n    containerRegistryResource: ContainerRegistryResource,\n    options?: ContainerRegistriesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ContainerRegistriesCreateOrUpdateResponse>,\n      ContainerRegistriesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ContainerRegistriesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        containerRegistryName,\n        containerRegistryResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ContainerRegistriesCreateOrUpdateResponse,\n      OperationState<ContainerRegistriesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update container registry resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param containerRegistryName The name of the container registry.\n   * @param containerRegistryResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    containerRegistryName: string,\n    containerRegistryResource: ContainerRegistryResource,\n    options?: ContainerRegistriesCreateOrUpdateOptionalParams\n  ): Promise<ContainerRegistriesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      containerRegistryName,\n      containerRegistryResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: ContainerRegistriesListNextOptionalParams\n  ): Promise<ContainerRegistriesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/containerRegistries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerRegistryResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/containerRegistries/{containerRegistryName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerRegistryResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.containerRegistryName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/containerRegistries/{containerRegistryName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerRegistryResource\n    },\n    201: {\n      bodyMapper: Mappers.ContainerRegistryResource\n    },\n    202: {\n      bodyMapper: Mappers.ContainerRegistryResource\n    },\n    204: {\n      bodyMapper: Mappers.ContainerRegistryResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.containerRegistryResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.containerRegistryName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContainerRegistryResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BuildServiceOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  BuildService,\n  BuildServiceListBuildServicesNextOptionalParams,\n  BuildServiceListBuildServicesOptionalParams,\n  BuildServiceListBuildServicesResponse,\n  Build,\n  BuildServiceListBuildsNextOptionalParams,\n  BuildServiceListBuildsOptionalParams,\n  BuildServiceListBuildsResponse,\n  BuildResult,\n  BuildServiceListBuildResultsNextOptionalParams,\n  BuildServiceListBuildResultsOptionalParams,\n  BuildServiceListBuildResultsResponse,\n  BuildServiceGetBuildServiceOptionalParams,\n  BuildServiceGetBuildServiceResponse,\n  BuildServiceCreateOrUpdateOptionalParams,\n  BuildServiceCreateOrUpdateResponse,\n  BuildServiceGetBuildOptionalParams,\n  BuildServiceGetBuildResponse,\n  BuildServiceCreateOrUpdateBuildOptionalParams,\n  BuildServiceCreateOrUpdateBuildResponse,\n  BuildServiceDeleteBuildOptionalParams,\n  BuildServiceGetBuildResultOptionalParams,\n  BuildServiceGetBuildResultResponse,\n  BuildServiceGetBuildResultLogOptionalParams,\n  BuildServiceGetBuildResultLogResponse,\n  BuildServiceGetResourceUploadUrlOptionalParams,\n  BuildServiceGetResourceUploadUrlResponse,\n  BuildServiceListSupportedBuildpacksOptionalParams,\n  BuildServiceListSupportedBuildpacksResponse,\n  BuildServiceGetSupportedBuildpackOptionalParams,\n  BuildServiceGetSupportedBuildpackResponse,\n  BuildServiceListSupportedStacksOptionalParams,\n  BuildServiceListSupportedStacksResponse,\n  BuildServiceGetSupportedStackOptionalParams,\n  BuildServiceGetSupportedStackResponse,\n  BuildServiceListBuildServicesNextResponse,\n  BuildServiceListBuildsNextResponse,\n  BuildServiceListBuildResultsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BuildServiceOperations operations. */\nexport class BuildServiceOperationsImpl implements BuildServiceOperations {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class BuildServiceOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List build services resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public listBuildServices(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildServiceListBuildServicesOptionalParams\n  ): PagedAsyncIterableIterator<BuildService> {\n    const iter = this.listBuildServicesPagingAll(\n      resourceGroupName,\n      serviceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBuildServicesPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBuildServicesPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildServiceListBuildServicesOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BuildService[]> {\n    let result: BuildServiceListBuildServicesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBuildServices(\n        resourceGroupName,\n        serviceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBuildServicesNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBuildServicesPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildServiceListBuildServicesOptionalParams\n  ): AsyncIterableIterator<BuildService> {\n    for await (const page of this.listBuildServicesPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List KPack builds.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  public listBuilds(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceListBuildsOptionalParams\n  ): PagedAsyncIterableIterator<Build> {\n    const iter = this.listBuildsPagingAll(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBuildsPagingPage(\n          resourceGroupName,\n          serviceName,\n          buildServiceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBuildsPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceListBuildsOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Build[]> {\n    let result: BuildServiceListBuildsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBuilds(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBuildsNext(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBuildsPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceListBuildsOptionalParams\n  ): AsyncIterableIterator<Build> {\n    for await (const page of this.listBuildsPagingPage(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List KPack build results.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param options The options parameters.\n   */\n  public listBuildResults(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceListBuildResultsOptionalParams\n  ): PagedAsyncIterableIterator<BuildResult> {\n    const iter = this.listBuildResultsPagingAll(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      buildName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBuildResultsPagingPage(\n          resourceGroupName,\n          serviceName,\n          buildServiceName,\n          buildName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBuildResultsPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceListBuildResultsOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BuildResult[]> {\n    let result: BuildServiceListBuildResultsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBuildResults(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBuildResultsNext(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBuildResultsPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceListBuildResultsOptionalParams\n  ): AsyncIterableIterator<BuildResult> {\n    for await (const page of this.listBuildResultsPagingPage(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      buildName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List build services resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _listBuildServices(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildServiceListBuildServicesOptionalParams\n  ): Promise<BuildServiceListBuildServicesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listBuildServicesOperationSpec\n    );\n  }\n\n  /**\n   * Get a build service resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  getBuildService(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceGetBuildServiceOptionalParams\n  ): Promise<BuildServiceGetBuildServiceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      getBuildServiceOperationSpec\n    );\n  }\n\n  /**\n   * Create a build service resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildService Parameters for the create operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildService: BuildService,\n    options?: BuildServiceCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<BuildServiceCreateOrUpdateResponse>,\n      BuildServiceCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BuildServiceCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildService,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      BuildServiceCreateOrUpdateResponse,\n      OperationState<BuildServiceCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a build service resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildService Parameters for the create operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildService: BuildService,\n    options?: BuildServiceCreateOrUpdateOptionalParams\n  ): Promise<BuildServiceCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      buildService,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List KPack builds.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  private _listBuilds(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceListBuildsOptionalParams\n  ): Promise<BuildServiceListBuildsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      listBuildsOperationSpec\n    );\n  }\n\n  /**\n   * Get a KPack build.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param options The options parameters.\n   */\n  getBuild(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceGetBuildOptionalParams\n  ): Promise<BuildServiceGetBuildResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, buildName, options },\n      getBuildOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a KPack build.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param build Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  createOrUpdateBuild(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    build: Build,\n    options?: BuildServiceCreateOrUpdateBuildOptionalParams\n  ): Promise<BuildServiceCreateOrUpdateBuildResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        build,\n        options\n      },\n      createOrUpdateBuildOperationSpec\n    );\n  }\n\n  /**\n   * delete a KPack build.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteBuild(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceDeleteBuildOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        options\n      },\n      spec: deleteBuildOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * delete a KPack build.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteBuildAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceDeleteBuildOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteBuild(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      buildName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List KPack build results.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param options The options parameters.\n   */\n  private _listBuildResults(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    options?: BuildServiceListBuildResultsOptionalParams\n  ): Promise<BuildServiceListBuildResultsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, buildName, options },\n      listBuildResultsOperationSpec\n    );\n  }\n\n  /**\n   * Get a KPack build result.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param buildResultName The name of the build result resource.\n   * @param options The options parameters.\n   */\n  getBuildResult(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    buildResultName: string,\n    options?: BuildServiceGetBuildResultOptionalParams\n  ): Promise<BuildServiceGetBuildResultResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        buildResultName,\n        options\n      },\n      getBuildResultOperationSpec\n    );\n  }\n\n  /**\n   * Get a KPack build result log download URL.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param buildResultName The name of the build result resource.\n   * @param options The options parameters.\n   */\n  getBuildResultLog(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    buildResultName: string,\n    options?: BuildServiceGetBuildResultLogOptionalParams\n  ): Promise<BuildServiceGetBuildResultLogResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        buildResultName,\n        options\n      },\n      getBuildResultLogOperationSpec\n    );\n  }\n\n  /**\n   * Get an resource upload URL for build service, which may be artifacts or source archive.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  getResourceUploadUrl(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceGetResourceUploadUrlOptionalParams\n  ): Promise<BuildServiceGetResourceUploadUrlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      getResourceUploadUrlOperationSpec\n    );\n  }\n\n  /**\n   * Get all supported buildpacks.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  listSupportedBuildpacks(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceListSupportedBuildpacksOptionalParams\n  ): Promise<BuildServiceListSupportedBuildpacksResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      listSupportedBuildpacksOperationSpec\n    );\n  }\n\n  /**\n   * Get the supported buildpack resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildpackName The name of the buildpack resource.\n   * @param options The options parameters.\n   */\n  getSupportedBuildpack(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildpackName: string,\n    options?: BuildServiceGetSupportedBuildpackOptionalParams\n  ): Promise<BuildServiceGetSupportedBuildpackResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildpackName,\n        options\n      },\n      getSupportedBuildpackOperationSpec\n    );\n  }\n\n  /**\n   * Get all supported stacks.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  listSupportedStacks(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceListSupportedStacksOptionalParams\n  ): Promise<BuildServiceListSupportedStacksResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      listSupportedStacksOperationSpec\n    );\n  }\n\n  /**\n   * Get the supported stack resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param stackName The name of the stack resource.\n   * @param options The options parameters.\n   */\n  getSupportedStack(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    stackName: string,\n    options?: BuildServiceGetSupportedStackOptionalParams\n  ): Promise<BuildServiceGetSupportedStackResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, stackName, options },\n      getSupportedStackOperationSpec\n    );\n  }\n\n  /**\n   * ListBuildServicesNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the ListBuildServices method.\n   * @param options The options parameters.\n   */\n  private _listBuildServicesNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: BuildServiceListBuildServicesNextOptionalParams\n  ): Promise<BuildServiceListBuildServicesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listBuildServicesNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBuildsNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param nextLink The nextLink from the previous successful call to the ListBuilds method.\n   * @param options The options parameters.\n   */\n  private _listBuildsNext(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    nextLink: string,\n    options?: BuildServiceListBuildsNextOptionalParams\n  ): Promise<BuildServiceListBuildsNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, nextLink, options },\n      listBuildsNextOperationSpec\n    );\n  }\n\n  /**\n   * ListBuildResultsNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param buildName The name of the build resource.\n   * @param nextLink The nextLink from the previous successful call to the ListBuildResults method.\n   * @param options The options parameters.\n   */\n  private _listBuildResultsNext(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    buildName: string,\n    nextLink: string,\n    options?: BuildServiceListBuildResultsNextOptionalParams\n  ): Promise<BuildServiceListBuildResultsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        buildName,\n        nextLink,\n        options\n      },\n      listBuildResultsNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBuildServicesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildServiceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBuildServiceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildService\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildService\n    },\n    201: {\n      bodyMapper: Mappers.BuildService\n    },\n    202: {\n      bodyMapper: Mappers.BuildService\n    },\n    204: {\n      bodyMapper: Mappers.BuildService\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.buildService,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBuildsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBuildOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Build\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateBuildOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Build\n    },\n    201: {\n      bodyMapper: Mappers.Build\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.build,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteBuildOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBuildResultsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildResultCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBuildResultOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results/{buildResultName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildName,\n    Parameters.buildResultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBuildResultLogOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builds/{buildName}/results/{buildResultName}/getLogFileUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildResultLog\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildName,\n    Parameters.buildResultName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getResourceUploadUrlOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/getResourceUploadUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUploadDefinition\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSupportedBuildpacksOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedBuildpacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SupportedBuildpacksCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSupportedBuildpackOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedBuildpacks/{buildpackName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SupportedBuildpackResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.buildpackName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSupportedStacksOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedStacks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SupportedStacksCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSupportedStackOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/supportedStacks/{stackName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SupportedStackResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.stackName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBuildServicesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildServiceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBuildsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBuildResultsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildResultCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.buildServiceName,\n    Parameters.buildName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BuildpackBinding } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  BuildpackBindingResource,\n  BuildpackBindingListForClusterNextOptionalParams,\n  BuildpackBindingListForClusterOptionalParams,\n  BuildpackBindingListForClusterResponse,\n  BuildpackBindingListNextOptionalParams,\n  BuildpackBindingListOptionalParams,\n  BuildpackBindingListResponse,\n  BuildpackBindingGetOptionalParams,\n  BuildpackBindingGetResponse,\n  BuildpackBindingCreateOrUpdateOptionalParams,\n  BuildpackBindingCreateOrUpdateResponse,\n  BuildpackBindingDeleteOptionalParams,\n  BuildpackBindingListForClusterNextResponse,\n  BuildpackBindingListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BuildpackBinding operations. */\nexport class BuildpackBindingImpl implements BuildpackBinding {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class BuildpackBinding class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get collection of buildpack bindings under all builders.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public listForCluster(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildpackBindingListForClusterOptionalParams\n  ): PagedAsyncIterableIterator<BuildpackBindingResource> {\n    const iter = this.listForClusterPagingAll(\n      resourceGroupName,\n      serviceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForClusterPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForClusterPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildpackBindingListForClusterOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BuildpackBindingResource[]> {\n    let result: BuildpackBindingListForClusterResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForCluster(\n        resourceGroupName,\n        serviceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForClusterNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForClusterPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildpackBindingListForClusterOptionalParams\n  ): AsyncIterableIterator<BuildpackBindingResource> {\n    for await (const page of this.listForClusterPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handles requests to list all buildpack bindings in a builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildpackBindingListOptionalParams\n  ): PagedAsyncIterableIterator<BuildpackBindingResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      builderName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          buildServiceName,\n          builderName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildpackBindingListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BuildpackBindingResource[]> {\n    let result: BuildpackBindingListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildpackBindingListOptionalParams\n  ): AsyncIterableIterator<BuildpackBindingResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      builderName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get collection of buildpack bindings under all builders.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _listForCluster(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: BuildpackBindingListForClusterOptionalParams\n  ): Promise<BuildpackBindingListForClusterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listForClusterOperationSpec\n    );\n  }\n\n  /**\n   * Get a buildpack binding by name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param buildpackBindingName The name of the Buildpack Binding Name\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    buildpackBindingName: string,\n    options?: BuildpackBindingGetOptionalParams\n  ): Promise<BuildpackBindingGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        buildpackBindingName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a buildpack binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param buildpackBindingName The name of the Buildpack Binding Name\n   * @param buildpackBinding The target buildpack binding for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    buildpackBindingName: string,\n    buildpackBinding: BuildpackBindingResource,\n    options?: BuildpackBindingCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<BuildpackBindingCreateOrUpdateResponse>,\n      BuildpackBindingCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BuildpackBindingCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        buildpackBindingName,\n        buildpackBinding,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      BuildpackBindingCreateOrUpdateResponse,\n      OperationState<BuildpackBindingCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a buildpack binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param buildpackBindingName The name of the Buildpack Binding Name\n   * @param buildpackBinding The target buildpack binding for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    buildpackBindingName: string,\n    buildpackBinding: BuildpackBindingResource,\n    options?: BuildpackBindingCreateOrUpdateOptionalParams\n  ): Promise<BuildpackBindingCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      builderName,\n      buildpackBindingName,\n      buildpackBinding,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to delete a Buildpack Binding\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param buildpackBindingName The name of the Buildpack Binding Name\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    buildpackBindingName: string,\n    options?: BuildpackBindingDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        buildpackBindingName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to delete a Buildpack Binding\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param buildpackBindingName The name of the Buildpack Binding Name\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    buildpackBindingName: string,\n    options?: BuildpackBindingDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      builderName,\n      buildpackBindingName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all buildpack bindings in a builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildpackBindingListOptionalParams\n  ): Promise<BuildpackBindingListResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        options\n      },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListForClusterNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the ListForCluster method.\n   * @param options The options parameters.\n   */\n  private _listForClusterNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: BuildpackBindingListForClusterNextOptionalParams\n  ): Promise<BuildpackBindingListForClusterNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listForClusterNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    nextLink: string,\n    options?: BuildpackBindingListNextOptionalParams\n  ): Promise<BuildpackBindingListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        nextLink,\n        options\n      },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listForClusterOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildpackBindings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildpackBindingResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings/{buildpackBindingName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildpackBindingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName,\n    Parameters.buildpackBindingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings/{buildpackBindingName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildpackBindingResource\n    },\n    201: {\n      bodyMapper: Mappers.BuildpackBindingResource\n    },\n    202: {\n      bodyMapper: Mappers.BuildpackBindingResource\n    },\n    204: {\n      bodyMapper: Mappers.BuildpackBindingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.buildpackBinding,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName,\n    Parameters.buildpackBindingName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings/{buildpackBindingName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName,\n    Parameters.buildpackBindingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/buildpackBindings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildpackBindingResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForClusterNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildpackBindingResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildpackBindingResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.buildServiceName,\n    Parameters.builderName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BuildServiceBuilder } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  BuilderResource,\n  BuildServiceBuilderListNextOptionalParams,\n  BuildServiceBuilderListOptionalParams,\n  BuildServiceBuilderListResponse,\n  BuildServiceBuilderGetOptionalParams,\n  BuildServiceBuilderGetResponse,\n  BuildServiceBuilderCreateOrUpdateOptionalParams,\n  BuildServiceBuilderCreateOrUpdateResponse,\n  BuildServiceBuilderDeleteOptionalParams,\n  BuildServiceBuilderListDeploymentsOptionalParams,\n  BuildServiceBuilderListDeploymentsResponse,\n  BuildServiceBuilderListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BuildServiceBuilder operations. */\nexport class BuildServiceBuilderImpl implements BuildServiceBuilder {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class BuildServiceBuilder class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List KPack builders result.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceBuilderListOptionalParams\n  ): PagedAsyncIterableIterator<BuilderResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          buildServiceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceBuilderListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BuilderResource[]> {\n    let result: BuildServiceBuilderListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceBuilderListOptionalParams\n  ): AsyncIterableIterator<BuilderResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a KPack builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildServiceBuilderGetOptionalParams\n  ): Promise<BuildServiceBuilderGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update a KPack builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param builderResource The target builder for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    builderResource: BuilderResource,\n    options?: BuildServiceBuilderCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<BuildServiceBuilderCreateOrUpdateResponse>,\n      BuildServiceBuilderCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BuildServiceBuilderCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        builderResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      BuildServiceBuilderCreateOrUpdateResponse,\n      OperationState<BuildServiceBuilderCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update a KPack builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param builderResource The target builder for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    builderResource: BuilderResource,\n    options?: BuildServiceBuilderCreateOrUpdateOptionalParams\n  ): Promise<BuildServiceBuilderCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      builderName,\n      builderResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete a KPack builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildServiceBuilderDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete a KPack builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildServiceBuilderDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      builderName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List KPack builders result.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceBuilderListOptionalParams\n  ): Promise<BuildServiceBuilderListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * List deployments that are using the builder.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param builderName The name of the builder resource.\n   * @param options The options parameters.\n   */\n  listDeployments(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    builderName: string,\n    options?: BuildServiceBuilderListDeploymentsOptionalParams\n  ): Promise<BuildServiceBuilderListDeploymentsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        builderName,\n        options\n      },\n      listDeploymentsOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    nextLink: string,\n    options?: BuildServiceBuilderListNextOptionalParams\n  ): Promise<BuildServiceBuilderListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuilderResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuilderResource\n    },\n    201: {\n      bodyMapper: Mappers.BuilderResource\n    },\n    202: {\n      bodyMapper: Mappers.BuilderResource\n    },\n    204: {\n      bodyMapper: Mappers.BuilderResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.builderResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuilderResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listDeploymentsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/builders/{builderName}/listUsingDeployments\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentList\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.builderName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuilderResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BuildServiceAgentPool } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  BuildServiceAgentPoolResource,\n  BuildServiceAgentPoolListNextOptionalParams,\n  BuildServiceAgentPoolListOptionalParams,\n  BuildServiceAgentPoolListResponse,\n  BuildServiceAgentPoolGetOptionalParams,\n  BuildServiceAgentPoolGetResponse,\n  BuildServiceAgentPoolUpdatePutOptionalParams,\n  BuildServiceAgentPoolUpdatePutResponse,\n  BuildServiceAgentPoolListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BuildServiceAgentPool operations. */\nexport class BuildServiceAgentPoolImpl implements BuildServiceAgentPool {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class BuildServiceAgentPool class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List build service agent pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceAgentPoolListOptionalParams\n  ): PagedAsyncIterableIterator<BuildServiceAgentPoolResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          buildServiceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceAgentPoolListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BuildServiceAgentPoolResource[]> {\n    let result: BuildServiceAgentPoolListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceAgentPoolListOptionalParams\n  ): AsyncIterableIterator<BuildServiceAgentPoolResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List build service agent pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    options?: BuildServiceAgentPoolListOptionalParams\n  ): Promise<BuildServiceAgentPoolListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get build service agent pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param agentPoolName The name of the build service agent pool resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    agentPoolName: string,\n    options?: BuildServiceAgentPoolGetOptionalParams\n  ): Promise<BuildServiceAgentPoolGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        agentPoolName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update build service agent pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param agentPoolName The name of the build service agent pool resource.\n   * @param agentPoolResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePut(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    agentPoolName: string,\n    agentPoolResource: BuildServiceAgentPoolResource,\n    options?: BuildServiceAgentPoolUpdatePutOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<BuildServiceAgentPoolUpdatePutResponse>,\n      BuildServiceAgentPoolUpdatePutResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BuildServiceAgentPoolUpdatePutResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        buildServiceName,\n        agentPoolName,\n        agentPoolResource,\n        options\n      },\n      spec: updatePutOperationSpec\n    });\n    const poller = await createHttpPoller<\n      BuildServiceAgentPoolUpdatePutResponse,\n      OperationState<BuildServiceAgentPoolUpdatePutResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update build service agent pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param agentPoolName The name of the build service agent pool resource.\n   * @param agentPoolResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePutAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    agentPoolName: string,\n    agentPoolResource: BuildServiceAgentPoolResource,\n    options?: BuildServiceAgentPoolUpdatePutOptionalParams\n  ): Promise<BuildServiceAgentPoolUpdatePutResponse> {\n    const poller = await this.beginUpdatePut(\n      resourceGroupName,\n      serviceName,\n      buildServiceName,\n      agentPoolName,\n      agentPoolResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param buildServiceName The name of the build service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    buildServiceName: string,\n    nextLink: string,\n    options?: BuildServiceAgentPoolListNextOptionalParams\n  ): Promise<BuildServiceAgentPoolListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, buildServiceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools/{agentPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.agentPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updatePutOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/buildServices/{buildServiceName}/agentPools/{agentPoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResource\n    },\n    201: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResource\n    },\n    202: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResource\n    },\n    204: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.agentPoolResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.buildServiceName,\n    Parameters.agentPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BuildServiceAgentPoolResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.buildServiceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MonitoringSettings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  MonitoringSettingsGetOptionalParams,\n  MonitoringSettingsGetResponse,\n  MonitoringSettingResource,\n  MonitoringSettingsUpdatePutOptionalParams,\n  MonitoringSettingsUpdatePutResponse,\n  MonitoringSettingsUpdatePatchOptionalParams,\n  MonitoringSettingsUpdatePatchResponse\n} from \"../models\";\n\n/** Class containing MonitoringSettings operations. */\nexport class MonitoringSettingsImpl implements MonitoringSettings {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class MonitoringSettings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the Monitoring Setting and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: MonitoringSettingsGetOptionalParams\n  ): Promise<MonitoringSettingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update the Monitoring Setting.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param monitoringSettingResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePut(\n    resourceGroupName: string,\n    serviceName: string,\n    monitoringSettingResource: MonitoringSettingResource,\n    options?: MonitoringSettingsUpdatePutOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<MonitoringSettingsUpdatePutResponse>,\n      MonitoringSettingsUpdatePutResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<MonitoringSettingsUpdatePutResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        monitoringSettingResource,\n        options\n      },\n      spec: updatePutOperationSpec\n    });\n    const poller = await createHttpPoller<\n      MonitoringSettingsUpdatePutResponse,\n      OperationState<MonitoringSettingsUpdatePutResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update the Monitoring Setting.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param monitoringSettingResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePutAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    monitoringSettingResource: MonitoringSettingResource,\n    options?: MonitoringSettingsUpdatePutOptionalParams\n  ): Promise<MonitoringSettingsUpdatePutResponse> {\n    const poller = await this.beginUpdatePut(\n      resourceGroupName,\n      serviceName,\n      monitoringSettingResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update the Monitoring Setting.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param monitoringSettingResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePatch(\n    resourceGroupName: string,\n    serviceName: string,\n    monitoringSettingResource: MonitoringSettingResource,\n    options?: MonitoringSettingsUpdatePatchOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<MonitoringSettingsUpdatePatchResponse>,\n      MonitoringSettingsUpdatePatchResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<MonitoringSettingsUpdatePatchResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        monitoringSettingResource,\n        options\n      },\n      spec: updatePatchOperationSpec\n    });\n    const poller = await createHttpPoller<\n      MonitoringSettingsUpdatePatchResponse,\n      OperationState<MonitoringSettingsUpdatePatchResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update the Monitoring Setting.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param monitoringSettingResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdatePatchAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    monitoringSettingResource: MonitoringSettingResource,\n    options?: MonitoringSettingsUpdatePatchOptionalParams\n  ): Promise<MonitoringSettingsUpdatePatchResponse> {\n    const poller = await this.beginUpdatePatch(\n      resourceGroupName,\n      serviceName,\n      monitoringSettingResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/monitoringSettings/default\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updatePutOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/monitoringSettings/default\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    201: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    202: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    204: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.monitoringSettingResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updatePatchOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/monitoringSettings/default\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    201: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    202: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    204: {\n      bodyMapper: Mappers.MonitoringSettingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.monitoringSettingResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Apps } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  AppResource,\n  AppsListNextOptionalParams,\n  AppsListOptionalParams,\n  AppsListResponse,\n  AppsGetOptionalParams,\n  AppsGetResponse,\n  AppsCreateOrUpdateOptionalParams,\n  AppsCreateOrUpdateResponse,\n  AppsDeleteOptionalParams,\n  AppsUpdateOptionalParams,\n  AppsUpdateResponse,\n  AppsGetResourceUploadUrlOptionalParams,\n  AppsGetResourceUploadUrlResponse,\n  ActiveDeploymentCollection,\n  AppsSetActiveDeploymentsOptionalParams,\n  AppsSetActiveDeploymentsResponse,\n  CustomDomainValidatePayload,\n  AppsValidateDomainOptionalParams,\n  AppsValidateDomainResponse,\n  AppsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Apps operations. */\nexport class AppsImpl implements Apps {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Apps class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: AppsListOptionalParams\n  ): PagedAsyncIterableIterator<AppResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: AppsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<AppResource[]> {\n    let result: AppsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: AppsListOptionalParams\n  ): AsyncIterableIterator<AppResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get an App and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: AppsGetOptionalParams\n  ): Promise<AppsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a new App or update an exiting App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param appResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    appResource: AppResource,\n    options?: AppsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppsCreateOrUpdateResponse>,\n      AppsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AppsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, appName, appResource, options },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      AppsCreateOrUpdateResponse,\n      OperationState<AppsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a new App or update an exiting App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param appResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    appResource: AppResource,\n    options?: AppsCreateOrUpdateOptionalParams\n  ): Promise<AppsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      appResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to delete an App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: AppsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, appName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to delete an App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: AppsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to update an exiting App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param appResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    appResource: AppResource,\n    options?: AppsUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<OperationState<AppsUpdateResponse>, AppsUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AppsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, appName, appResource, options },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      AppsUpdateResponse,\n      OperationState<AppsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to update an exiting App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param appResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    appResource: AppResource,\n    options?: AppsUpdateOptionalParams\n  ): Promise<AppsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      appResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: AppsListOptionalParams\n  ): Promise<AppsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get an resource upload URL for an App, which may be artifacts or source archive.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  getResourceUploadUrl(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: AppsGetResourceUploadUrlOptionalParams\n  ): Promise<AppsGetResourceUploadUrlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, options },\n      getResourceUploadUrlOperationSpec\n    );\n  }\n\n  /**\n   * Set existing Deployment under the app as active\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param activeDeploymentCollection A list of Deployment name to be active.\n   * @param options The options parameters.\n   */\n  async beginSetActiveDeployments(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    activeDeploymentCollection: ActiveDeploymentCollection,\n    options?: AppsSetActiveDeploymentsOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<AppsSetActiveDeploymentsResponse>,\n      AppsSetActiveDeploymentsResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<AppsSetActiveDeploymentsResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        activeDeploymentCollection,\n        options\n      },\n      spec: setActiveDeploymentsOperationSpec\n    });\n    const poller = await createHttpPoller<\n      AppsSetActiveDeploymentsResponse,\n      OperationState<AppsSetActiveDeploymentsResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Set existing Deployment under the app as active\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param activeDeploymentCollection A list of Deployment name to be active.\n   * @param options The options parameters.\n   */\n  async beginSetActiveDeploymentsAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    activeDeploymentCollection: ActiveDeploymentCollection,\n    options?: AppsSetActiveDeploymentsOptionalParams\n  ): Promise<AppsSetActiveDeploymentsResponse> {\n    const poller = await this.beginSetActiveDeployments(\n      resourceGroupName,\n      serviceName,\n      appName,\n      activeDeploymentCollection,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Check the resource name is valid as well as not in use.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param validatePayload Custom domain payload to be validated\n   * @param options The options parameters.\n   */\n  validateDomain(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    validatePayload: CustomDomainValidatePayload,\n    options?: AppsValidateDomainOptionalParams\n  ): Promise<AppsValidateDomainResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, validatePayload, options },\n      validateDomainOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: AppsListNextOptionalParams\n  ): Promise<AppsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.syncStatus],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppResource\n    },\n    201: {\n      bodyMapper: Mappers.AppResource\n    },\n    202: {\n      bodyMapper: Mappers.AppResource\n    },\n    204: {\n      bodyMapper: Mappers.AppResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.appResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppResource\n    },\n    201: {\n      bodyMapper: Mappers.AppResource\n    },\n    202: {\n      bodyMapper: Mappers.AppResource\n    },\n    204: {\n      bodyMapper: Mappers.AppResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.appResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getResourceUploadUrlOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/getResourceUploadUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceUploadDefinition\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst setActiveDeploymentsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/setActiveDeployments\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppResource\n    },\n    201: {\n      bodyMapper: Mappers.AppResource\n    },\n    202: {\n      bodyMapper: Mappers.AppResource\n    },\n    204: {\n      bodyMapper: Mappers.AppResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.activeDeploymentCollection,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst validateDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/validateDomain\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.validatePayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AppResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Bindings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  BindingResource,\n  BindingsListNextOptionalParams,\n  BindingsListOptionalParams,\n  BindingsListResponse,\n  BindingsGetOptionalParams,\n  BindingsGetResponse,\n  BindingsCreateOrUpdateOptionalParams,\n  BindingsCreateOrUpdateResponse,\n  BindingsDeleteOptionalParams,\n  BindingsUpdateOptionalParams,\n  BindingsUpdateResponse,\n  BindingsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Bindings operations. */\nexport class BindingsImpl implements Bindings {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Bindings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in an App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: BindingsListOptionalParams\n  ): PagedAsyncIterableIterator<BindingResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          appName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: BindingsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BindingResource[]> {\n    let result: BindingsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        appName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        appName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: BindingsListOptionalParams\n  ): AsyncIterableIterator<BindingResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a Binding and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    options?: BindingsGetOptionalParams\n  ): Promise<BindingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, bindingName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a new Binding or update an exiting Binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param bindingResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    bindingResource: BindingResource,\n    options?: BindingsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<BindingsCreateOrUpdateResponse>,\n      BindingsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BindingsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        bindingName,\n        bindingResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      BindingsCreateOrUpdateResponse,\n      OperationState<BindingsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a new Binding or update an exiting Binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param bindingResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    bindingResource: BindingResource,\n    options?: BindingsCreateOrUpdateOptionalParams\n  ): Promise<BindingsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      bindingName,\n      bindingResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to delete a Binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    options?: BindingsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, appName, bindingName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to delete a Binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    options?: BindingsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      appName,\n      bindingName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to update an exiting Binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param bindingResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    bindingResource: BindingResource,\n    options?: BindingsUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<BindingsUpdateResponse>,\n      BindingsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BindingsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        bindingName,\n        bindingResource,\n        options\n      },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      BindingsUpdateResponse,\n      OperationState<BindingsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to update an exiting Binding.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param bindingName The name of the Binding resource.\n   * @param bindingResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    bindingName: string,\n    bindingResource: BindingResource,\n    options?: BindingsUpdateOptionalParams\n  ): Promise<BindingsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      bindingName,\n      bindingResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in an App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: BindingsListOptionalParams\n  ): Promise<BindingsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    nextLink: string,\n    options?: BindingsListNextOptionalParams\n  ): Promise<BindingsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BindingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.bindingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BindingResource\n    },\n    201: {\n      bodyMapper: Mappers.BindingResource\n    },\n    202: {\n      bodyMapper: Mappers.BindingResource\n    },\n    204: {\n      bodyMapper: Mappers.BindingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.bindingResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.bindingName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.bindingName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings/{bindingName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BindingResource\n    },\n    201: {\n      bodyMapper: Mappers.BindingResource\n    },\n    202: {\n      bodyMapper: Mappers.BindingResource\n    },\n    204: {\n      bodyMapper: Mappers.BindingResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.bindingResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.bindingName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/bindings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BindingResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BindingResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Storages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  StorageResource,\n  StoragesListNextOptionalParams,\n  StoragesListOptionalParams,\n  StoragesListResponse,\n  StoragesGetOptionalParams,\n  StoragesGetResponse,\n  StoragesCreateOrUpdateOptionalParams,\n  StoragesCreateOrUpdateResponse,\n  StoragesDeleteOptionalParams,\n  StoragesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Storages operations. */\nexport class StoragesImpl implements Storages {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Storages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all the storages of one Azure Spring Apps resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: StoragesListOptionalParams\n  ): PagedAsyncIterableIterator<StorageResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: StoragesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<StorageResource[]> {\n    let result: StoragesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: StoragesListOptionalParams\n  ): AsyncIterableIterator<StorageResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the storage resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param storageName The name of the storage resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    storageName: string,\n    options?: StoragesGetOptionalParams\n  ): Promise<StoragesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, storageName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update storage resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param storageName The name of the storage resource.\n   * @param storageResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    storageName: string,\n    storageResource: StorageResource,\n    options?: StoragesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<StoragesCreateOrUpdateResponse>,\n      StoragesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<StoragesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        storageName,\n        storageResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      StoragesCreateOrUpdateResponse,\n      OperationState<StoragesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update storage resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param storageName The name of the storage resource.\n   * @param storageResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    storageName: string,\n    storageResource: StorageResource,\n    options?: StoragesCreateOrUpdateOptionalParams\n  ): Promise<StoragesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      storageName,\n      storageResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the storage resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param storageName The name of the storage resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    storageName: string,\n    options?: StoragesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, storageName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the storage resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param storageName The name of the storage resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    storageName: string,\n    options?: StoragesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      storageName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List all the storages of one Azure Spring Apps resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: StoragesListOptionalParams\n  ): Promise<StoragesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: StoragesListNextOptionalParams\n  ): Promise<StoragesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages/{storageName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.storageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages/{storageName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageResource\n    },\n    201: {\n      bodyMapper: Mappers.StorageResource\n    },\n    202: {\n      bodyMapper: Mappers.StorageResource\n    },\n    204: {\n      bodyMapper: Mappers.StorageResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.storageResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.storageName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages/{storageName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.storageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/storages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Certificates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  CertificateResource,\n  CertificatesListNextOptionalParams,\n  CertificatesListOptionalParams,\n  CertificatesListResponse,\n  CertificatesGetOptionalParams,\n  CertificatesGetResponse,\n  CertificatesCreateOrUpdateOptionalParams,\n  CertificatesCreateOrUpdateResponse,\n  CertificatesDeleteOptionalParams,\n  CertificatesListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Certificates operations. */\nexport class CertificatesImpl implements Certificates {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Certificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List all the certificates of one user.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: CertificatesListOptionalParams\n  ): PagedAsyncIterableIterator<CertificateResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: CertificatesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CertificateResource[]> {\n    let result: CertificatesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: CertificatesListOptionalParams\n  ): AsyncIterableIterator<CertificateResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the certificate resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param certificateName The name of the certificate resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    certificateName: string,\n    options?: CertificatesGetOptionalParams\n  ): Promise<CertificatesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, certificateName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update certificate resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param certificateName The name of the certificate resource.\n   * @param certificateResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    certificateName: string,\n    certificateResource: CertificateResource,\n    options?: CertificatesCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CertificatesCreateOrUpdateResponse>,\n      CertificatesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CertificatesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        certificateName,\n        certificateResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      CertificatesCreateOrUpdateResponse,\n      OperationState<CertificatesCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update certificate resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param certificateName The name of the certificate resource.\n   * @param certificateResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    certificateName: string,\n    certificateResource: CertificateResource,\n    options?: CertificatesCreateOrUpdateOptionalParams\n  ): Promise<CertificatesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      certificateName,\n      certificateResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the certificate resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param certificateName The name of the certificate resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    certificateName: string,\n    options?: CertificatesDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, certificateName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the certificate resource.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param certificateName The name of the certificate resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    certificateName: string,\n    options?: CertificatesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      certificateName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List all the certificates of one user.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: CertificatesListOptionalParams\n  ): Promise<CertificatesListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: CertificatesListNextOptionalParams\n  ): Promise<CertificatesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates/{certificateName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates/{certificateName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateResource\n    },\n    201: {\n      bodyMapper: Mappers.CertificateResource\n    },\n    202: {\n      bodyMapper: Mappers.CertificateResource\n    },\n    204: {\n      bodyMapper: Mappers.CertificateResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.certificateResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates/{certificateName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.certificateName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/certificates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CertificateResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { CustomDomains } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  CustomDomainResource,\n  CustomDomainsListNextOptionalParams,\n  CustomDomainsListOptionalParams,\n  CustomDomainsListResponse,\n  CustomDomainsGetOptionalParams,\n  CustomDomainsGetResponse,\n  CustomDomainsCreateOrUpdateOptionalParams,\n  CustomDomainsCreateOrUpdateResponse,\n  CustomDomainsDeleteOptionalParams,\n  CustomDomainsUpdateOptionalParams,\n  CustomDomainsUpdateResponse,\n  CustomDomainsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CustomDomains operations. */\nexport class CustomDomainsImpl implements CustomDomains {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class CustomDomains class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the custom domains of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: CustomDomainsListOptionalParams\n  ): PagedAsyncIterableIterator<CustomDomainResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          appName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: CustomDomainsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CustomDomainResource[]> {\n    let result: CustomDomainsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        appName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        appName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: CustomDomainsListOptionalParams\n  ): AsyncIterableIterator<CustomDomainResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    options?: CustomDomainsGetOptionalParams\n  ): Promise<CustomDomainsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, domainName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param domainResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    domainResource: CustomDomainResource,\n    options?: CustomDomainsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CustomDomainsCreateOrUpdateResponse>,\n      CustomDomainsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CustomDomainsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        domainName,\n        domainResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      CustomDomainsCreateOrUpdateResponse,\n      OperationState<CustomDomainsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param domainResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    domainResource: CustomDomainResource,\n    options?: CustomDomainsCreateOrUpdateOptionalParams\n  ): Promise<CustomDomainsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      domainName,\n      domainResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    options?: CustomDomainsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, appName, domainName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    options?: CustomDomainsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      appName,\n      domainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Update custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param domainResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    domainResource: CustomDomainResource,\n    options?: CustomDomainsUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CustomDomainsUpdateResponse>,\n      CustomDomainsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CustomDomainsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        domainName,\n        domainResource,\n        options\n      },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      CustomDomainsUpdateResponse,\n      OperationState<CustomDomainsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Update custom domain of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param domainName The name of the custom domain resource.\n   * @param domainResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    domainName: string,\n    domainResource: CustomDomainResource,\n    options?: CustomDomainsUpdateOptionalParams\n  ): Promise<CustomDomainsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      domainName,\n      domainResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List the custom domains of one lifecycle application.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: CustomDomainsListOptionalParams\n  ): Promise<CustomDomainsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    nextLink: string,\n    options?: CustomDomainsListNextOptionalParams\n  ): Promise<CustomDomainsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.domainName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    201: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    202: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    204: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.domainResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.domainName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.domainName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains/{domainName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    201: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    202: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    204: {\n      bodyMapper: Mappers.CustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.domainResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.domainName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/domains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Deployments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  DeploymentResource,\n  DeploymentsListNextOptionalParams,\n  DeploymentsListOptionalParams,\n  DeploymentsListResponse,\n  DeploymentsListForClusterNextOptionalParams,\n  DeploymentsListForClusterOptionalParams,\n  DeploymentsListForClusterResponse,\n  DeploymentsGetOptionalParams,\n  DeploymentsGetResponse,\n  DeploymentsCreateOrUpdateOptionalParams,\n  DeploymentsCreateOrUpdateResponse,\n  DeploymentsDeleteOptionalParams,\n  DeploymentsUpdateOptionalParams,\n  DeploymentsUpdateResponse,\n  DeploymentsStartOptionalParams,\n  DeploymentsStopOptionalParams,\n  DeploymentsRestartOptionalParams,\n  DeploymentsEnableRemoteDebuggingOptionalParams,\n  DeploymentsEnableRemoteDebuggingResponse,\n  DeploymentsDisableRemoteDebuggingOptionalParams,\n  DeploymentsDisableRemoteDebuggingResponse,\n  DeploymentsGetRemoteDebuggingConfigOptionalParams,\n  DeploymentsGetRemoteDebuggingConfigResponse,\n  DeploymentsGetLogFileUrlOptionalParams,\n  DeploymentsGetLogFileUrlResponse,\n  DiagnosticParameters,\n  DeploymentsGenerateHeapDumpOptionalParams,\n  DeploymentsGenerateThreadDumpOptionalParams,\n  DeploymentsStartJFROptionalParams,\n  DeploymentsListNextResponse,\n  DeploymentsListForClusterNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Deployments operations. */\nexport class DeploymentsImpl implements Deployments {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Deployments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in an App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: DeploymentsListOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          appName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: DeploymentsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentResource[]> {\n    let result: DeploymentsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        appName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        appName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: DeploymentsListOptionalParams\n  ): AsyncIterableIterator<DeploymentResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      appName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List deployments for a certain service\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public listForCluster(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DeploymentsListForClusterOptionalParams\n  ): PagedAsyncIterableIterator<DeploymentResource> {\n    const iter = this.listForClusterPagingAll(\n      resourceGroupName,\n      serviceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listForClusterPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listForClusterPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DeploymentsListForClusterOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeploymentResource[]> {\n    let result: DeploymentsListForClusterResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listForCluster(\n        resourceGroupName,\n        serviceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listForClusterNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listForClusterPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DeploymentsListForClusterOptionalParams\n  ): AsyncIterableIterator<DeploymentResource> {\n    for await (const page of this.listForClusterPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a Deployment and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsGetOptionalParams\n  ): Promise<DeploymentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, deploymentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a new Deployment or update an exiting Deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param deploymentResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    deploymentResource: DeploymentResource,\n    options?: DeploymentsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsCreateOrUpdateResponse>,\n      DeploymentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        deploymentResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsCreateOrUpdateResponse,\n      OperationState<DeploymentsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a new Deployment or update an exiting Deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param deploymentResource Parameters for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    deploymentResource: DeploymentResource,\n    options?: DeploymentsCreateOrUpdateOptionalParams\n  ): Promise<DeploymentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      deploymentResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to delete a Deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to delete a Deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to update an exiting Deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param deploymentResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    deploymentResource: DeploymentResource,\n    options?: DeploymentsUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsUpdateResponse>,\n      DeploymentsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        deploymentResource,\n        options\n      },\n      spec: updateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsUpdateResponse,\n      OperationState<DeploymentsUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to update an exiting Deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param deploymentResource Parameters for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    deploymentResource: DeploymentResource,\n    options?: DeploymentsUpdateOptionalParams\n  ): Promise<DeploymentsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      deploymentResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in an App.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    options?: DeploymentsListOptionalParams\n  ): Promise<DeploymentsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * List deployments for a certain service\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _listForCluster(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: DeploymentsListForClusterOptionalParams\n  ): Promise<DeploymentsListForClusterResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listForClusterOperationSpec\n    );\n  }\n\n  /**\n   * Start the deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginStart(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsStartOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        options\n      },\n      spec: startOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Start the deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginStartAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsStartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStart(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Stop the deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginStop(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsStopOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        options\n      },\n      spec: stopOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Stop the deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginStopAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsStopOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStop(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Restart the deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsRestartOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        options\n      },\n      spec: restartOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Restart the deployment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Enable remote debugging.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginEnableRemoteDebugging(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsEnableRemoteDebuggingOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsEnableRemoteDebuggingResponse>,\n      DeploymentsEnableRemoteDebuggingResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsEnableRemoteDebuggingResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        options\n      },\n      spec: enableRemoteDebuggingOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsEnableRemoteDebuggingResponse,\n      OperationState<DeploymentsEnableRemoteDebuggingResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Enable remote debugging.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginEnableRemoteDebuggingAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsEnableRemoteDebuggingOptionalParams\n  ): Promise<DeploymentsEnableRemoteDebuggingResponse> {\n    const poller = await this.beginEnableRemoteDebugging(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable remote debugging.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginDisableRemoteDebugging(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsDisableRemoteDebuggingOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<DeploymentsDisableRemoteDebuggingResponse>,\n      DeploymentsDisableRemoteDebuggingResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeploymentsDisableRemoteDebuggingResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        options\n      },\n      spec: disableRemoteDebuggingOperationSpec\n    });\n    const poller = await createHttpPoller<\n      DeploymentsDisableRemoteDebuggingResponse,\n      OperationState<DeploymentsDisableRemoteDebuggingResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable remote debugging.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  async beginDisableRemoteDebuggingAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsDisableRemoteDebuggingOptionalParams\n  ): Promise<DeploymentsDisableRemoteDebuggingResponse> {\n    const poller = await this.beginDisableRemoteDebugging(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get remote debugging config.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  getRemoteDebuggingConfig(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsGetRemoteDebuggingConfigOptionalParams\n  ): Promise<DeploymentsGetRemoteDebuggingConfigResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, deploymentName, options },\n      getRemoteDebuggingConfigOperationSpec\n    );\n  }\n\n  /**\n   * Get deployment log file URL\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param options The options parameters.\n   */\n  getLogFileUrl(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    options?: DeploymentsGetLogFileUrlOptionalParams\n  ): Promise<DeploymentsGetLogFileUrlResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, deploymentName, options },\n      getLogFileUrlOperationSpec\n    );\n  }\n\n  /**\n   * Generate Heap Dump\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param diagnosticParameters Parameters for the diagnostic operation\n   * @param options The options parameters.\n   */\n  async beginGenerateHeapDump(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    diagnosticParameters: DiagnosticParameters,\n    options?: DeploymentsGenerateHeapDumpOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        diagnosticParameters,\n        options\n      },\n      spec: generateHeapDumpOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Generate Heap Dump\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param diagnosticParameters Parameters for the diagnostic operation\n   * @param options The options parameters.\n   */\n  async beginGenerateHeapDumpAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    diagnosticParameters: DiagnosticParameters,\n    options?: DeploymentsGenerateHeapDumpOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginGenerateHeapDump(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      diagnosticParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Generate Thread Dump\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param diagnosticParameters Parameters for the diagnostic operation\n   * @param options The options parameters.\n   */\n  async beginGenerateThreadDump(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    diagnosticParameters: DiagnosticParameters,\n    options?: DeploymentsGenerateThreadDumpOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        diagnosticParameters,\n        options\n      },\n      spec: generateThreadDumpOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Generate Thread Dump\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param diagnosticParameters Parameters for the diagnostic operation\n   * @param options The options parameters.\n   */\n  async beginGenerateThreadDumpAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    diagnosticParameters: DiagnosticParameters,\n    options?: DeploymentsGenerateThreadDumpOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginGenerateThreadDump(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      diagnosticParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Start JFR\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param diagnosticParameters Parameters for the diagnostic operation\n   * @param options The options parameters.\n   */\n  async beginStartJFR(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    diagnosticParameters: DiagnosticParameters,\n    options?: DeploymentsStartJFROptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        appName,\n        deploymentName,\n        diagnosticParameters,\n        options\n      },\n      spec: startJFROperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Start JFR\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param deploymentName The name of the Deployment resource.\n   * @param diagnosticParameters Parameters for the diagnostic operation\n   * @param options The options parameters.\n   */\n  async beginStartJFRAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    deploymentName: string,\n    diagnosticParameters: DiagnosticParameters,\n    options?: DeploymentsStartJFROptionalParams\n  ): Promise<void> {\n    const poller = await this.beginStartJFR(\n      resourceGroupName,\n      serviceName,\n      appName,\n      deploymentName,\n      diagnosticParameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param appName The name of the App resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    appName: string,\n    nextLink: string,\n    options?: DeploymentsListNextOptionalParams\n  ): Promise<DeploymentsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, appName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListForClusterNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the ListForCluster method.\n   * @param options The options parameters.\n   */\n  private _listForClusterNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: DeploymentsListForClusterNextOptionalParams\n  ): Promise<DeploymentsListForClusterNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listForClusterNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.deploymentResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    201: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    202: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    204: {\n      bodyMapper: Mappers.DeploymentResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.deploymentResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.version],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForClusterOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/deployments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.version],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst startOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst stopOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/stop\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableRemoteDebuggingOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/enableRemoteDebugging\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    201: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    202: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    204: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.remoteDebuggingPayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst disableRemoteDebuggingOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/disableRemoteDebugging\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    201: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    202: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    204: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getRemoteDebuggingConfigOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/getRemoteDebuggingConfig\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RemoteDebugging\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getLogFileUrlOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/getLogFileUrl\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogFileUrlResponse\n    },\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generateHeapDumpOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/generateHeapDump\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diagnosticParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst generateThreadDumpOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/generateThreadDump\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diagnosticParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst startJFROperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apps/{appName}/deployments/{deploymentName}/startJFR\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.diagnosticParameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.appName,\n    Parameters.deploymentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.appName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listForClusterNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeploymentResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  OperationDetail,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available REST API operations of the Microsoft.AppPlatform provider.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<OperationDetail> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OperationDetail[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<OperationDetail> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available REST API operations of the Microsoft.AppPlatform provider.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.AppPlatform/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailableOperations\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailableOperations\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { RuntimeVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  RuntimeVersionsListRuntimeVersionsOptionalParams,\n  RuntimeVersionsListRuntimeVersionsResponse\n} from \"../models\";\n\n/** Class containing RuntimeVersions operations. */\nexport class RuntimeVersionsImpl implements RuntimeVersions {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class RuntimeVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available runtime versions supported by Microsoft.AppPlatform provider.\n   * @param options The options parameters.\n   */\n  listRuntimeVersions(\n    options?: RuntimeVersionsListRuntimeVersionsOptionalParams\n  ): Promise<RuntimeVersionsListRuntimeVersionsResponse> {\n    return this.client.sendOperationRequest(\n      { options },\n      listRuntimeVersionsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listRuntimeVersionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.AppPlatform/runtimeVersions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AvailableRuntimeVersions\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Skus } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  ResourceSku,\n  SkusListNextOptionalParams,\n  SkusListOptionalParams,\n  SkusListResponse,\n  SkusListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Skus operations. */\nexport class SkusImpl implements Skus {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Skus class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available skus of the Microsoft.AppPlatform provider.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: SkusListOptionalParams\n  ): PagedAsyncIterableIterator<ResourceSku> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: SkusListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ResourceSku[]> {\n    let result: SkusListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: SkusListOptionalParams\n  ): AsyncIterableIterator<ResourceSku> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available skus of the Microsoft.AppPlatform provider.\n   * @param options The options parameters.\n   */\n  private _list(options?: SkusListOptionalParams): Promise<SkusListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: SkusListNextOptionalParams\n  ): Promise<SkusListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.AppPlatform/skus\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceSkuCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResourceSkuCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Gateways } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GatewayResource,\n  GatewaysListNextOptionalParams,\n  GatewaysListOptionalParams,\n  GatewaysListResponse,\n  GatewaysGetOptionalParams,\n  GatewaysGetResponse,\n  GatewaysCreateOrUpdateOptionalParams,\n  GatewaysCreateOrUpdateResponse,\n  SkuObject,\n  GatewaysUpdateCapacityOptionalParams,\n  GatewaysUpdateCapacityResponse,\n  GatewaysDeleteOptionalParams,\n  GatewaysListEnvSecretsOptionalParams,\n  GatewaysListEnvSecretsResponse,\n  GatewaysRestartOptionalParams,\n  CustomDomainValidatePayload,\n  GatewaysValidateDomainOptionalParams,\n  GatewaysValidateDomainResponse,\n  GatewaysListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Gateways operations. */\nexport class GatewaysImpl implements Gateways {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class Gateways class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: GatewaysListOptionalParams\n  ): PagedAsyncIterableIterator<GatewayResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: GatewaysListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<GatewayResource[]> {\n    let result: GatewaysListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: GatewaysListOptionalParams\n  ): AsyncIterableIterator<GatewayResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Spring Cloud Gateway and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewaysGetOptionalParams\n  ): Promise<GatewaysGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default Spring Cloud Gateway or update the existing Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param gatewayResource The gateway for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    gatewayResource: GatewayResource,\n    options?: GatewaysCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GatewaysCreateOrUpdateResponse>,\n      GatewaysCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GatewaysCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        gatewayResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GatewaysCreateOrUpdateResponse,\n      OperationState<GatewaysCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default Spring Cloud Gateway or update the existing Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param gatewayResource The gateway for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    gatewayResource: GatewayResource,\n    options?: GatewaysCreateOrUpdateOptionalParams\n  ): Promise<GatewaysCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      gatewayResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Operation to update an exiting Spring Cloud Gateway capacity.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param gatewayCapacityResource The gateway capacity for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateCapacity(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    gatewayCapacityResource: SkuObject,\n    options?: GatewaysUpdateCapacityOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GatewaysUpdateCapacityResponse>,\n      GatewaysUpdateCapacityResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GatewaysUpdateCapacityResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        gatewayCapacityResource,\n        options\n      },\n      spec: updateCapacityOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GatewaysUpdateCapacityResponse,\n      OperationState<GatewaysUpdateCapacityResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Operation to update an exiting Spring Cloud Gateway capacity.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param gatewayCapacityResource The gateway capacity for the update operation\n   * @param options The options parameters.\n   */\n  async beginUpdateCapacityAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    gatewayCapacityResource: SkuObject,\n    options?: GatewaysUpdateCapacityOptionalParams\n  ): Promise<GatewaysUpdateCapacityResponse> {\n    const poller = await this.beginUpdateCapacity(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      gatewayCapacityResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Disable the default Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewaysDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, gatewayName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable the default Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewaysDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List sensitive environment variables of Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  listEnvSecrets(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewaysListEnvSecretsOptionalParams\n  ): Promise<GatewaysListEnvSecretsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, options },\n      listEnvSecretsOperationSpec\n    );\n  }\n\n  /**\n   * Restart the Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  async beginRestart(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewaysRestartOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, gatewayName, options },\n      spec: restartOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      resourceLocationConfig: \"location\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Restart the Spring Cloud Gateway.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  async beginRestartAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewaysRestartOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRestart(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: GatewaysListOptionalParams\n  ): Promise<GatewaysListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Check the domains are valid as well as not in use.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param validatePayload Custom domain payload to be validated\n   * @param options The options parameters.\n   */\n  validateDomain(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    validatePayload: CustomDomainValidatePayload,\n    options?: GatewaysValidateDomainOptionalParams\n  ): Promise<GatewaysValidateDomainResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, validatePayload, options },\n      validateDomainOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: GatewaysListNextOptionalParams\n  ): Promise<GatewaysListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    201: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    202: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    204: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.gatewayResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateCapacityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    201: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    202: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    204: {\n      bodyMapper: Mappers.GatewayResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.gatewayCapacityResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listEnvSecretsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/listEnvSecrets\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"String\" } } }\n      }\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst restartOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/restart\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/validateDomain\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.validatePayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { GatewayRouteConfigs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GatewayRouteConfigResource,\n  GatewayRouteConfigsListNextOptionalParams,\n  GatewayRouteConfigsListOptionalParams,\n  GatewayRouteConfigsListResponse,\n  GatewayRouteConfigsGetOptionalParams,\n  GatewayRouteConfigsGetResponse,\n  GatewayRouteConfigsCreateOrUpdateOptionalParams,\n  GatewayRouteConfigsCreateOrUpdateResponse,\n  GatewayRouteConfigsDeleteOptionalParams,\n  GatewayRouteConfigsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GatewayRouteConfigs operations. */\nexport class GatewayRouteConfigsImpl implements GatewayRouteConfigs {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class GatewayRouteConfigs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handle requests to list all Spring Cloud Gateway route configs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayRouteConfigsListOptionalParams\n  ): PagedAsyncIterableIterator<GatewayRouteConfigResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          gatewayName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayRouteConfigsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<GatewayRouteConfigResource[]> {\n    let result: GatewayRouteConfigsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayRouteConfigsListOptionalParams\n  ): AsyncIterableIterator<GatewayRouteConfigResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Spring Cloud Gateway route configs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param routeConfigName The name of the Spring Cloud Gateway route config.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    routeConfigName: string,\n    options?: GatewayRouteConfigsGetOptionalParams\n  ): Promise<GatewayRouteConfigsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, routeConfigName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default Spring Cloud Gateway route configs or update the existing Spring Cloud Gateway\n   * route configs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param routeConfigName The name of the Spring Cloud Gateway route config.\n   * @param gatewayRouteConfigResource The Spring Cloud Gateway route config for the create or update\n   *                                   operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    routeConfigName: string,\n    gatewayRouteConfigResource: GatewayRouteConfigResource,\n    options?: GatewayRouteConfigsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GatewayRouteConfigsCreateOrUpdateResponse>,\n      GatewayRouteConfigsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GatewayRouteConfigsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        routeConfigName,\n        gatewayRouteConfigResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GatewayRouteConfigsCreateOrUpdateResponse,\n      OperationState<GatewayRouteConfigsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default Spring Cloud Gateway route configs or update the existing Spring Cloud Gateway\n   * route configs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param routeConfigName The name of the Spring Cloud Gateway route config.\n   * @param gatewayRouteConfigResource The Spring Cloud Gateway route config for the create or update\n   *                                   operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    routeConfigName: string,\n    gatewayRouteConfigResource: GatewayRouteConfigResource,\n    options?: GatewayRouteConfigsCreateOrUpdateOptionalParams\n  ): Promise<GatewayRouteConfigsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      routeConfigName,\n      gatewayRouteConfigResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the Spring Cloud Gateway route config.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param routeConfigName The name of the Spring Cloud Gateway route config.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    routeConfigName: string,\n    options?: GatewayRouteConfigsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        routeConfigName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the Spring Cloud Gateway route config.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param routeConfigName The name of the Spring Cloud Gateway route config.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    routeConfigName: string,\n    options?: GatewayRouteConfigsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      routeConfigName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handle requests to list all Spring Cloud Gateway route configs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayRouteConfigsListOptionalParams\n  ): Promise<GatewayRouteConfigsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    nextLink: string,\n    options?: GatewayRouteConfigsListNextOptionalParams\n  ): Promise<GatewayRouteConfigsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs/{routeConfigName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayRouteConfigResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName,\n    Parameters.routeConfigName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs/{routeConfigName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayRouteConfigResource\n    },\n    201: {\n      bodyMapper: Mappers.GatewayRouteConfigResource\n    },\n    202: {\n      bodyMapper: Mappers.GatewayRouteConfigResource\n    },\n    204: {\n      bodyMapper: Mappers.GatewayRouteConfigResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.gatewayRouteConfigResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName,\n    Parameters.routeConfigName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs/{routeConfigName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName,\n    Parameters.routeConfigName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/routeConfigs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayRouteConfigResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayRouteConfigResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { GatewayCustomDomains } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  GatewayCustomDomainResource,\n  GatewayCustomDomainsListNextOptionalParams,\n  GatewayCustomDomainsListOptionalParams,\n  GatewayCustomDomainsListResponse,\n  GatewayCustomDomainsGetOptionalParams,\n  GatewayCustomDomainsGetResponse,\n  GatewayCustomDomainsCreateOrUpdateOptionalParams,\n  GatewayCustomDomainsCreateOrUpdateResponse,\n  GatewayCustomDomainsDeleteOptionalParams,\n  GatewayCustomDomainsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GatewayCustomDomains operations. */\nexport class GatewayCustomDomainsImpl implements GatewayCustomDomains {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class GatewayCustomDomains class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handle requests to list all Spring Cloud Gateway custom domains.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayCustomDomainsListOptionalParams\n  ): PagedAsyncIterableIterator<GatewayCustomDomainResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          gatewayName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayCustomDomainsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<GatewayCustomDomainResource[]> {\n    let result: GatewayCustomDomainsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayCustomDomainsListOptionalParams\n  ): AsyncIterableIterator<GatewayCustomDomainResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the Spring Cloud Gateway custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param domainName The name of the Spring Cloud Gateway custom domain.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    domainName: string,\n    options?: GatewayCustomDomainsGetOptionalParams\n  ): Promise<GatewayCustomDomainsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, domainName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the Spring Cloud Gateway custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param domainName The name of the Spring Cloud Gateway custom domain.\n   * @param gatewayCustomDomainResource The gateway custom domain resource for the create or update\n   *                                    operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    domainName: string,\n    gatewayCustomDomainResource: GatewayCustomDomainResource,\n    options?: GatewayCustomDomainsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<GatewayCustomDomainsCreateOrUpdateResponse>,\n      GatewayCustomDomainsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<GatewayCustomDomainsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        domainName,\n        gatewayCustomDomainResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      GatewayCustomDomainsCreateOrUpdateResponse,\n      OperationState<GatewayCustomDomainsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update the Spring Cloud Gateway custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param domainName The name of the Spring Cloud Gateway custom domain.\n   * @param gatewayCustomDomainResource The gateway custom domain resource for the create or update\n   *                                    operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    domainName: string,\n    gatewayCustomDomainResource: GatewayCustomDomainResource,\n    options?: GatewayCustomDomainsCreateOrUpdateOptionalParams\n  ): Promise<GatewayCustomDomainsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      domainName,\n      gatewayCustomDomainResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the Spring Cloud Gateway custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param domainName The name of the Spring Cloud Gateway custom domain.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    domainName: string,\n    options?: GatewayCustomDomainsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        gatewayName,\n        domainName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the Spring Cloud Gateway custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param domainName The name of the Spring Cloud Gateway custom domain.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    domainName: string,\n    options?: GatewayCustomDomainsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      gatewayName,\n      domainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handle requests to list all Spring Cloud Gateway custom domains.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    options?: GatewayCustomDomainsListOptionalParams\n  ): Promise<GatewayCustomDomainsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param gatewayName The name of Spring Cloud Gateway.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    gatewayName: string,\n    nextLink: string,\n    options?: GatewayCustomDomainsListNextOptionalParams\n  ): Promise<GatewayCustomDomainsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, gatewayName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains/{domainName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayCustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.domainName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains/{domainName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayCustomDomainResource\n    },\n    201: {\n      bodyMapper: Mappers.GatewayCustomDomainResource\n    },\n    202: {\n      bodyMapper: Mappers.GatewayCustomDomainResource\n    },\n    204: {\n      bodyMapper: Mappers.GatewayCustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.gatewayCustomDomainResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.domainName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains/{domainName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.domainName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/gateways/{gatewayName}/domains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayCustomDomainResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GatewayCustomDomainResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.gatewayName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ApiPortals } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ApiPortalResource,\n  ApiPortalsListNextOptionalParams,\n  ApiPortalsListOptionalParams,\n  ApiPortalsListResponse,\n  ApiPortalsGetOptionalParams,\n  ApiPortalsGetResponse,\n  ApiPortalsCreateOrUpdateOptionalParams,\n  ApiPortalsCreateOrUpdateResponse,\n  ApiPortalsDeleteOptionalParams,\n  CustomDomainValidatePayload,\n  ApiPortalsValidateDomainOptionalParams,\n  ApiPortalsValidateDomainResponse,\n  ApiPortalsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ApiPortals operations. */\nexport class ApiPortalsImpl implements ApiPortals {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ApiPortals class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApiPortalsListOptionalParams\n  ): PagedAsyncIterableIterator<ApiPortalResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApiPortalsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ApiPortalResource[]> {\n    let result: ApiPortalsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApiPortalsListOptionalParams\n  ): AsyncIterableIterator<ApiPortalResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the API portal and its properties.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalsGetOptionalParams\n  ): Promise<ApiPortalsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, apiPortalName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create the default API portal or update the existing API portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param apiPortalResource The API portal for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    apiPortalResource: ApiPortalResource,\n    options?: ApiPortalsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ApiPortalsCreateOrUpdateResponse>,\n      ApiPortalsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ApiPortalsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        apiPortalName,\n        apiPortalResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ApiPortalsCreateOrUpdateResponse,\n      OperationState<ApiPortalsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create the default API portal or update the existing API portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param apiPortalResource The API portal for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    apiPortalResource: ApiPortalResource,\n    options?: ApiPortalsCreateOrUpdateOptionalParams\n  ): Promise<ApiPortalsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      apiPortalName,\n      apiPortalResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the default API portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: { resourceGroupName, serviceName, apiPortalName, options },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the default API portal.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      apiPortalName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handles requests to list all resources in a Service.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApiPortalsListOptionalParams\n  ): Promise<ApiPortalsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Check the domains are valid as well as not in use.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param validatePayload Custom domain payload to be validated\n   * @param options The options parameters.\n   */\n  validateDomain(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    validatePayload: CustomDomainValidatePayload,\n    options?: ApiPortalsValidateDomainOptionalParams\n  ): Promise<ApiPortalsValidateDomainResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        apiPortalName,\n        validatePayload,\n        options\n      },\n      validateDomainOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: ApiPortalsListNextOptionalParams\n  ): Promise<ApiPortalsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalResource\n    },\n    201: {\n      bodyMapper: Mappers.ApiPortalResource\n    },\n    202: {\n      bodyMapper: Mappers.ApiPortalResource\n    },\n    204: {\n      bodyMapper: Mappers.ApiPortalResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.apiPortalResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateDomainOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/validateDomain\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomDomainValidateResult\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.validatePayload,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ApiPortalCustomDomains } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ApiPortalCustomDomainResource,\n  ApiPortalCustomDomainsListNextOptionalParams,\n  ApiPortalCustomDomainsListOptionalParams,\n  ApiPortalCustomDomainsListResponse,\n  ApiPortalCustomDomainsGetOptionalParams,\n  ApiPortalCustomDomainsGetResponse,\n  ApiPortalCustomDomainsCreateOrUpdateOptionalParams,\n  ApiPortalCustomDomainsCreateOrUpdateResponse,\n  ApiPortalCustomDomainsDeleteOptionalParams,\n  ApiPortalCustomDomainsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ApiPortalCustomDomains operations. */\nexport class ApiPortalCustomDomainsImpl implements ApiPortalCustomDomains {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ApiPortalCustomDomains class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handle requests to list all API portal custom domains.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalCustomDomainsListOptionalParams\n  ): PagedAsyncIterableIterator<ApiPortalCustomDomainResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      apiPortalName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          apiPortalName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalCustomDomainsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ApiPortalCustomDomainResource[]> {\n    let result: ApiPortalCustomDomainsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        apiPortalName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        apiPortalName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalCustomDomainsListOptionalParams\n  ): AsyncIterableIterator<ApiPortalCustomDomainResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      apiPortalName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get the API portal custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param domainName The name of the API portal custom domain.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    domainName: string,\n    options?: ApiPortalCustomDomainsGetOptionalParams\n  ): Promise<ApiPortalCustomDomainsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, apiPortalName, domainName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the API portal custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param domainName The name of the API portal custom domain.\n   * @param apiPortalCustomDomainResource The API portal custom domain for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    domainName: string,\n    apiPortalCustomDomainResource: ApiPortalCustomDomainResource,\n    options?: ApiPortalCustomDomainsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ApiPortalCustomDomainsCreateOrUpdateResponse>,\n      ApiPortalCustomDomainsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ApiPortalCustomDomainsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        apiPortalName,\n        domainName,\n        apiPortalCustomDomainResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ApiPortalCustomDomainsCreateOrUpdateResponse,\n      OperationState<ApiPortalCustomDomainsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update the API portal custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param domainName The name of the API portal custom domain.\n   * @param apiPortalCustomDomainResource The API portal custom domain for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    domainName: string,\n    apiPortalCustomDomainResource: ApiPortalCustomDomainResource,\n    options?: ApiPortalCustomDomainsCreateOrUpdateOptionalParams\n  ): Promise<ApiPortalCustomDomainsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      apiPortalName,\n      domainName,\n      apiPortalCustomDomainResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the API portal custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param domainName The name of the API portal custom domain.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    domainName: string,\n    options?: ApiPortalCustomDomainsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        apiPortalName,\n        domainName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the API portal custom domain.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param domainName The name of the API portal custom domain.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    domainName: string,\n    options?: ApiPortalCustomDomainsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      apiPortalName,\n      domainName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Handle requests to list all API portal custom domains.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    options?: ApiPortalCustomDomainsListOptionalParams\n  ): Promise<ApiPortalCustomDomainsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, apiPortalName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param apiPortalName The name of API portal.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    apiPortalName: string,\n    nextLink: string,\n    options?: ApiPortalCustomDomainsListNextOptionalParams\n  ): Promise<ApiPortalCustomDomainsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, apiPortalName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.domainName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResource\n    },\n    201: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResource\n    },\n    202: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResource\n    },\n    204: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.apiPortalCustomDomainResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.domainName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains/{domainName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.domainName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/apiPortals/{apiPortalName}/domains\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiPortalCustomDomainResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.apiPortalName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ApplicationAccelerators } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  ApplicationAcceleratorResource,\n  ApplicationAcceleratorsListNextOptionalParams,\n  ApplicationAcceleratorsListOptionalParams,\n  ApplicationAcceleratorsListResponse,\n  ApplicationAcceleratorsGetOptionalParams,\n  ApplicationAcceleratorsGetResponse,\n  ApplicationAcceleratorsCreateOrUpdateOptionalParams,\n  ApplicationAcceleratorsCreateOrUpdateResponse,\n  ApplicationAcceleratorsDeleteOptionalParams,\n  ApplicationAcceleratorsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ApplicationAccelerators operations. */\nexport class ApplicationAcceleratorsImpl implements ApplicationAccelerators {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class ApplicationAccelerators class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handle requests to list all application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationAcceleratorsListOptionalParams\n  ): PagedAsyncIterableIterator<ApplicationAcceleratorResource> {\n    const iter = this.listPagingAll(resourceGroupName, serviceName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationAcceleratorsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ApplicationAcceleratorResource[]> {\n    let result: ApplicationAcceleratorsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(resourceGroupName, serviceName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationAcceleratorsListOptionalParams\n  ): AsyncIterableIterator<ApplicationAcceleratorResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handle requests to list all application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    options?: ApplicationAcceleratorsListOptionalParams\n  ): Promise<ApplicationAcceleratorsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: ApplicationAcceleratorsGetOptionalParams\n  ): Promise<ApplicationAcceleratorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, applicationAcceleratorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param applicationAcceleratorResource The application accelerator for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    applicationAcceleratorResource: ApplicationAcceleratorResource,\n    options?: ApplicationAcceleratorsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<ApplicationAcceleratorsCreateOrUpdateResponse>,\n      ApplicationAcceleratorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ApplicationAcceleratorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        applicationAcceleratorResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      ApplicationAcceleratorsCreateOrUpdateResponse,\n      OperationState<ApplicationAcceleratorsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update the application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param applicationAcceleratorResource The application accelerator for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    applicationAcceleratorResource: ApplicationAcceleratorResource,\n    options?: ApplicationAcceleratorsCreateOrUpdateOptionalParams\n  ): Promise<ApplicationAcceleratorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      applicationAcceleratorResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: ApplicationAcceleratorsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the application accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: ApplicationAcceleratorsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    nextLink: string,\n    options?: ApplicationAcceleratorsListNextOptionalParams\n  ): Promise<ApplicationAcceleratorsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationAcceleratorResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationAcceleratorResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationAcceleratorResource\n    },\n    201: {\n      bodyMapper: Mappers.ApplicationAcceleratorResource\n    },\n    202: {\n      bodyMapper: Mappers.ApplicationAcceleratorResource\n    },\n    204: {\n      bodyMapper: Mappers.ApplicationAcceleratorResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.applicationAcceleratorResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApplicationAcceleratorResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { CustomizedAccelerators } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  CustomizedAcceleratorResource,\n  CustomizedAcceleratorsListNextOptionalParams,\n  CustomizedAcceleratorsListOptionalParams,\n  CustomizedAcceleratorsListResponse,\n  CustomizedAcceleratorsGetOptionalParams,\n  CustomizedAcceleratorsGetResponse,\n  CustomizedAcceleratorsCreateOrUpdateOptionalParams,\n  CustomizedAcceleratorsCreateOrUpdateResponse,\n  CustomizedAcceleratorsDeleteOptionalParams,\n  CustomizedAcceleratorProperties,\n  CustomizedAcceleratorsValidateOptionalParams,\n  CustomizedAcceleratorsValidateResponse,\n  CustomizedAcceleratorsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing CustomizedAccelerators operations. */\nexport class CustomizedAcceleratorsImpl implements CustomizedAccelerators {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class CustomizedAccelerators class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handle requests to list all customized accelerators.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: CustomizedAcceleratorsListOptionalParams\n  ): PagedAsyncIterableIterator<CustomizedAcceleratorResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          applicationAcceleratorName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: CustomizedAcceleratorsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<CustomizedAcceleratorResource[]> {\n    let result: CustomizedAcceleratorsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: CustomizedAcceleratorsListOptionalParams\n  ): AsyncIterableIterator<CustomizedAcceleratorResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handle requests to list all customized accelerators.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: CustomizedAcceleratorsListOptionalParams\n  ): Promise<CustomizedAcceleratorsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, applicationAcceleratorName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the customized accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param customizedAcceleratorName The name of the customized accelerator.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    customizedAcceleratorName: string,\n    options?: CustomizedAcceleratorsGetOptionalParams\n  ): Promise<CustomizedAcceleratorsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        customizedAcceleratorName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create or update the customized accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param customizedAcceleratorName The name of the customized accelerator.\n   * @param customizedAcceleratorResource The customized accelerator for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    customizedAcceleratorName: string,\n    customizedAcceleratorResource: CustomizedAcceleratorResource,\n    options?: CustomizedAcceleratorsCreateOrUpdateOptionalParams\n  ): Promise<\n    SimplePollerLike<\n      OperationState<CustomizedAcceleratorsCreateOrUpdateResponse>,\n      CustomizedAcceleratorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<CustomizedAcceleratorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        customizedAcceleratorName,\n        customizedAcceleratorResource,\n        options\n      },\n      spec: createOrUpdateOperationSpec\n    });\n    const poller = await createHttpPoller<\n      CustomizedAcceleratorsCreateOrUpdateResponse,\n      OperationState<CustomizedAcceleratorsCreateOrUpdateResponse>\n    >(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create or update the customized accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param customizedAcceleratorName The name of the customized accelerator.\n   * @param customizedAcceleratorResource The customized accelerator for the create or update operation\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    customizedAcceleratorName: string,\n    customizedAcceleratorResource: CustomizedAcceleratorResource,\n    options?: CustomizedAcceleratorsCreateOrUpdateOptionalParams\n  ): Promise<CustomizedAcceleratorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      customizedAcceleratorName,\n      customizedAcceleratorResource,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Delete the customized accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param customizedAcceleratorName The name of the customized accelerator.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    customizedAcceleratorName: string,\n    options?: CustomizedAcceleratorsDeleteOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        customizedAcceleratorName,\n        options\n      },\n      spec: deleteOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Delete the customized accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param customizedAcceleratorName The name of the customized accelerator.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    customizedAcceleratorName: string,\n    options?: CustomizedAcceleratorsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      customizedAcceleratorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Check the customized accelerator are valid.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param customizedAcceleratorName The name of the customized accelerator.\n   * @param properties Customized accelerator properties to be validated\n   * @param options The options parameters.\n   */\n  validate(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    customizedAcceleratorName: string,\n    properties: CustomizedAcceleratorProperties,\n    options?: CustomizedAcceleratorsValidateOptionalParams\n  ): Promise<CustomizedAcceleratorsValidateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        customizedAcceleratorName,\n        properties,\n        options\n      },\n      validateOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    nextLink: string,\n    options?: CustomizedAcceleratorsListNextOptionalParams\n  ): Promise<CustomizedAcceleratorsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        nextLink,\n        options\n      },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomizedAcceleratorResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators/{customizedAcceleratorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomizedAcceleratorResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.customizedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators/{customizedAcceleratorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomizedAcceleratorResource\n    },\n    201: {\n      bodyMapper: Mappers.CustomizedAcceleratorResource\n    },\n    202: {\n      bodyMapper: Mappers.CustomizedAcceleratorResource\n    },\n    204: {\n      bodyMapper: Mappers.CustomizedAcceleratorResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.customizedAcceleratorResource,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.customizedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators/{customizedAcceleratorName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.customizedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst validateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/customizedAccelerators/{customizedAcceleratorName}/validate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomizedAcceleratorValidateResult\n    },\n    202: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.customizedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CustomizedAcceleratorResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { PredefinedAccelerators } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { AppPlatformManagementClient } from \"../appPlatformManagementClient\";\nimport {\n  SimplePollerLike,\n  OperationState,\n  createHttpPoller\n} from \"@azure/core-lro\";\nimport { createLroSpec } from \"../lroImpl\";\nimport {\n  PredefinedAcceleratorResource,\n  PredefinedAcceleratorsListNextOptionalParams,\n  PredefinedAcceleratorsListOptionalParams,\n  PredefinedAcceleratorsListResponse,\n  PredefinedAcceleratorsGetOptionalParams,\n  PredefinedAcceleratorsGetResponse,\n  PredefinedAcceleratorsDisableOptionalParams,\n  PredefinedAcceleratorsEnableOptionalParams,\n  PredefinedAcceleratorsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PredefinedAccelerators operations. */\nexport class PredefinedAcceleratorsImpl implements PredefinedAccelerators {\n  private readonly client: AppPlatformManagementClient;\n\n  /**\n   * Initialize a new instance of the class PredefinedAccelerators class.\n   * @param client Reference to the service client\n   */\n  constructor(client: AppPlatformManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Handle requests to list all predefined accelerators.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  public list(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: PredefinedAcceleratorsListOptionalParams\n  ): PagedAsyncIterableIterator<PredefinedAcceleratorResource> {\n    const iter = this.listPagingAll(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(\n          resourceGroupName,\n          serviceName,\n          applicationAcceleratorName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: PredefinedAcceleratorsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<PredefinedAcceleratorResource[]> {\n    let result: PredefinedAcceleratorsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: PredefinedAcceleratorsListOptionalParams\n  ): AsyncIterableIterator<PredefinedAcceleratorResource> {\n    for await (const page of this.listPagingPage(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Handle requests to list all predefined accelerators.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param options The options parameters.\n   */\n  private _list(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    options?: PredefinedAcceleratorsListOptionalParams\n  ): Promise<PredefinedAcceleratorsListResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serviceName, applicationAcceleratorName, options },\n      listOperationSpec\n    );\n  }\n\n  /**\n   * Get the predefined accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param predefinedAcceleratorName The name of the predefined accelerator.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    predefinedAcceleratorName: string,\n    options?: PredefinedAcceleratorsGetOptionalParams\n  ): Promise<PredefinedAcceleratorsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        predefinedAcceleratorName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Disable predefined accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param predefinedAcceleratorName The name of the predefined accelerator.\n   * @param options The options parameters.\n   */\n  async beginDisable(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    predefinedAcceleratorName: string,\n    options?: PredefinedAcceleratorsDisableOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        predefinedAcceleratorName,\n        options\n      },\n      spec: disableOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disable predefined accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param predefinedAcceleratorName The name of the predefined accelerator.\n   * @param options The options parameters.\n   */\n  async beginDisableAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    predefinedAcceleratorName: string,\n    options?: PredefinedAcceleratorsDisableOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDisable(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      predefinedAcceleratorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Enable predefined accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param predefinedAcceleratorName The name of the predefined accelerator.\n   * @param options The options parameters.\n   */\n  async beginEnable(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    predefinedAcceleratorName: string,\n    options?: PredefinedAcceleratorsEnableOptionalParams\n  ): Promise<SimplePollerLike<OperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperationFn = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = createLroSpec({\n      sendOperationFn,\n      args: {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        predefinedAcceleratorName,\n        options\n      },\n      spec: enableOperationSpec\n    });\n    const poller = await createHttpPoller<void, OperationState<void>>(lro, {\n      restoreFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Enable predefined accelerator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param predefinedAcceleratorName The name of the predefined accelerator.\n   * @param options The options parameters.\n   */\n  async beginEnableAndWait(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    predefinedAcceleratorName: string,\n    options?: PredefinedAcceleratorsEnableOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginEnable(\n      resourceGroupName,\n      serviceName,\n      applicationAcceleratorName,\n      predefinedAcceleratorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serviceName The name of the Service resource.\n   * @param applicationAcceleratorName The name of the application accelerator.\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    resourceGroupName: string,\n    serviceName: string,\n    applicationAcceleratorName: string,\n    nextLink: string,\n    options?: PredefinedAcceleratorsListNextOptionalParams\n  ): Promise<PredefinedAcceleratorsListNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serviceName,\n        applicationAcceleratorName,\n        nextLink,\n        options\n      },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredefinedAcceleratorResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators/{predefinedAcceleratorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredefinedAcceleratorResource\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.predefinedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst disableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators/{predefinedAcceleratorName}/disable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.predefinedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AppPlatform/Spring/{serviceName}/applicationAccelerators/{applicationAcceleratorName}/predefinedAccelerators/{predefinedAcceleratorName}/enable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    201: {},\n    202: {},\n    204: {},\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.applicationAcceleratorName,\n    Parameters.predefinedAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PredefinedAcceleratorResourceCollection\n    },\n    default: {\n      bodyMapper: Mappers.CloudError\n    }\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serviceName,\n    Parameters.nextLink,\n    Parameters.applicationAcceleratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport {\n  PipelineRequest,\n  PipelineResponse,\n  SendRequest\n} from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  ServicesImpl,\n  ConfigServersImpl,\n  ConfigurationServicesImpl,\n  ServiceRegistriesImpl,\n  ApplicationLiveViewsImpl,\n  DevToolPortalsImpl,\n  ContainerRegistriesImpl,\n  BuildServiceOperationsImpl,\n  BuildpackBindingImpl,\n  BuildServiceBuilderImpl,\n  BuildServiceAgentPoolImpl,\n  MonitoringSettingsImpl,\n  AppsImpl,\n  BindingsImpl,\n  StoragesImpl,\n  CertificatesImpl,\n  CustomDomainsImpl,\n  DeploymentsImpl,\n  OperationsImpl,\n  RuntimeVersionsImpl,\n  SkusImpl,\n  GatewaysImpl,\n  GatewayRouteConfigsImpl,\n  GatewayCustomDomainsImpl,\n  ApiPortalsImpl,\n  ApiPortalCustomDomainsImpl,\n  ApplicationAcceleratorsImpl,\n  CustomizedAcceleratorsImpl,\n  PredefinedAcceleratorsImpl\n} from \"./operations\";\nimport {\n  Services,\n  ConfigServers,\n  ConfigurationServices,\n  ServiceRegistries,\n  ApplicationLiveViews,\n  DevToolPortals,\n  ContainerRegistries,\n  BuildServiceOperations,\n  BuildpackBinding,\n  BuildServiceBuilder,\n  BuildServiceAgentPool,\n  MonitoringSettings,\n  Apps,\n  Bindings,\n  Storages,\n  Certificates,\n  CustomDomains,\n  Deployments,\n  Operations,\n  RuntimeVersions,\n  Skus,\n  Gateways,\n  GatewayRouteConfigs,\n  GatewayCustomDomains,\n  ApiPortals,\n  ApiPortalCustomDomains,\n  ApplicationAccelerators,\n  CustomizedAccelerators,\n  PredefinedAccelerators\n} from \"./operationsInterfaces\";\nimport { AppPlatformManagementClientOptionalParams } from \"./models\";\n\nexport class AppPlatformManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  apiVersion: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the AppPlatformManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId Gets subscription ID which uniquely identify the Microsoft Azure subscription.\n   *                       The subscription ID forms part of the URI for every service call.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: AppPlatformManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: AppPlatformManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-appplatform/3.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.apiVersion = options.apiVersion || \"2023-03-01-preview\";\n    this.services = new ServicesImpl(this);\n    this.configServers = new ConfigServersImpl(this);\n    this.configurationServices = new ConfigurationServicesImpl(this);\n    this.serviceRegistries = new ServiceRegistriesImpl(this);\n    this.applicationLiveViews = new ApplicationLiveViewsImpl(this);\n    this.devToolPortals = new DevToolPortalsImpl(this);\n    this.containerRegistries = new ContainerRegistriesImpl(this);\n    this.buildServiceOperations = new BuildServiceOperationsImpl(this);\n    this.buildpackBinding = new BuildpackBindingImpl(this);\n    this.buildServiceBuilder = new BuildServiceBuilderImpl(this);\n    this.buildServiceAgentPool = new BuildServiceAgentPoolImpl(this);\n    this.monitoringSettings = new MonitoringSettingsImpl(this);\n    this.apps = new AppsImpl(this);\n    this.bindings = new BindingsImpl(this);\n    this.storages = new StoragesImpl(this);\n    this.certificates = new CertificatesImpl(this);\n    this.customDomains = new CustomDomainsImpl(this);\n    this.deployments = new DeploymentsImpl(this);\n    this.operations = new OperationsImpl(this);\n    this.runtimeVersions = new RuntimeVersionsImpl(this);\n    this.skus = new SkusImpl(this);\n    this.gateways = new GatewaysImpl(this);\n    this.gatewayRouteConfigs = new GatewayRouteConfigsImpl(this);\n    this.gatewayCustomDomains = new GatewayCustomDomainsImpl(this);\n    this.apiPortals = new ApiPortalsImpl(this);\n    this.apiPortalCustomDomains = new ApiPortalCustomDomainsImpl(this);\n    this.applicationAccelerators = new ApplicationAcceleratorsImpl(this);\n    this.customizedAccelerators = new CustomizedAcceleratorsImpl(this);\n    this.predefinedAccelerators = new PredefinedAcceleratorsImpl(this);\n    this.addCustomApiVersionPolicy(options.apiVersion);\n  }\n\n  /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */\n  private addCustomApiVersionPolicy(apiVersion?: string) {\n    if (!apiVersion) {\n      return;\n    }\n    const apiVersionPolicy = {\n      name: \"CustomApiVersionPolicy\",\n      async sendRequest(\n        request: PipelineRequest,\n        next: SendRequest\n      ): Promise<PipelineResponse> {\n        const param = request.url.split(\"?\");\n        if (param.length > 1) {\n          const newParams = param[1].split(\"&\").map((item) => {\n            if (item.indexOf(\"api-version\") > -1) {\n              return \"api-version=\" + apiVersion;\n            } else {\n              return item;\n            }\n          });\n          request.url = param[0] + \"?\" + newParams.join(\"&\");\n        }\n        return next(request);\n      }\n    };\n    this.pipeline.addPolicy(apiVersionPolicy);\n  }\n\n  services: Services;\n  configServers: ConfigServers;\n  configurationServices: ConfigurationServices;\n  serviceRegistries: ServiceRegistries;\n  applicationLiveViews: ApplicationLiveViews;\n  devToolPortals: DevToolPortals;\n  containerRegistries: ContainerRegistries;\n  buildServiceOperations: BuildServiceOperations;\n  buildpackBinding: BuildpackBinding;\n  buildServiceBuilder: BuildServiceBuilder;\n  buildServiceAgentPool: BuildServiceAgentPool;\n  monitoringSettings: MonitoringSettings;\n  apps: Apps;\n  bindings: Bindings;\n  storages: Storages;\n  certificates: Certificates;\n  customDomains: CustomDomains;\n  deployments: Deployments;\n  operations: Operations;\n  runtimeVersions: RuntimeVersions;\n  skus: Skus;\n  gateways: Gateways;\n  gatewayRouteConfigs: GatewayRouteConfigs;\n  gatewayCustomDomains: GatewayCustomDomains;\n  apiPortals: ApiPortals;\n  apiPortalCustomDomains: ApiPortalCustomDomains;\n  applicationAccelerators: ApplicationAccelerators;\n  customizedAccelerators: CustomizedAccelerators;\n  predefinedAccelerators: PredefinedAccelerators;\n}\n"],"names":["KnownProvisioningState","KnownTrafficDirection","KnownPowerState","KnownCreatedByType","KnownLastModifiedByType","KnownTestKeyType","KnownConfigServerState","KnownConfigurationServiceProvisioningState","KnownServiceRegistryProvisioningState","KnownApplicationLiveViewProvisioningState","KnownDevToolPortalProvisioningState","KnownDevToolPortalFeatureState","KnownContainerRegistryProvisioningState","KnownBuildServiceProvisioningState","KnownBuildProvisioningState","KnownBindingType","KnownBuildpackBindingProvisioningState","KnownBuildResultProvisioningState","KnownKPackBuildStageProvisioningState","KnownBuilderProvisioningState","KnownMonitoringSettingState","KnownAppResourceProvisioningState","KnownType","KnownSessionAffinity","KnownBackendProtocol","KnownManagedIdentityType","KnownStorageType","KnownCertificateResourceProvisioningState","KnownCustomDomainResourceProvisioningState","KnownProbeActionType","KnownDeploymentResourceProvisioningState","KnownDeploymentResourceStatus","KnownActionType","KnownSupportedRuntimeValue","KnownSupportedRuntimePlatform","KnownSkuScaleType","KnownResourceSkuRestrictionsType","KnownResourceSkuRestrictionsReasonCode","KnownGatewayProvisioningState","KnownGatewayCertificateVerification","KnownApmType","KnownGatewayRouteConfigProtocol","KnownApiPortalProvisioningState","KnownApplicationAcceleratorProvisioningState","KnownCustomizedAcceleratorProvisioningState","KnownCustomizedAcceleratorValidateResultState","KnownPredefinedAcceleratorProvisioningState","KnownPredefinedAcceleratorState","KnownHttpSchemeType","ServiceResourceMapper","RegenerateTestKeyRequestPayloadMapper","NameAvailabilityParametersMapper","ConfigServerResourceMapper","ConfigServerSettingsMapper","ConfigurationServiceResourceMapper","ConfigurationServiceSettingsMapper","ApplicationLiveViewResourceMapper","DevToolPortalResourceMapper","ContainerRegistryResourceMapper","BuildServiceMapper","BuildMapper","BuildpackBindingResourceMapper","BuilderResourceMapper","BuildServiceAgentPoolResourceMapper","MonitoringSettingResourceMapper","AppResourceMapper","ActiveDeploymentCollectionMapper","CustomDomainValidatePayloadMapper","BindingResourceMapper","StorageResourceMapper","CertificateResourceMapper","CustomDomainResourceMapper","DeploymentResourceMapper","RemoteDebuggingPayloadMapper","DiagnosticParametersMapper","GatewayResourceMapper","SkuObjectMapper","GatewayRouteConfigResourceMapper","GatewayCustomDomainResourceMapper","ApiPortalResourceMapper","ApiPortalCustomDomainResourceMapper","ApplicationAcceleratorResourceMapper","CustomizedAcceleratorResourceMapper","CustomizedAcceleratorPropertiesMapper","__rest","__await","__asyncValues","__asyncDelegator","getOperationSpec","__awaiter","createOrUpdateOperationSpec","createHttpPoller","deleteOperationSpec","updateOperationSpec","stopOperationSpec","startOperationSpec","listOperationSpec","listNextOperationSpec","serializer","coreClient","Mappers.ServiceResource","Mappers.CloudError","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.serviceName","Parameters.accept","Parameters.resource","Parameters.contentType","Mappers.TestKeys","Parameters.regenerateTestKeyRequest","Mappers.NameAvailability","Parameters.availabilityParameters","Parameters.location","Mappers.ServiceResourceList","Parameters.nextLink","updatePutOperationSpec","updatePatchOperationSpec","validateOperationSpec","Mappers.ConfigServerResource","Parameters.configServerResource","Mappers.ConfigServerSettingsValidateResult","Parameters.configServerSettings","Mappers.ConfigurationServiceResource","Parameters.configurationServiceName","Parameters.configurationServiceResource","Mappers.ConfigurationServiceResourceCollection","Mappers.ConfigurationServiceSettingsValidateResult","Parameters.settings","Mappers.ServiceRegistryResource","Parameters.serviceRegistryName","Mappers.ServiceRegistryResourceCollection","Mappers.ApplicationLiveViewResourceCollection","Mappers.ApplicationLiveViewResource","Parameters.applicationLiveViewName","Parameters.applicationLiveViewResource","Mappers.DevToolPortalResourceCollection","Mappers.DevToolPortalResource","Parameters.devToolPortalName","Parameters.devToolPortalResource","Mappers.ContainerRegistryResourceCollection","Mappers.ContainerRegistryResource","Parameters.containerRegistryName","Parameters.containerRegistryResource","getResourceUploadUrlOperationSpec","Mappers.BuildServiceCollection","Mappers.BuildService","Parameters.buildServiceName","Parameters.buildService","Mappers.BuildCollection","Mappers.Build","Parameters.buildName","Parameters.build","Mappers.BuildResultCollection","Mappers.BuildResult","Parameters.buildResultName","Mappers.BuildResultLog","Mappers.ResourceUploadDefinition","Mappers.SupportedBuildpacksCollection","Mappers.SupportedBuildpackResource","Parameters.buildpackName","Mappers.SupportedStacksCollection","Mappers.SupportedStackResource","Parameters.stackName","listForClusterOperationSpec","listForClusterNextOperationSpec","Mappers.BuildpackBindingResourceCollection","Mappers.BuildpackBindingResource","Parameters.builderName","Parameters.buildpackBindingName","Parameters.buildpackBinding","Mappers.BuilderResource","Parameters.builderResource","Mappers.BuilderResourceCollection","Mappers.DeploymentList","Mappers.BuildServiceAgentPoolResourceCollection","Mappers.BuildServiceAgentPoolResource","Parameters.agentPoolName","Parameters.agentPoolResource","Mappers.MonitoringSettingResource","Parameters.monitoringSettingResource","validateDomainOperationSpec","Mappers.AppResource","Parameters.syncStatus","Parameters.appName","Parameters.appResource","Mappers.AppResourceCollection","Parameters.activeDeploymentCollection","Mappers.CustomDomainValidateResult","Parameters.validatePayload","Mappers.BindingResource","Parameters.bindingName","Parameters.bindingResource","Mappers.BindingResourceCollection","Mappers.StorageResource","Parameters.storageName","Parameters.storageResource","Mappers.StorageResourceCollection","Mappers.CertificateResource","Parameters.certificateName","Parameters.certificateResource","Mappers.CertificateResourceCollection","Mappers.CustomDomainResource","Parameters.domainName","Parameters.domainResource","Mappers.CustomDomainResourceCollection","restartOperationSpec","Mappers.DeploymentResource","Parameters.deploymentName","Parameters.deploymentResource","Mappers.DeploymentResourceCollection","Parameters.version","Mappers.RemoteDebugging","Parameters.remoteDebuggingPayload","Mappers.LogFileUrlResponse","Parameters.diagnosticParameters","Mappers.AvailableOperations","Mappers.AvailableRuntimeVersions","Mappers.ResourceSkuCollection","Mappers.GatewayResource","Parameters.gatewayName","Parameters.gatewayResource","Parameters.gatewayCapacityResource","Mappers.GatewayResourceCollection","Mappers.GatewayRouteConfigResource","Parameters.routeConfigName","Parameters.gatewayRouteConfigResource","Mappers.GatewayRouteConfigResourceCollection","Mappers.GatewayCustomDomainResource","Parameters.gatewayCustomDomainResource","Mappers.GatewayCustomDomainResourceCollection","Mappers.ApiPortalResource","Parameters.apiPortalName","Parameters.apiPortalResource","Mappers.ApiPortalResourceCollection","Mappers.ApiPortalCustomDomainResource","Parameters.apiPortalCustomDomainResource","Mappers.ApiPortalCustomDomainResourceCollection","Mappers.ApplicationAcceleratorResourceCollection","Mappers.ApplicationAcceleratorResource","Parameters.applicationAcceleratorName","Parameters.applicationAcceleratorResource","Mappers.CustomizedAcceleratorResourceCollection","Mappers.CustomizedAcceleratorResource","Parameters.customizedAcceleratorName","Parameters.customizedAcceleratorResource","Mappers.CustomizedAcceleratorValidateResult","Parameters.properties","Mappers.PredefinedAcceleratorResourceCollection","Mappers.PredefinedAcceleratorResource","Parameters.predefinedAcceleratorName","coreRestPipeline"],"mappings":"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"}