/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AppPlatformManagementClient } from "@azure/arm-appplatform";
import { DefaultAzureCredential } from "@azure/identity";
import * as dotenv from "dotenv";
dotenv.config();
/**
 * This sample demonstrates how to Check the customized accelerator are valid.
 *
 * @summary Check the customized accelerator are valid.
 * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2023-03-01-preview/examples/CustomizedAccelerators_Validate.json
 */
function customizedAcceleratorsValidate() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = process.env["APPPLATFORM_SUBSCRIPTION_ID"] ||
            "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = process.env["APPPLATFORM_RESOURCE_GROUP"] || "myResourceGroup";
        const serviceName = "myservice";
        const applicationAcceleratorName = "default";
        const customizedAcceleratorName = "acc-name";
        const properties = {
            description: "acc-desc",
            acceleratorTags: ["tag-a", "tag-b"],
            displayName: "acc-name",
            gitRepository: {
                authSetting: {
                    authType: "SSH",
                    hostKey: "git-auth-hostkey",
                    hostKeyAlgorithm: "git-auth-algorithm",
                    privateKey: "git-auth-privatekey"
                },
                branch: "git-branch",
                commit: "12345",
                gitTag: "git-tag",
                intervalInSeconds: 70,
                url: "git-url"
            },
            iconUrl: "acc-icon"
        };
        const credential = new DefaultAzureCredential();
        const client = new AppPlatformManagementClient(credential, subscriptionId);
        const result = yield client.customizedAccelerators.validate(resourceGroupName, serviceName, applicationAcceleratorName, customizedAcceleratorName, properties);
        console.log(result);
    });
}
function main() {
    return __awaiter(this, void 0, void 0, function* () {
        customizedAcceleratorsValidate();
    });
}
main().catch(console.error);
//# sourceMappingURL=customizedAcceleratorsValidateSample.js.map