{"version":3,"file":"msal-browser.js","sources":["../node_modules/tslib/tslib.es6.js","../../msal-common/dist/_virtual/_tslib.js","../../msal-common/dist/utils/Constants.js","../../msal-common/dist/error/AuthError.js","../../msal-common/dist/crypto/ICrypto.js","../../msal-common/dist/error/ClientAuthError.js","../../msal-common/dist/utils/StringUtils.js","../../msal-common/dist/logger/Logger.js","../../msal-common/dist/packageMetadata.js","../../msal-common/dist/cache/entities/CredentialEntity.js","../../msal-common/dist/error/ClientConfigurationError.js","../../msal-common/dist/request/ScopeSet.js","../../msal-common/dist/account/ClientInfo.js","../../msal-common/dist/authority/AuthorityType.js","../../msal-common/dist/cache/entities/AccountEntity.js","../../msal-common/dist/account/AuthToken.js","../../msal-common/dist/cache/CacheManager.js","../../msal-common/dist/config/ClientConfiguration.js","../../msal-common/dist/error/ServerError.js","../../msal-common/dist/network/ThrottlingUtils.js","../../msal-common/dist/network/NetworkManager.js","../../msal-common/dist/account/CcsCredential.js","../../msal-common/dist/client/BaseClient.js","../../msal-common/dist/request/RequestValidator.js","../../msal-common/dist/request/RequestParameterBuilder.js","../../msal-common/dist/cache/entities/IdTokenEntity.js","../../msal-common/dist/utils/TimeUtils.js","../../msal-common/dist/cache/entities/AccessTokenEntity.js","../../msal-common/dist/cache/entities/RefreshTokenEntity.js","../../msal-common/dist/error/InteractionRequiredAuthError.js","../../msal-common/dist/cache/entities/CacheRecord.js","../../msal-common/dist/utils/ProtocolUtils.js","../../msal-common/dist/url/UrlString.js","../../msal-common/dist/crypto/PopTokenGenerator.js","../../msal-common/dist/cache/entities/AppMetadataEntity.js","../../msal-common/dist/cache/persistence/TokenCacheContext.js","../../msal-common/dist/response/ResponseHandler.js","../../msal-common/dist/client/AuthorizationCodeClient.js","../../msal-common/dist/client/RefreshTokenClient.js","../../msal-common/dist/client/SilentFlowClient.js","../../msal-common/dist/authority/OpenIdConfigResponse.js","../../msal-common/dist/authority/ProtocolMode.js","../../msal-common/dist/cache/entities/AuthorityMetadataEntity.js","../../msal-common/dist/authority/CloudInstanceDiscoveryResponse.js","../../msal-common/dist/authority/RegionDiscovery.js","../../msal-common/dist/authority/Authority.js","../../msal-common/dist/authority/AuthorityFactory.js","../../msal-common/dist/cache/entities/ServerTelemetryEntity.js","../../msal-common/dist/cache/entities/ThrottlingEntity.js","../../msal-common/dist/network/INetworkModule.js","../../msal-common/dist/telemetry/server/ServerTelemetryManager.js","../src/utils/BrowserConstants.ts","../src/utils/MathUtils.ts","../src/crypto/GuidGenerator.ts","../src/utils/BrowserStringUtils.ts","../src/encode/Base64Encode.ts","../src/encode/Base64Decode.ts","../src/error/BrowserAuthError.ts","../src/crypto/PkceGenerator.ts","../src/crypto/BrowserCrypto.ts","../src/cache/DatabaseStorage.ts","../src/crypto/CryptoOps.ts","../src/error/BrowserConfigurationAuthError.ts","../src/cache/BrowserStorage.ts","../src/cache/MemoryStorage.ts","../src/utils/BrowserProtocolUtils.ts","../src/cache/BrowserCacheManager.ts","../src/network/FetchClient.ts","../src/network/XhrClient.ts","../src/utils/BrowserUtils.ts","../src/navigation/NavigationClient.ts","../src/config/Configuration.ts","../src/packageMetadata.ts","../src/event/EventType.ts","../src/event/EventHandler.ts","../src/interaction_client/BaseInteractionClient.ts","../src/interaction_client/StandardInteractionClient.ts","../src/utils/PopupUtils.ts","../src/interaction_handler/InteractionHandler.ts","../src/interaction_handler/PopupHandler.ts","../src/interaction_client/PopupClient.ts","../src/interaction_handler/RedirectHandler.ts","../src/interaction_client/RedirectClient.ts","../src/interaction_handler/SilentHandler.ts","../src/interaction_client/SilentIframeClient.ts","../src/interaction_client/SilentRefreshClient.ts","../src/cache/TokenCache.ts","../src/app/ClientApplication.ts","../src/interaction_client/SilentCacheClient.ts","../src/app/PublicClientApplication.ts","../src/app/IPublicClientApplication.ts","../src/event/EventMessage.ts","../src/crypto/SignedHttpRequest.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nexport { __assign, __awaiter, __extends, __generator, __spreadArrays };\n//# sourceMappingURL=_tslib.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __spreadArrays } from '../_virtual/_tslib.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\"login.microsoftonline.com\", \"login.windows.net\", \"login.microsoft.com\", \"sts.windows.net\"]\r\n};\r\nvar OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE\r\n];\r\nvar OIDC_SCOPES = __spreadArrays(OIDC_DEFAULT_SCOPES, [\r\n    Constants.EMAIL_SCOPE\r\n]);\r\n/**\r\n * Request header names\r\n */\r\nvar HeaderNames;\r\n(function (HeaderNames) {\r\n    HeaderNames[\"CONTENT_TYPE\"] = \"Content-Type\";\r\n    HeaderNames[\"RETRY_AFTER\"] = \"Retry-After\";\r\n    HeaderNames[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\r\n})(HeaderNames || (HeaderNames = {}));\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nvar PersistentCacheKeys;\r\n(function (PersistentCacheKeys) {\r\n    PersistentCacheKeys[\"ID_TOKEN\"] = \"idtoken\";\r\n    PersistentCacheKeys[\"CLIENT_INFO\"] = \"client.info\";\r\n    PersistentCacheKeys[\"ADAL_ID_TOKEN\"] = \"adal.idtoken\";\r\n    PersistentCacheKeys[\"ERROR\"] = \"error\";\r\n    PersistentCacheKeys[\"ERROR_DESC\"] = \"error.description\";\r\n    PersistentCacheKeys[\"ACTIVE_ACCOUNT\"] = \"active-account\";\r\n})(PersistentCacheKeys || (PersistentCacheKeys = {}));\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nvar AADAuthorityConstants;\r\n(function (AADAuthorityConstants) {\r\n    AADAuthorityConstants[\"COMMON\"] = \"common\";\r\n    AADAuthorityConstants[\"ORGANIZATIONS\"] = \"organizations\";\r\n    AADAuthorityConstants[\"CONSUMERS\"] = \"consumers\";\r\n})(AADAuthorityConstants || (AADAuthorityConstants = {}));\r\n/**\r\n * Keys in the hashParams sent by AAD Server\r\n */\r\nvar AADServerParamKeys;\r\n(function (AADServerParamKeys) {\r\n    AADServerParamKeys[\"CLIENT_ID\"] = \"client_id\";\r\n    AADServerParamKeys[\"REDIRECT_URI\"] = \"redirect_uri\";\r\n    AADServerParamKeys[\"RESPONSE_TYPE\"] = \"response_type\";\r\n    AADServerParamKeys[\"RESPONSE_MODE\"] = \"response_mode\";\r\n    AADServerParamKeys[\"GRANT_TYPE\"] = \"grant_type\";\r\n    AADServerParamKeys[\"CLAIMS\"] = \"claims\";\r\n    AADServerParamKeys[\"SCOPE\"] = \"scope\";\r\n    AADServerParamKeys[\"ERROR\"] = \"error\";\r\n    AADServerParamKeys[\"ERROR_DESCRIPTION\"] = \"error_description\";\r\n    AADServerParamKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    AADServerParamKeys[\"ID_TOKEN\"] = \"id_token\";\r\n    AADServerParamKeys[\"REFRESH_TOKEN\"] = \"refresh_token\";\r\n    AADServerParamKeys[\"EXPIRES_IN\"] = \"expires_in\";\r\n    AADServerParamKeys[\"STATE\"] = \"state\";\r\n    AADServerParamKeys[\"NONCE\"] = \"nonce\";\r\n    AADServerParamKeys[\"PROMPT\"] = \"prompt\";\r\n    AADServerParamKeys[\"SESSION_STATE\"] = \"session_state\";\r\n    AADServerParamKeys[\"CLIENT_INFO\"] = \"client_info\";\r\n    AADServerParamKeys[\"CODE\"] = \"code\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE\"] = \"code_challenge\";\r\n    AADServerParamKeys[\"CODE_CHALLENGE_METHOD\"] = \"code_challenge_method\";\r\n    AADServerParamKeys[\"CODE_VERIFIER\"] = \"code_verifier\";\r\n    AADServerParamKeys[\"CLIENT_REQUEST_ID\"] = \"client-request-id\";\r\n    AADServerParamKeys[\"X_CLIENT_SKU\"] = \"x-client-SKU\";\r\n    AADServerParamKeys[\"X_CLIENT_VER\"] = \"x-client-VER\";\r\n    AADServerParamKeys[\"X_CLIENT_OS\"] = \"x-client-OS\";\r\n    AADServerParamKeys[\"X_CLIENT_CPU\"] = \"x-client-CPU\";\r\n    AADServerParamKeys[\"X_CLIENT_CURR_TELEM\"] = \"x-client-current-telemetry\";\r\n    AADServerParamKeys[\"X_CLIENT_LAST_TELEM\"] = \"x-client-last-telemetry\";\r\n    AADServerParamKeys[\"X_MS_LIB_CAPABILITY\"] = \"x-ms-lib-capability\";\r\n    AADServerParamKeys[\"POST_LOGOUT_URI\"] = \"post_logout_redirect_uri\";\r\n    AADServerParamKeys[\"ID_TOKEN_HINT\"] = \"id_token_hint\";\r\n    AADServerParamKeys[\"DEVICE_CODE\"] = \"device_code\";\r\n    AADServerParamKeys[\"CLIENT_SECRET\"] = \"client_secret\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION\"] = \"client_assertion\";\r\n    AADServerParamKeys[\"CLIENT_ASSERTION_TYPE\"] = \"client_assertion_type\";\r\n    AADServerParamKeys[\"TOKEN_TYPE\"] = \"token_type\";\r\n    AADServerParamKeys[\"REQ_CNF\"] = \"req_cnf\";\r\n    AADServerParamKeys[\"OBO_ASSERTION\"] = \"assertion\";\r\n    AADServerParamKeys[\"REQUESTED_TOKEN_USE\"] = \"requested_token_use\";\r\n    AADServerParamKeys[\"ON_BEHALF_OF\"] = \"on_behalf_of\";\r\n    AADServerParamKeys[\"FOCI\"] = \"foci\";\r\n    AADServerParamKeys[\"CCS_HEADER\"] = \"X-AnchorMailbox\";\r\n})(AADServerParamKeys || (AADServerParamKeys = {}));\r\n/**\r\n * Claims request keys\r\n */\r\nvar ClaimsRequestKeys;\r\n(function (ClaimsRequestKeys) {\r\n    ClaimsRequestKeys[\"ACCESS_TOKEN\"] = \"access_token\";\r\n    ClaimsRequestKeys[\"XMS_CC\"] = \"xms_cc\";\r\n})(ClaimsRequestKeys || (ClaimsRequestKeys = {}));\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nvar PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\"\r\n};\r\n/**\r\n * SSO Types - generated to populate hints\r\n */\r\nvar SSOTypes;\r\n(function (SSOTypes) {\r\n    SSOTypes[\"ACCOUNT\"] = \"account\";\r\n    SSOTypes[\"SID\"] = \"sid\";\r\n    SSOTypes[\"LOGIN_HINT\"] = \"login_hint\";\r\n    SSOTypes[\"ID_TOKEN\"] = \"id_token\";\r\n    SSOTypes[\"DOMAIN_HINT\"] = \"domain_hint\";\r\n    SSOTypes[\"ORGANIZATIONS\"] = \"organizations\";\r\n    SSOTypes[\"CONSUMERS\"] = \"consumers\";\r\n    SSOTypes[\"ACCOUNT_ID\"] = \"accountIdentifier\";\r\n    SSOTypes[\"HOMEACCOUNT_ID\"] = \"homeAccountIdentifier\";\r\n})(SSOTypes || (SSOTypes = {}));\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nvar CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\"\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nvar ResponseMode;\r\n(function (ResponseMode) {\r\n    ResponseMode[\"QUERY\"] = \"query\";\r\n    ResponseMode[\"FRAGMENT\"] = \"fragment\";\r\n    ResponseMode[\"FORM_POST\"] = \"form_post\";\r\n})(ResponseMode || (ResponseMode = {}));\r\n/**\r\n * allowed grant_type\r\n */\r\nvar GrantType;\r\n(function (GrantType) {\r\n    GrantType[\"IMPLICIT_GRANT\"] = \"implicit\";\r\n    GrantType[\"AUTHORIZATION_CODE_GRANT\"] = \"authorization_code\";\r\n    GrantType[\"CLIENT_CREDENTIALS_GRANT\"] = \"client_credentials\";\r\n    GrantType[\"RESOURCE_OWNER_PASSWORD_GRANT\"] = \"password\";\r\n    GrantType[\"REFRESH_TOKEN_GRANT\"] = \"refresh_token\";\r\n    GrantType[\"DEVICE_CODE_GRANT\"] = \"device_code\";\r\n    GrantType[\"JWT_BEARER\"] = \"urn:ietf:params:oauth:grant-type:jwt-bearer\";\r\n})(GrantType || (GrantType = {}));\r\n/**\r\n * Account types in Cache\r\n */\r\nvar CacheAccountType;\r\n(function (CacheAccountType) {\r\n    CacheAccountType[\"MSSTS_ACCOUNT_TYPE\"] = \"MSSTS\";\r\n    CacheAccountType[\"ADFS_ACCOUNT_TYPE\"] = \"ADFS\";\r\n    CacheAccountType[\"MSAV1_ACCOUNT_TYPE\"] = \"MSA\";\r\n    CacheAccountType[\"GENERIC_ACCOUNT_TYPE\"] = \"Generic\"; // NTLM, Kerberos, FBA, Basic etc\r\n})(CacheAccountType || (CacheAccountType = {}));\r\n/**\r\n * Separators used in cache\r\n */\r\nvar Separators;\r\n(function (Separators) {\r\n    Separators[\"CACHE_KEY_SEPARATOR\"] = \"-\";\r\n    Separators[\"CLIENT_INFO_SEPARATOR\"] = \".\";\r\n})(Separators || (Separators = {}));\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nvar CredentialType;\r\n(function (CredentialType) {\r\n    CredentialType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CredentialType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CredentialType[\"ACCESS_TOKEN_WITH_AUTH_SCHEME\"] = \"AccessToken_With_AuthScheme\";\r\n    CredentialType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n})(CredentialType || (CredentialType = {}));\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nvar CacheSchemaType;\r\n(function (CacheSchemaType) {\r\n    CacheSchemaType[\"ACCOUNT\"] = \"Account\";\r\n    CacheSchemaType[\"CREDENTIAL\"] = \"Credential\";\r\n    CacheSchemaType[\"ID_TOKEN\"] = \"IdToken\";\r\n    CacheSchemaType[\"ACCESS_TOKEN\"] = \"AccessToken\";\r\n    CacheSchemaType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\r\n    CacheSchemaType[\"APP_METADATA\"] = \"AppMetadata\";\r\n    CacheSchemaType[\"TEMPORARY\"] = \"TempCache\";\r\n    CacheSchemaType[\"TELEMETRY\"] = \"Telemetry\";\r\n    CacheSchemaType[\"UNDEFINED\"] = \"Undefined\";\r\n    CacheSchemaType[\"THROTTLING\"] = \"Throttling\";\r\n})(CacheSchemaType || (CacheSchemaType = {}));\r\n/**\r\n * Combine all cache types\r\n */\r\nvar CacheType;\r\n(function (CacheType) {\r\n    CacheType[CacheType[\"ADFS\"] = 1001] = \"ADFS\";\r\n    CacheType[CacheType[\"MSA\"] = 1002] = \"MSA\";\r\n    CacheType[CacheType[\"MSSTS\"] = 1003] = \"MSSTS\";\r\n    CacheType[CacheType[\"GENERIC\"] = 1004] = \"GENERIC\";\r\n    CacheType[CacheType[\"ACCESS_TOKEN\"] = 2001] = \"ACCESS_TOKEN\";\r\n    CacheType[CacheType[\"REFRESH_TOKEN\"] = 2002] = \"REFRESH_TOKEN\";\r\n    CacheType[CacheType[\"ID_TOKEN\"] = 2003] = \"ID_TOKEN\";\r\n    CacheType[CacheType[\"APP_METADATA\"] = 3001] = \"APP_METADATA\";\r\n    CacheType[CacheType[\"UNDEFINED\"] = 9999] = \"UNDEFINED\";\r\n})(CacheType || (CacheType = {}));\r\n/**\r\n * More Cache related constants\r\n */\r\nvar APP_METADATA = \"appmetadata\";\r\nvar CLIENT_INFO = \"client_info\";\r\nvar THE_FAMILY_ID = \"1\";\r\nvar AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24 // 24 Hours\r\n};\r\nvar AuthorityMetadataSource;\r\n(function (AuthorityMetadataSource) {\r\n    AuthorityMetadataSource[\"CONFIG\"] = \"config\";\r\n    AuthorityMetadataSource[\"CACHE\"] = \"cache\";\r\n    AuthorityMetadataSource[\"NETWORK\"] = \"network\";\r\n})(AuthorityMetadataSource || (AuthorityMetadataSource = {}));\r\nvar SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\"\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nvar AuthenticationScheme;\r\n(function (AuthenticationScheme) {\r\n    AuthenticationScheme[\"POP\"] = \"pop\";\r\n    AuthenticationScheme[\"BEARER\"] = \"Bearer\";\r\n})(AuthenticationScheme || (AuthenticationScheme = {}));\r\n/**\r\n * Constants related to throttling\r\n */\r\nvar ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\"\r\n};\r\nvar Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nvar PasswordGrantConstants;\r\n(function (PasswordGrantConstants) {\r\n    PasswordGrantConstants[\"username\"] = \"username\";\r\n    PasswordGrantConstants[\"password\"] = \"password\";\r\n})(PasswordGrantConstants || (PasswordGrantConstants = {}));\r\n/**\r\n * Response codes\r\n */\r\nvar ResponseCodes;\r\n(function (ResponseCodes) {\r\n    ResponseCodes[ResponseCodes[\"httpSuccess\"] = 200] = \"httpSuccess\";\r\n    ResponseCodes[ResponseCodes[\"httpBadRequest\"] = 400] = \"httpBadRequest\";\r\n})(ResponseCodes || (ResponseCodes = {}));\r\n/**\r\n * Region Discovery Sources\r\n */\r\nvar RegionDiscoverySources;\r\n(function (RegionDiscoverySources) {\r\n    RegionDiscoverySources[\"FAILED_AUTO_DETECTION\"] = \"1\";\r\n    RegionDiscoverySources[\"INTERNAL_CACHE\"] = \"2\";\r\n    RegionDiscoverySources[\"ENVIRONMENT_VARIABLE\"] = \"3\";\r\n    RegionDiscoverySources[\"IMDS\"] = \"4\";\r\n})(RegionDiscoverySources || (RegionDiscoverySources = {}));\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nvar RegionDiscoveryOutcomes;\r\n(function (RegionDiscoveryOutcomes) {\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_MATCHES_DETECTED\"] = \"1\";\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_NO_AUTO_DETECTION\"] = \"2\";\r\n    RegionDiscoveryOutcomes[\"CONFIGURED_NOT_DETECTED\"] = \"3\";\r\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_SUCCESSFUL\"] = \"4\";\r\n    RegionDiscoveryOutcomes[\"AUTO_DETECTION_REQUESTED_FAILED\"] = \"5\";\r\n})(RegionDiscoveryOutcomes || (RegionDiscoveryOutcomes = {}));\r\nvar CacheOutcome;\r\n(function (CacheOutcome) {\r\n    CacheOutcome[\"NO_CACHE_HIT\"] = \"0\";\r\n    CacheOutcome[\"FORCE_REFRESH\"] = \"1\";\r\n    CacheOutcome[\"NO_CACHED_ACCESS_TOKEN\"] = \"2\";\r\n    CacheOutcome[\"CACHED_ACCESS_TOKEN_EXPIRED\"] = \"3\";\r\n    CacheOutcome[\"REFRESH_CACHED_ACCESS_TOKEN\"] = \"4\";\r\n})(CacheOutcome || (CacheOutcome = {}));\n\nexport { AADAuthorityConstants, AADServerParamKeys, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheSchemaType, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, Errors, GrantType, HeaderNames, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, SSOTypes, Separators, THE_FAMILY_ID, ThrottlingConstants };\n//# sourceMappingURL=Constants.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: \"unexpected_error\",\r\n        desc: \"Unexpected error in authentication.\"\r\n    }\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nvar AuthError = /** @class */ (function (_super) {\r\n    __extends(AuthError, _super);\r\n    function AuthError(errorCode, errorMessage, suberror) {\r\n        var _this = this;\r\n        var errorString = errorMessage ? errorCode + \": \" + errorMessage : errorCode;\r\n        _this = _super.call(this, errorString) || this;\r\n        Object.setPrototypeOf(_this, AuthError.prototype);\r\n        _this.errorCode = errorCode || Constants.EMPTY_STRING;\r\n        _this.errorMessage = errorMessage || \"\";\r\n        _this.subError = suberror || \"\";\r\n        _this.name = \"AuthError\";\r\n        return _this;\r\n    }\r\n    AuthError.prototype.setCorrelationId = function (correlationId) {\r\n        this.correlationId = correlationId;\r\n    };\r\n    /**\r\n     * Creates an error that is thrown when something unexpected happens in the library.\r\n     * @param errDesc\r\n     */\r\n    AuthError.createUnexpectedError = function (errDesc) {\r\n        return new AuthError(AuthErrorMessage.unexpectedError.code, AuthErrorMessage.unexpectedError.desc + \": \" + errDesc);\r\n    };\r\n    return AuthError;\r\n}(Error));\n\nexport { AuthError, AuthErrorMessage };\n//# sourceMappingURL=AuthError.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { AuthError } from '../error/AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: function () {\r\n        var notImplErr = \"Crypto interface - createNewGuid() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Decode: function () {\r\n        var notImplErr = \"Crypto interface - base64Decode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    base64Encode: function () {\r\n        var notImplErr = \"Crypto interface - base64Encode() has not been implemented\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    },\r\n    generatePkceCodes: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - generatePkceCodes() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    getPublicKeyThumbprint: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - getPublicKeyThumbprint() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    removeTokenBindingKey: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - removeTokenBindingKey() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    clearKeystore: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - clearKeystore() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    signJwt: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Crypto interface - signJwt() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\n\nexport { DEFAULT_CRYPTO_IMPLEMENTATION };\n//# sourceMappingURL=ICrypto.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: \"client_info_decoding_error\",\r\n        desc: \"The client info could not be parsed/decoded correctly. Please review the trace to determine the root cause.\"\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: \"client_info_empty_error\",\r\n        desc: \"The client info was empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    tokenParsingError: {\r\n        code: \"token_parsing_error\",\r\n        desc: \"Token cannot be parsed. Please review stack trace to determine root cause.\"\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: \"null_or_empty_token\",\r\n        desc: \"The token is null or empty. Please review the trace to determine the root cause.\"\r\n    },\r\n    endpointResolutionError: {\r\n        code: \"endpoints_resolution_error\",\r\n        desc: \"Error: could not resolve endpoints. Please check network and try again.\"\r\n    },\r\n    networkError: {\r\n        code: \"network_error\",\r\n        desc: \"Network request failed. Please check network trace to determine root cause.\"\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: \"openid_config_error\",\r\n        desc: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\"\r\n    },\r\n    hashNotDeserialized: {\r\n        code: \"hash_not_deserialized\",\r\n        desc: \"The hash parameters could not be deserialized. Please review the trace to determine the root cause.\"\r\n    },\r\n    blankGuidGenerated: {\r\n        code: \"blank_guid_generated\",\r\n        desc: \"The guid generated was blank. Please review the trace to determine the root cause.\"\r\n    },\r\n    invalidStateError: {\r\n        code: \"invalid_state\",\r\n        desc: \"State was not the expected format. Please check the logs to determine whether the request was sent using ProtocolUtils.setRequestState().\"\r\n    },\r\n    stateMismatchError: {\r\n        code: \"state_mismatch\",\r\n        desc: \"State mismatch error. Please check your network. Continued requests may cause cache overflow.\"\r\n    },\r\n    stateNotFoundError: {\r\n        code: \"state_not_found\",\r\n        desc: \"State not found\"\r\n    },\r\n    nonceMismatchError: {\r\n        code: \"nonce_mismatch\",\r\n        desc: \"Nonce mismatch error. This may be caused by a race condition in concurrent requests.\"\r\n    },\r\n    nonceNotFoundError: {\r\n        code: \"nonce_not_found\",\r\n        desc: \"nonce not found\"\r\n    },\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No tokens were found for the given scopes, and no authorization code was passed to acquireToken. You must retrieve an authorization code before making a call to acquireToken().\"\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: \"multiple_matching_tokens\",\r\n        desc: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n            \"Call AcquireToken again providing more requirements such as authority or account.\"\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: \"multiple_matching_accounts\",\r\n        desc: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\"\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: \"multiple_matching_appMetadata\",\r\n        desc: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\"\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: \"request_cannot_be_made\",\r\n        desc: \"Token request cannot be made without authorization code or refresh token.\"\r\n    },\r\n    appendEmptyScopeError: {\r\n        code: \"cannot_append_empty_scope\",\r\n        desc: \"Cannot append null or empty scope to ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: \"cannot_remove_empty_scope\",\r\n        desc: \"Cannot remove null or empty scope from ScopeSet. Please check the stack trace for more info.\"\r\n    },\r\n    appendScopeSetError: {\r\n        code: \"cannot_append_scopeset\",\r\n        desc: \"Cannot append ScopeSet due to error.\"\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: \"empty_input_scopeset\",\r\n        desc: \"Empty input ScopeSet cannot be processed.\"\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: \"device_code_polling_cancelled\",\r\n        desc: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\"\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: \"device_code_expired\",\r\n        desc: \"Device code is expired.\"\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: \"device_code_unknown_error\",\r\n        desc: \"Device code stopped polling for unknown reasons.\"\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: \"no_account_in_silent_request\",\r\n        desc: \"Please pass an account object, silent flow is not supported without account information\"\r\n    },\r\n    invalidCacheRecord: {\r\n        code: \"invalid_cache_record\",\r\n        desc: \"Cache record object was null or undefined.\"\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: \"invalid_cache_environment\",\r\n        desc: \"Invalid environment when attempting to create cache entry\"\r\n    },\r\n    noAccountFound: {\r\n        code: \"no_account_found\",\r\n        desc: \"No account found in cache for given key.\"\r\n    },\r\n    CachePluginError: {\r\n        code: \"no cache plugin set on CacheManager\",\r\n        desc: \"ICachePlugin needs to be set before using readFromStorage or writeFromStorage\"\r\n    },\r\n    noCryptoObj: {\r\n        code: \"no_crypto_object\",\r\n        desc: \"No crypto object detected. This is required for the following operation: \"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    unexpectedAccountType: {\r\n        code: \"unexpected_account_type\",\r\n        desc: \"Unexpected account type.\"\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: \"unexpected_credential_type\",\r\n        desc: \"Unexpected credential type.\"\r\n    },\r\n    invalidAssertion: {\r\n        code: \"invalid_assertion\",\r\n        desc: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\"\r\n    },\r\n    invalidClientCredential: {\r\n        code: \"invalid_client_credential\",\r\n        desc: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\"\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: \"token_refresh_required\",\r\n        desc: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\"\r\n    },\r\n    userTimeoutReached: {\r\n        code: \"user_timeout_reached\",\r\n        desc: \"User defined timeout for device code polling reached\",\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: \"token_claims_cnf_required_for_signedjwt\",\r\n        desc: \"Cannot generate a POP jwt if the token_claims are not populated\"\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: \"authorization_code_missing_from_server_response\",\r\n        desc: \"Server response does not contain an authorization code to proceed\"\r\n    },\r\n    noAzureRegionDetected: {\r\n        code: \"no_azure_region_detected\",\r\n        desc: \"No azure region was detected and no fallback was made available\"\r\n    },\r\n    accessTokenEntityNullError: {\r\n        code: \"access_token_entity_null\",\r\n        desc: \"Access token entity is null, please check logs and cache to ensure a valid access token is present.\"\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: \"binding_key_not_removed\",\r\n        desc: \"Could not remove the credential's binding key from storage.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nvar ClientAuthError = /** @class */ (function (_super) {\r\n    __extends(ClientAuthError, _super);\r\n    function ClientAuthError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(_this, ClientAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when client info object doesn't decode correctly.\r\n     * @param caughtError\r\n     */\r\n    ClientAuthError.createClientInfoDecodingError = function (caughtError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoDecodingError.code, ClientAuthErrorMessage.clientInfoDecodingError.desc + \" Failed with error: \" + caughtError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if the client info is empty.\r\n     * @param rawClientInfo\r\n     */\r\n    ClientAuthError.createClientInfoEmptyError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.clientInfoEmptyError.code, \"\" + ClientAuthErrorMessage.clientInfoEmptyError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token extraction errors out.\r\n     * @param err\r\n     */\r\n    ClientAuthError.createTokenParsingError = function (caughtExtractionError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenParsingError.code, ClientAuthErrorMessage.tokenParsingError.desc + \" Failed with error: \" + caughtExtractionError);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the id token string is null or empty.\r\n     * @param invalidRawTokenString\r\n     */\r\n    ClientAuthError.createTokenNullOrEmptyError = function (invalidRawTokenString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nullOrEmptyToken.code, ClientAuthErrorMessage.nullOrEmptyToken.desc + \" Raw Token Value: \" + invalidRawTokenString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the endpoint discovery doesn't complete correctly.\r\n     */\r\n    ClientAuthError.createEndpointDiscoveryIncompleteError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.endpointResolutionError.code, ClientAuthErrorMessage.endpointResolutionError.desc + \" Detail: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the fetch client throws\r\n     */\r\n    ClientAuthError.createNetworkError = function (endpoint, errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.networkError.code, ClientAuthErrorMessage.networkError.desc + \" | Fetch client threw: \" + errDetail + \" | Attempted to reach: \" + endpoint.split(\"?\")[0]);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the openid-configuration endpoint cannot be reached or does not contain the required data\r\n     */\r\n    ClientAuthError.createUnableToGetOpenidConfigError = function (errDetail) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unableToGetOpenidConfigError.code, ClientAuthErrorMessage.unableToGetOpenidConfigError.desc + \" Attempted to retrieve endpoints from: \" + errDetail);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the hash cannot be deserialized.\r\n     * @param hashParamObj\r\n     */\r\n    ClientAuthError.createHashNotDeserializedError = function (hashParamObj) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.hashNotDeserialized.code, ClientAuthErrorMessage.hashNotDeserialized.desc + \" Given Object: \" + hashParamObj);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state cannot be parsed.\r\n     * @param invalidState\r\n     */\r\n    ClientAuthError.createInvalidStateError = function (invalidState, errorString) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidStateError.code, ClientAuthErrorMessage.invalidStateError.desc + \" Invalid State: \" + invalidState + \", Root Err: \" + errorString);\r\n    };\r\n    /**\r\n     * Creates an error thrown when two states do not match.\r\n     */\r\n    ClientAuthError.createStateMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateMismatchError.code, ClientAuthErrorMessage.stateMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the state is not present\r\n     * @param missingState\r\n     */\r\n    ClientAuthError.createStateNotFoundError = function (missingState) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.stateNotFoundError.code, ClientAuthErrorMessage.stateNotFoundError.desc + \":  \" + missingState);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the nonce does not match.\r\n     */\r\n    ClientAuthError.createNonceMismatchError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceMismatchError.code, ClientAuthErrorMessage.nonceMismatchError.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the mnonce is not present\r\n     * @param missingNonce\r\n     */\r\n    ClientAuthError.createNonceNotFoundError = function (missingNonce) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.nonceNotFoundError.code, ClientAuthErrorMessage.nonceNotFoundError.desc + \":  \" + missingNonce);\r\n    };\r\n    /**\r\n     * Throws error when multiple tokens are in cache.\r\n     */\r\n    ClientAuthError.createMultipleMatchingTokensInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingTokens.code, ClientAuthErrorMessage.multipleMatchingTokens.desc + \".\");\r\n    };\r\n    /**\r\n     * Throws error when multiple accounts are in cache for the given params\r\n     */\r\n    ClientAuthError.createMultipleMatchingAccountsInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAccounts.code, ClientAuthErrorMessage.multipleMatchingAccounts.desc);\r\n    };\r\n    /**\r\n     * Throws error when multiple appMetada are in cache for the given clientId.\r\n     */\r\n    ClientAuthError.createMultipleMatchingAppMetadataInCacheError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.multipleMatchingAppMetadata.code, ClientAuthErrorMessage.multipleMatchingAppMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when no auth code or refresh token is given to ServerTokenRequestParameters.\r\n     */\r\n    ClientAuthError.createTokenRequestCannotBeMadeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRequestCannotBeMade.code, ClientAuthErrorMessage.tokenRequestCannotBeMade.desc);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createAppendEmptyScopeToSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendEmptyScopeError.code, ClientAuthErrorMessage.appendEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append a null, undefined or empty scope to a set\r\n     * @param givenScope\r\n     */\r\n    ClientAuthError.createRemoveEmptyScopeFromSetError = function (givenScope) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.removeEmptyScopeError.code, ClientAuthErrorMessage.removeEmptyScopeError.desc + \" Given Scope: \" + givenScope);\r\n    };\r\n    /**\r\n     * Throws error when attempting to append null or empty ScopeSet.\r\n     * @param appendError\r\n     */\r\n    ClientAuthError.createAppendScopeSetError = function (appendError) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.appendScopeSetError.code, ClientAuthErrorMessage.appendScopeSetError.desc + \" Detail Error: \" + appendError);\r\n    };\r\n    /**\r\n     * Throws error if ScopeSet is null or undefined.\r\n     * @param givenScopeSet\r\n     */\r\n    ClientAuthError.createEmptyInputScopeSetError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.emptyInputScopeSetError.code, \"\" + ClientAuthErrorMessage.emptyInputScopeSetError.desc);\r\n    };\r\n    /**\r\n     * Throws error if user sets CancellationToken.cancel = true during polling of token endpoint during device code flow\r\n     */\r\n    ClientAuthError.createDeviceCodeCancelledError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodePollingCancelled.code, \"\" + ClientAuthErrorMessage.DeviceCodePollingCancelled.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeExpiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeExpired.code, \"\" + ClientAuthErrorMessage.DeviceCodeExpired.desc);\r\n    };\r\n    /**\r\n     * Throws error if device code is expired\r\n     */\r\n    ClientAuthError.createDeviceCodeUnknownError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.DeviceCodeUnknownError.code, \"\" + ClientAuthErrorMessage.DeviceCodeUnknownError.desc);\r\n    };\r\n    /**\r\n     * Throws error when silent requests are made without an account object\r\n     */\r\n    ClientAuthError.createNoAccountInSilentRequestError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.NoAccountInSilentRequest.code, \"\" + ClientAuthErrorMessage.NoAccountInSilentRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when cache record is null or undefined.\r\n     */\r\n    ClientAuthError.createNullOrUndefinedCacheRecord = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheRecord.code, ClientAuthErrorMessage.invalidCacheRecord.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided environment is not part of the CloudDiscoveryMetadata object\r\n     */\r\n    ClientAuthError.createInvalidCacheEnvironmentError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheEnvironment.code, ClientAuthErrorMessage.invalidCacheEnvironment.desc);\r\n    };\r\n    /**\r\n     * Throws error when account is not found in cache.\r\n     */\r\n    ClientAuthError.createNoAccountFoundError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAccountFound.code, ClientAuthErrorMessage.noAccountFound.desc);\r\n    };\r\n    /**\r\n     * Throws error if ICachePlugin not set on CacheManager.\r\n     */\r\n    ClientAuthError.createCachePluginError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.CachePluginError.code, \"\" + ClientAuthErrorMessage.CachePluginError.desc);\r\n    };\r\n    /**\r\n     * Throws error if crypto object not found.\r\n     * @param operationName\r\n     */\r\n    ClientAuthError.createNoCryptoObjectError = function (operationName) {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noCryptoObj.code, \"\" + ClientAuthErrorMessage.noCryptoObj.desc + operationName);\r\n    };\r\n    /**\r\n     * Throws error if cache type is invalid.\r\n     */\r\n    ClientAuthError.createInvalidCacheTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidCacheType.code, \"\" + ClientAuthErrorMessage.invalidCacheType.desc);\r\n    };\r\n    /**\r\n     * Throws error if unexpected account type.\r\n     */\r\n    ClientAuthError.createUnexpectedAccountTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedAccountType.code, \"\" + ClientAuthErrorMessage.unexpectedAccountType.desc);\r\n    };\r\n    /**\r\n     * Throws error if unexpected credential type.\r\n     */\r\n    ClientAuthError.createUnexpectedCredentialTypeError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.unexpectedCredentialType.code, \"\" + ClientAuthErrorMessage.unexpectedCredentialType.desc);\r\n    };\r\n    /**\r\n     * Throws error if client assertion is not valid.\r\n     */\r\n    ClientAuthError.createInvalidAssertionError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidAssertion.code, \"\" + ClientAuthErrorMessage.invalidAssertion.desc);\r\n    };\r\n    /**\r\n     * Throws error if client assertion is not valid.\r\n     */\r\n    ClientAuthError.createInvalidCredentialError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.invalidClientCredential.code, \"\" + ClientAuthErrorMessage.invalidClientCredential.desc);\r\n    };\r\n    /**\r\n     * Throws error if token cannot be retrieved from cache due to refresh being required.\r\n     */\r\n    ClientAuthError.createRefreshRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenRefreshRequired.code, ClientAuthErrorMessage.tokenRefreshRequired.desc);\r\n    };\r\n    /**\r\n     * Throws error if the user defined timeout is reached.\r\n     */\r\n    ClientAuthError.createUserTimeoutReachedError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.userTimeoutReached.code, ClientAuthErrorMessage.userTimeoutReached.desc);\r\n    };\r\n    /*\r\n     * Throws error if token claims are not populated for a signed jwt generation\r\n     */\r\n    ClientAuthError.createTokenClaimsRequiredError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.tokenClaimsRequired.code, ClientAuthErrorMessage.tokenClaimsRequired.desc);\r\n    };\r\n    /**\r\n     * Throws error when the authorization code is missing from the server response\r\n     */\r\n    ClientAuthError.createNoAuthCodeInServerResponseError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.noAuthorizationCodeFromServer.code, ClientAuthErrorMessage.noAuthorizationCodeFromServer.desc);\r\n    };\r\n    ClientAuthError.createBindingKeyNotRemovedError = function () {\r\n        return new ClientAuthError(ClientAuthErrorMessage.bindingKeyNotRemovedError.code, ClientAuthErrorMessage.bindingKeyNotRemovedError.desc);\r\n    };\r\n    return ClientAuthError;\r\n}(AuthError));\n\nexport { ClientAuthError, ClientAuthErrorMessage };\n//# sourceMappingURL=ClientAuthError.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nvar StringUtils = /** @class */ (function () {\r\n    function StringUtils() {\r\n    }\r\n    /**\r\n     * decode a JWT\r\n     *\r\n     * @param authToken\r\n     */\r\n    StringUtils.decodeAuthToken = function (authToken) {\r\n        if (StringUtils.isEmpty(authToken)) {\r\n            throw ClientAuthError.createTokenNullOrEmptyError(authToken);\r\n        }\r\n        var tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n        var matches = tokenPartsRegex.exec(authToken);\r\n        if (!matches || matches.length < 4) {\r\n            throw ClientAuthError.createTokenParsingError(\"Given token is malformed: \" + JSON.stringify(authToken));\r\n        }\r\n        var crackedToken = {\r\n            header: matches[1],\r\n            JWSPayload: matches[2],\r\n            JWSSig: matches[3]\r\n        };\r\n        return crackedToken;\r\n    };\r\n    /**\r\n     * Check if a string is empty.\r\n     *\r\n     * @param str\r\n     */\r\n    StringUtils.isEmpty = function (str) {\r\n        return (typeof str === \"undefined\" || !str || 0 === str.length);\r\n    };\r\n    /**\r\n     * Check if stringified object is empty\r\n     * @param strObj\r\n     */\r\n    StringUtils.isEmptyObj = function (strObj) {\r\n        if (strObj && !StringUtils.isEmpty(strObj)) {\r\n            try {\r\n                var obj = JSON.parse(strObj);\r\n                return Object.keys(obj).length === 0;\r\n            }\r\n            catch (e) { }\r\n        }\r\n        return true;\r\n    };\r\n    StringUtils.startsWith = function (str, search) {\r\n        return str.indexOf(search) === 0;\r\n    };\r\n    StringUtils.endsWith = function (str, search) {\r\n        return (str.length >= search.length) && (str.lastIndexOf(search) === (str.length - search.length));\r\n    };\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    StringUtils.queryStringToObject = function (query) {\r\n        var obj = {};\r\n        var params = query.split(\"&\");\r\n        var decode = function (s) { return decodeURIComponent(s.replace(/\\+/g, \" \")); };\r\n        params.forEach(function (pair) {\r\n            if (pair.trim()) {\r\n                var _a = pair.split(/=(.+)/g, 2), key = _a[0], value = _a[1]; // Split on the first occurence of the '=' character\r\n                if (key && value) {\r\n                    obj[decode(key)] = decode(value);\r\n                }\r\n            }\r\n        });\r\n        return obj;\r\n    };\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    StringUtils.trimArrayEntries = function (arr) {\r\n        return arr.map(function (entry) { return entry.trim(); });\r\n    };\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    StringUtils.removeEmptyStringsFromArray = function (arr) {\r\n        return arr.filter(function (entry) {\r\n            return !StringUtils.isEmpty(entry);\r\n        });\r\n    };\r\n    /**\r\n     * Attempts to parse a string into JSON\r\n     * @param str\r\n     */\r\n    StringUtils.jsonParseHelper = function (str) {\r\n        try {\r\n            return JSON.parse(str);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\r\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\r\n     * @param input String to match against\r\n     */\r\n    StringUtils.matchPattern = function (pattern, input) {\r\n        /**\r\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\r\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\r\n         */\r\n        var regex = new RegExp(pattern.replace(/\\\\/g, \"\\\\\\\\\").replace(/\\*/g, \"[^ ]*\").replace(/\\?/g, \"\\\\\\?\")); // eslint-disable-line security/detect-non-literal-regexp\r\n        return regex.test(input);\r\n    };\r\n    return StringUtils;\r\n}());\n\nexport { StringUtils };\n//# sourceMappingURL=StringUtils.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nvar Logger = /** @class */ (function () {\r\n    function Logger(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        var defaultLoggerCallback = function () {\r\n            return;\r\n        };\r\n        this.localCallback = loggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = loggerOptions.piiLoggingEnabled || false;\r\n        this.level = typeof (loggerOptions.logLevel) === \"number\" ? loggerOptions.logLevel : LogLevel.Info;\r\n        this.correlationId = loggerOptions.correlationId || \"\";\r\n        this.packageName = packageName || Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    Logger.prototype.clone = function (packageName, packageVersion, correlationId) {\r\n        return new Logger({ loggerCallback: this.localCallback, piiLoggingEnabled: this.piiLoggingEnabled, logLevel: this.level, correlationId: correlationId || this.correlationId }, packageName, packageVersion);\r\n    };\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    Logger.prototype.logMessage = function (logMessage, options) {\r\n        if ((options.logLevel > this.level) || (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        var timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        var logHeader;\r\n        if (!StringUtils.isEmpty(options.correlationId)) {\r\n            logHeader = \"[\" + timestamp + \"] : [\" + options.correlationId + \"]\";\r\n        }\r\n        else if (!StringUtils.isEmpty(this.correlationId)) {\r\n            logHeader = \"[\" + timestamp + \"] : [\" + this.correlationId + \"]\";\r\n        }\r\n        else {\r\n            logHeader = \"[\" + timestamp + \"]\";\r\n        }\r\n        var log = logHeader + \" : \" + this.packageName + \"@\" + this.packageVersion + \" : \" + LogLevel[options.logLevel] + \" - \" + logMessage;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": \"\"}${options.context ? `:${options.context}` : \"\"}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    };\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    Logger.prototype.executeCallback = function (level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    };\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    Logger.prototype.error = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    Logger.prototype.errorPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    Logger.prototype.warning = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    Logger.prototype.warningPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    Logger.prototype.info = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    Logger.prototype.infoPii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    Logger.prototype.verbose = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    Logger.prototype.verbosePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    Logger.prototype.trace = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    Logger.prototype.tracePii = function (message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || \"\"\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    Logger.prototype.isPiiLoggingEnabled = function () {\r\n        return this.piiLoggingEnabled || false;\r\n    };\r\n    return Logger;\r\n}());\n\nexport { LogLevel, Logger };\n//# sourceMappingURL=Logger.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/* eslint-disable header/header */\r\nvar name = \"@azure/msal-common\";\r\nvar version = \"5.0.1\";\n\nexport { name, version };\n//# sourceMappingURL=packageMetadata.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { CredentialType, CacheType, Constants, AuthenticationScheme, Separators } from '../../utils/Constants.js';\nimport { ClientAuthError } from '../../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<scheme>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      oboAssertion: access token passed in as part of OBO request\r\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\r\n * }\r\n */\r\nvar CredentialEntity = /** @class */ (function () {\r\n    function CredentialEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    CredentialEntity.prototype.generateAccountId = function () {\r\n        return CredentialEntity.generateAccountIdForCacheKey(this.homeAccountId, this.environment);\r\n    };\r\n    /**\r\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n     */\r\n    CredentialEntity.prototype.generateCredentialId = function () {\r\n        return CredentialEntity.generateCredentialIdForCacheKey(this.credentialType, this.clientId, this.realm, this.familyId);\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.prototype.generateTarget = function () {\r\n        return CredentialEntity.generateTargetForCacheKey(this.target);\r\n    };\r\n    /**\r\n     * generates credential key\r\n     */\r\n    CredentialEntity.prototype.generateCredentialKey = function () {\r\n        return CredentialEntity.generateCredentialCacheKey(this.homeAccountId, this.environment, this.credentialType, this.clientId, this.realm, this.target, this.familyId, this.tokenType);\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case credential)\r\n     */\r\n    CredentialEntity.prototype.generateType = function () {\r\n        switch (this.credentialType) {\r\n            case CredentialType.ID_TOKEN:\r\n                return CacheType.ID_TOKEN;\r\n            case CredentialType.ACCESS_TOKEN:\r\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\r\n                return CacheType.ACCESS_TOKEN;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                return CacheType.REFRESH_TOKEN;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedCredentialTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * helper function to return `CredentialType`\r\n     * @param key\r\n     */\r\n    CredentialEntity.getCredentialType = function (key) {\r\n        // First keyword search will match all \"AccessToken\" and \"AccessToken_With_AuthScheme\" credentials\r\n        if (key.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) !== -1) {\r\n            // Perform second search to differentiate between \"AccessToken\" and \"AccessToken_With_AuthScheme\" credential types\r\n            if (key.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) !== -1) {\r\n                return CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n            }\r\n            return CredentialType.ACCESS_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.ID_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.ID_TOKEN;\r\n        }\r\n        else if (key.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) !== -1) {\r\n            return CredentialType.REFRESH_TOKEN;\r\n        }\r\n        return Constants.NOT_DEFINED;\r\n    };\r\n    /**\r\n     * generates credential key\r\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\r\n     */\r\n    CredentialEntity.generateCredentialCacheKey = function (homeAccountId, environment, credentialType, clientId, realm, target, familyId, tokenType) {\r\n        var credentialKey = [\r\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\r\n            this.generateCredentialIdForCacheKey(credentialType, clientId, realm, familyId),\r\n            this.generateTargetForCacheKey(target)\r\n        ];\r\n        // PoP Tokens include scheme in cache key\r\n        if (tokenType === AuthenticationScheme.POP) {\r\n            credentialKey.push(tokenType.toLowerCase());\r\n        }\r\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * generates Account Id for keys\r\n     * @param homeAccountId\r\n     * @param environment\r\n     */\r\n    CredentialEntity.generateAccountIdForCacheKey = function (homeAccountId, environment) {\r\n        var accountId = [homeAccountId, environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generates Credential Id for keys\r\n     * @param credentialType\r\n     * @param realm\r\n     * @param clientId\r\n     * @param familyId\r\n     */\r\n    CredentialEntity.generateCredentialIdForCacheKey = function (credentialType, clientId, realm, familyId) {\r\n        var clientOrFamilyId = credentialType === CredentialType.REFRESH_TOKEN\r\n            ? familyId || clientId\r\n            : clientId;\r\n        var credentialId = [\r\n            credentialType,\r\n            clientOrFamilyId,\r\n            realm || \"\",\r\n        ];\r\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate target key component as per schema: <target>\r\n     */\r\n    CredentialEntity.generateTargetForCacheKey = function (scopes) {\r\n        return (scopes || \"\").toLowerCase();\r\n    };\r\n    return CredentialEntity;\r\n}());\n\nexport { CredentialEntity };\n//# sourceMappingURL=CredentialEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { ClientAuthError } from './ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nvar ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: \"claims_request_parsing_error\",\r\n        desc: \"Could not parse the given claims request object.\"\r\n    },\r\n    authorityUriInsecure: {\r\n        code: \"authority_uri_insecure\",\r\n        desc: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\"\r\n    },\r\n    urlParseError: {\r\n        code: \"url_parse_error\",\r\n        desc: \"URL could not be parsed into appropriate segments.\"\r\n    },\r\n    urlEmptyError: {\r\n        code: \"empty_url_error\",\r\n        desc: \"URL was empty or null.\"\r\n    },\r\n    emptyScopesError: {\r\n        code: \"empty_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\"\r\n    },\r\n    nonArrayScopesError: {\r\n        code: \"nonarray_input_scopes_error\",\r\n        desc: \"Scopes cannot be passed as non-array.\"\r\n    },\r\n    clientIdSingleScopeError: {\r\n        code: \"clientid_input_scopes_error\",\r\n        desc: \"Client ID can only be provided as a single scope.\"\r\n    },\r\n    invalidPrompt: {\r\n        code: \"invalid_prompt_value\",\r\n        desc: \"Supported prompt values are 'login', 'select_account', 'consent', 'create' and 'none'.  Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: \"invalid_claims\",\r\n        desc: \"Given claims parameter must be a stringified JSON object.\"\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: \"token_request_empty\",\r\n        desc: \"Token request was empty and not found in cache.\"\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: \"logout_request_empty\",\r\n        desc: \"The logout request was null or undefined.\"\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: \"invalid_code_challenge_method\",\r\n        desc: \"code_challenge_method passed is invalid. Valid values are \\\"plain\\\" and \\\"S256\\\".\"\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: \"pkce_params_missing\",\r\n        desc: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\"\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: \"invalid_cloud_discovery_metadata\",\r\n        desc: \"Invalid cloudDiscoveryMetadata provided. Must be a JSON object containing tenant_discovery_endpoint and metadata fields\"\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: \"invalid_authority_metadata\",\r\n        desc: \"Invalid authorityMetadata provided. Must by a JSON object containing authorization_endpoint, token_endpoint, end_session_endpoint, issuer fields.\"\r\n    },\r\n    untrustedAuthority: {\r\n        code: \"untrusted_authority\",\r\n        desc: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nvar ClientConfigurationError = /** @class */ (function (_super) {\r\n    __extends(ClientConfigurationError, _super);\r\n    function ClientConfigurationError(errorCode, errorMessage) {\r\n        var _this = _super.call(this, errorCode, errorMessage) || this;\r\n        _this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(_this, ClientConfigurationError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.redirectUriNotSet.code, ClientConfigurationErrorMessage.redirectUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    ClientConfigurationError.createPostLogoutRedirectUriEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.postLogoutUriNotSet.code, ClientConfigurationErrorMessage.postLogoutUriNotSet.desc);\r\n    };\r\n    /**\r\n     * Creates an error thrown when the claims request could not be successfully parsed\r\n     */\r\n    ClientConfigurationError.createClaimsRequestParsingError = function (claimsRequestParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.claimsRequestParsingError.code, ClientConfigurationErrorMessage.claimsRequestParsingError.desc + \" Given value: \" + claimsRequestParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if authority uri is given an insecure protocol.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createInsecureAuthorityUriError = function (urlString) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.authorityUriInsecure.code, ClientConfigurationErrorMessage.authorityUriInsecure.desc + \" Given URI: \" + urlString);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string does not parse into separate segments.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlParseError = function (urlParseError) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlParseError.code, ClientConfigurationErrorMessage.urlParseError.desc + \" Given Error: \" + urlParseError);\r\n    };\r\n    /**\r\n     * Creates an error thrown if URL string is empty or null.\r\n     * @param urlString\r\n     */\r\n    ClientConfigurationError.createUrlEmptyError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.urlEmptyError.code, ClientConfigurationErrorMessage.urlEmptyError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when scopes are empty.\r\n     * @param scopesValue\r\n     */\r\n    ClientConfigurationError.createEmptyScopesArrayError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.emptyScopesError.code, \"\" + ClientConfigurationErrorMessage.emptyScopesError.desc);\r\n    };\r\n    /**\r\n     * Error thrown when client id scope is not provided as single scope.\r\n     * @param inputScopes\r\n     */\r\n    ClientConfigurationError.createClientIdSingleScopeError = function (inputScopes) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.clientIdSingleScopeError.code, ClientConfigurationErrorMessage.clientIdSingleScopeError.desc + \" Given Scopes: \" + inputScopes);\r\n    };\r\n    /**\r\n     * Error thrown when prompt is not an allowed type.\r\n     * @param promptValue\r\n     */\r\n    ClientConfigurationError.createInvalidPromptError = function (promptValue) {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidPrompt.code, ClientConfigurationErrorMessage.invalidPrompt.desc + \" Given value: \" + promptValue);\r\n    };\r\n    /**\r\n     * Creates error thrown when claims parameter is not a stringified JSON object\r\n     */\r\n    ClientConfigurationError.createInvalidClaimsRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidClaimsRequest.code, ClientConfigurationErrorMessage.invalidClaimsRequest.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyLogoutRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.logoutRequestEmptyError.code, ClientConfigurationErrorMessage.logoutRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when token request is empty and nothing cached in storage.\r\n     */\r\n    ClientConfigurationError.createEmptyTokenRequestError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.tokenRequestEmptyError.code, ClientConfigurationErrorMessage.tokenRequestEmptyError.desc);\r\n    };\r\n    /**\r\n     * Throws error when an invalid code_challenge_method is passed by the user\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeMethodError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeMethod.code, ClientConfigurationErrorMessage.invalidCodeChallengeMethod.desc);\r\n    };\r\n    /**\r\n     * Throws error when both params: code_challenge and code_challenge_method are not passed together\r\n     */\r\n    ClientConfigurationError.createInvalidCodeChallengeParamsError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCodeChallengeParams.code, ClientConfigurationErrorMessage.invalidCodeChallengeParams.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidCloudDiscoveryMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.code, ClientConfigurationErrorMessage.invalidCloudDiscoveryMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws an error when the user passes invalid cloudDiscoveryMetadata\r\n     */\r\n    ClientConfigurationError.createInvalidAuthorityMetadataError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.invalidAuthorityMetadata.code, ClientConfigurationErrorMessage.invalidAuthorityMetadata.desc);\r\n    };\r\n    /**\r\n     * Throws error when provided authority is not a member of the trusted host list\r\n     */\r\n    ClientConfigurationError.createUntrustedAuthorityError = function () {\r\n        return new ClientConfigurationError(ClientConfigurationErrorMessage.untrustedAuthority.code, ClientConfigurationErrorMessage.untrustedAuthority.desc);\r\n    };\r\n    return ClientConfigurationError;\r\n}(ClientAuthError));\n\nexport { ClientConfigurationError, ClientConfigurationErrorMessage };\n//# sourceMappingURL=ClientConfigurationError.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __spreadArrays } from '../_virtual/_tslib.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { OIDC_SCOPES } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nvar ScopeSet = /** @class */ (function () {\r\n    function ScopeSet(inputScopes) {\r\n        var _this = this;\r\n        // Filter empty string and null/undefined array items\r\n        var scopeArr = inputScopes ? StringUtils.trimArrayEntries(__spreadArrays(inputScopes)) : [];\r\n        var filteredInput = scopeArr ? StringUtils.removeEmptyStringsFromArray(scopeArr) : [];\r\n        // Validate and filter scopes (validate function throws if validation fails)\r\n        this.validateInputScopes(filteredInput);\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach(function (scope) { return _this.scopes.add(scope); });\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    ScopeSet.fromString = function (inputScopeString) {\r\n        var scopeString = inputScopeString || \"\";\r\n        var inputScopes = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    };\r\n    /**\r\n     * Used to validate the scopes input parameter requested  by the developer.\r\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\r\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\r\n     */\r\n    ScopeSet.prototype.validateInputScopes = function (inputScopes) {\r\n        // Check if scopes are required but not given or is an empty array\r\n        if (!inputScopes || inputScopes.length < 1) {\r\n            throw ClientConfigurationError.createEmptyScopesArrayError();\r\n        }\r\n    };\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.containsScope = function (scope) {\r\n        var lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        var lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return !StringUtils.isEmpty(scope) ? lowerCaseScopesSet.scopes.has(scope.toLowerCase()) : false;\r\n    };\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    ScopeSet.prototype.containsScopeSet = function (scopeSet) {\r\n        var _this = this;\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size && scopeSet.asArray().every(function (scope) { return _this.containsScope(scope); }));\r\n    };\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    ScopeSet.prototype.containsOnlyOIDCScopes = function () {\r\n        var _this = this;\r\n        var defaultScopeCount = 0;\r\n        OIDC_SCOPES.forEach(function (defaultScope) {\r\n            if (_this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n        return this.scopes.size === defaultScopeCount;\r\n    };\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    ScopeSet.prototype.appendScope = function (newScope) {\r\n        if (!StringUtils.isEmpty(newScope)) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    };\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    ScopeSet.prototype.appendScopes = function (newScopes) {\r\n        var _this = this;\r\n        try {\r\n            newScopes.forEach(function (newScope) { return _this.appendScope(newScope); });\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createAppendScopeSetError(e);\r\n        }\r\n    };\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    ScopeSet.prototype.removeScope = function (scope) {\r\n        if (StringUtils.isEmpty(scope)) {\r\n            throw ClientAuthError.createRemoveEmptyScopeFromSetError(scope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    };\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    ScopeSet.prototype.removeOIDCScopes = function () {\r\n        var _this = this;\r\n        OIDC_SCOPES.forEach(function (defaultScope) {\r\n            _this.scopes.delete(defaultScope);\r\n        });\r\n    };\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.unionScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError();\r\n        }\r\n        var unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach(function (scope) { return unionScopes.add(scope.toLowerCase()); });\r\n        this.scopes.forEach(function (scope) { return unionScopes.add(scope.toLowerCase()); });\r\n        return unionScopes;\r\n    };\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    ScopeSet.prototype.intersectingScopeSets = function (otherScopes) {\r\n        if (!otherScopes) {\r\n            throw ClientAuthError.createEmptyInputScopeSetError();\r\n        }\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        var unionScopes = this.unionScopeSets(otherScopes);\r\n        var sizeOtherScopes = otherScopes.getScopeCount();\r\n        var sizeThisScopes = this.getScopeCount();\r\n        var sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < (sizeThisScopes + sizeOtherScopes);\r\n    };\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    ScopeSet.prototype.getScopeCount = function () {\r\n        return this.scopes.size;\r\n    };\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    ScopeSet.prototype.asArray = function () {\r\n        var array = [];\r\n        this.scopes.forEach(function (val) { return array.push(val); });\r\n        return array;\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    ScopeSet.prototype.printScopes = function () {\r\n        if (this.scopes) {\r\n            var scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    ScopeSet.prototype.printScopesLowerCase = function () {\r\n        return this.printScopes().toLowerCase();\r\n    };\r\n    return ScopeSet;\r\n}());\n\nexport { ScopeSet };\n//# sourceMappingURL=ScopeSet.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { Constants, Separators } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, crypto) {\r\n    if (StringUtils.isEmpty(rawClientInfo)) {\r\n        throw ClientAuthError.createClientInfoEmptyError();\r\n    }\r\n    try {\r\n        var decodedClientInfo = crypto.base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw ClientAuthError.createClientInfoDecodingError(e);\r\n    }\r\n}\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\r\n    if (StringUtils.isEmpty(homeAccountId)) {\r\n        throw ClientAuthError.createClientInfoDecodingError(\"Home account ID was empty.\");\r\n    }\r\n    var clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid: clientInfoParts.length < 2 ? Constants.EMPTY_STRING : clientInfoParts[1]\r\n    };\r\n}\n\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };\n//# sourceMappingURL=ClientInfo.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nvar AuthorityType;\r\n(function (AuthorityType) {\r\n    AuthorityType[AuthorityType[\"Default\"] = 0] = \"Default\";\r\n    AuthorityType[AuthorityType[\"Adfs\"] = 1] = \"Adfs\";\r\n})(AuthorityType || (AuthorityType = {}));\n\nexport { AuthorityType };\n//# sourceMappingURL=AuthorityType.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { Separators, CacheAccountType, CacheType, Constants } from '../../utils/Constants.js';\nimport { buildClientInfo } from '../../account/ClientInfo.js';\nimport { StringUtils } from '../../utils/StringUtils.js';\nimport { ClientAuthError } from '../../error/ClientAuthError.js';\nimport { AuthorityType } from '../../authority/AuthorityType.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      clientInfo: Full base64 encoded client info received from ESTS\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n *      oboAssertion: access token passed in as part of OBO request\r\n *      idTokenClaims: Object containing claims parsed from ID token\r\n * }\r\n */\r\nvar AccountEntity = /** @class */ (function () {\r\n    function AccountEntity() {\r\n    }\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    AccountEntity.prototype.generateAccountId = function () {\r\n        var accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    AccountEntity.prototype.generateAccountKey = function () {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId\r\n        });\r\n    };\r\n    /**\r\n     * returns the type of the cache (in this case account)\r\n     */\r\n    AccountEntity.prototype.generateType = function () {\r\n        switch (this.authorityType) {\r\n            case CacheAccountType.ADFS_ACCOUNT_TYPE:\r\n                return CacheType.ADFS;\r\n            case CacheAccountType.MSAV1_ACCOUNT_TYPE:\r\n                return CacheType.MSA;\r\n            case CacheAccountType.MSSTS_ACCOUNT_TYPE:\r\n                return CacheType.MSSTS;\r\n            case CacheAccountType.GENERIC_ACCOUNT_TYPE:\r\n                return CacheType.GENERIC;\r\n            default: {\r\n                throw ClientAuthError.createUnexpectedAccountTypeError();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    AccountEntity.prototype.getAccountInfo = function () {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n            name: this.name,\r\n            idTokenClaims: this.idTokenClaims\r\n        };\r\n    };\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    AccountEntity.generateAccountCacheKey = function (accountInterface) {\r\n        var accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\r\n     * @param clientInfo\r\n     * @param authority\r\n     * @param idToken\r\n     * @param policy\r\n     */\r\n    AccountEntity.createAccount = function (clientInfo, homeAccountId, idToken, authority, oboAssertion, cloudGraphHostName, msGraphHost, environment) {\r\n        var _a, _b, _c, _d, _e, _f;\r\n        var account = new AccountEntity();\r\n        account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        account.clientInfo = clientInfo;\r\n        account.homeAccountId = homeAccountId;\r\n        var env = environment || (authority && authority.getPreferredCache());\r\n        if (!env) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        account.environment = env;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm = ((_a = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _a === void 0 ? void 0 : _a.tid) || \"\";\r\n        account.oboAssertion = oboAssertion;\r\n        if (idToken) {\r\n            account.idTokenClaims = idToken.claims;\r\n            // How do you account for MSA CID here?\r\n            account.localAccountId = ((_b = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _b === void 0 ? void 0 : _b.oid) || ((_c = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _c === void 0 ? void 0 : _c.sub) || \"\";\r\n            /*\r\n             * In B2C scenarios the emails claim is used instead of preferred_username and it is an array. In most cases it will contain a single email.\r\n             * This field should not be relied upon if a custom policy is configured to return more than 1 email.\r\n             */\r\n            account.username = ((_d = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _d === void 0 ? void 0 : _d.preferred_username) || (((_e = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _e === void 0 ? void 0 : _e.emails) ? idToken.claims.emails[0] : \"\");\r\n            account.name = (_f = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _f === void 0 ? void 0 : _f.name;\r\n        }\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        return account;\r\n    };\r\n    /**\r\n     * Builds non-AAD/ADFS account.\r\n     * @param authority\r\n     * @param idToken\r\n     */\r\n    AccountEntity.createGenericAccount = function (homeAccountId, idToken, authority, oboAssertion, cloudGraphHostName, msGraphHost, environment) {\r\n        var _a, _b, _c, _d;\r\n        var account = new AccountEntity();\r\n        account.authorityType = (authority && authority.authorityType === AuthorityType.Adfs) ? CacheAccountType.ADFS_ACCOUNT_TYPE : CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        account.homeAccountId = homeAccountId;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm = \"\";\r\n        account.oboAssertion = oboAssertion;\r\n        var env = environment || authority && authority.getPreferredCache();\r\n        if (!env) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        if (idToken) {\r\n            // How do you account for MSA CID here?\r\n            account.localAccountId = ((_a = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _a === void 0 ? void 0 : _a.oid) || ((_b = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _b === void 0 ? void 0 : _b.sub) || \"\";\r\n            // upn claim for most ADFS scenarios\r\n            account.username = ((_c = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _c === void 0 ? void 0 : _c.upn) || \"\";\r\n            account.name = ((_d = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _d === void 0 ? void 0 : _d.name) || \"\";\r\n            account.idTokenClaims = idToken === null || idToken === void 0 ? void 0 : idToken.claims;\r\n        }\r\n        account.environment = env;\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        /*\r\n         * add uniqueName to claims\r\n         * account.name = idToken.claims.uniqueName;\r\n         */\r\n        return account;\r\n    };\r\n    /**\r\n     * Generate HomeAccountId from server response\r\n     * @param serverClientInfo\r\n     * @param authType\r\n     */\r\n    AccountEntity.generateHomeAccountId = function (serverClientInfo, authType, logger, cryptoObj, idToken) {\r\n        var _a;\r\n        var accountId = ((_a = idToken === null || idToken === void 0 ? void 0 : idToken.claims) === null || _a === void 0 ? void 0 : _a.sub) ? idToken.claims.sub : Constants.EMPTY_STRING;\r\n        // since ADFS does not have tid and does not set client_info\r\n        if (authType === AuthorityType.Adfs) {\r\n            return accountId;\r\n        }\r\n        // for cases where there is clientInfo\r\n        if (serverClientInfo) {\r\n            try {\r\n                var clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\r\n                if (!StringUtils.isEmpty(clientInfo.uid) && !StringUtils.isEmpty(clientInfo.utid)) {\r\n                    return \"\" + clientInfo.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfo.utid;\r\n                }\r\n            }\r\n            catch (e) { }\r\n        }\r\n        // default to \"sub\" claim\r\n        logger.verbose(\"No client info in response\");\r\n        return accountId;\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    AccountEntity.isAccountEntity = function (entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"localAccountId\") &&\r\n            entity.hasOwnProperty(\"username\") &&\r\n            entity.hasOwnProperty(\"authorityType\"));\r\n    };\r\n    /**\r\n     * Helper function to determine whether 2 accountInfo objects represent the same account\r\n     * @param accountA\r\n     * @param accountB\r\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\r\n     */\r\n    AccountEntity.accountInfoIsEqual = function (accountA, accountB, compareClaims) {\r\n        if (!accountA || !accountB) {\r\n            return false;\r\n        }\r\n        var claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\r\n        if (compareClaims) {\r\n            var accountAClaims = (accountA.idTokenClaims || {});\r\n            var accountBClaims = (accountB.idTokenClaims || {});\r\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\r\n            claimsMatch = (accountAClaims.iat === accountBClaims.iat) &&\r\n                (accountAClaims.nonce === accountBClaims.nonce);\r\n        }\r\n        return (accountA.homeAccountId === accountB.homeAccountId) &&\r\n            (accountA.localAccountId === accountB.localAccountId) &&\r\n            (accountA.username === accountB.username) &&\r\n            (accountA.tenantId === accountB.tenantId) &&\r\n            (accountA.environment === accountB.environment) &&\r\n            claimsMatch;\r\n    };\r\n    return AccountEntity;\r\n}());\n\nexport { AccountEntity };\n//# sourceMappingURL=AccountEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * JWT Token representation class. Parses token string and generates claims object.\r\n */\r\nvar AuthToken = /** @class */ (function () {\r\n    function AuthToken(rawToken, crypto) {\r\n        if (StringUtils.isEmpty(rawToken)) {\r\n            throw ClientAuthError.createTokenNullOrEmptyError(rawToken);\r\n        }\r\n        this.rawToken = rawToken;\r\n        this.claims = AuthToken.extractTokenClaims(rawToken, crypto);\r\n    }\r\n    /**\r\n     * Extract token by decoding the rawToken\r\n     *\r\n     * @param encodedToken\r\n     */\r\n    AuthToken.extractTokenClaims = function (encodedToken, crypto) {\r\n        var decodedToken = StringUtils.decodeAuthToken(encodedToken);\r\n        // token will be decoded to get the username\r\n        try {\r\n            var base64TokenPayload = decodedToken.JWSPayload;\r\n            // base64Decode() should throw an error if there is an issue\r\n            var base64Decoded = crypto.base64Decode(base64TokenPayload);\r\n            return JSON.parse(base64Decoded);\r\n        }\r\n        catch (err) {\r\n            throw ClientAuthError.createTokenParsingError(err);\r\n        }\r\n    };\r\n    return AuthToken;\r\n}());\n\nexport { AuthToken };\n//# sourceMappingURL=AuthToken.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator, __extends } from '../_virtual/_tslib.js';\nimport { Constants, CredentialType, AuthenticationScheme, CacheSchemaType, THE_FAMILY_ID, APP_METADATA, AUTHORITY_METADATA_CONSTANTS } from '../utils/Constants.js';\nimport { CredentialEntity } from './entities/CredentialEntity.js';\nimport { ScopeSet } from '../request/ScopeSet.js';\nimport { AccountEntity } from './entities/AccountEntity.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { AuthToken } from '../account/AuthToken.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n */\r\nvar CacheManager = /** @class */ (function () {\r\n    function CacheManager(clientId, cryptoImpl) {\r\n        this.clientId = clientId;\r\n        this.cryptoImpl = cryptoImpl;\r\n    }\r\n    /**\r\n     * Returns all accounts in cache\r\n     */\r\n    CacheManager.prototype.getAllAccounts = function () {\r\n        var _this = this;\r\n        var currentAccounts = this.getAccountsFilteredBy();\r\n        var accountValues = Object.keys(currentAccounts).map(function (accountKey) { return currentAccounts[accountKey]; });\r\n        var numAccounts = accountValues.length;\r\n        if (numAccounts < 1) {\r\n            return [];\r\n        }\r\n        else {\r\n            var allAccounts = accountValues.map(function (value) {\r\n                var accountEntity = CacheManager.toObject(new AccountEntity(), value);\r\n                var accountInfo = accountEntity.getAccountInfo();\r\n                var idToken = _this.readIdTokenFromCache(_this.clientId, accountInfo);\r\n                if (idToken && !accountInfo.idTokenClaims) {\r\n                    accountInfo.idTokenClaims = new AuthToken(idToken.secret, _this.cryptoImpl).claims;\r\n                }\r\n                return accountInfo;\r\n            });\r\n            return allAccounts;\r\n        }\r\n    };\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord\r\n     */\r\n    CacheManager.prototype.saveCacheRecord = function (cacheRecord) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!cacheRecord) {\r\n                            throw ClientAuthError.createNullOrUndefinedCacheRecord();\r\n                        }\r\n                        if (!!cacheRecord.account) {\r\n                            this.setAccount(cacheRecord.account);\r\n                        }\r\n                        if (!!cacheRecord.idToken) {\r\n                            this.setIdTokenCredential(cacheRecord.idToken);\r\n                        }\r\n                        if (!!!cacheRecord.accessToken) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.saveAccessToken(cacheRecord.accessToken)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        if (!!cacheRecord.refreshToken) {\r\n                            this.setRefreshTokenCredential(cacheRecord.refreshToken);\r\n                        }\r\n                        if (!!cacheRecord.appMetadata) {\r\n                            this.setAppMetadata(cacheRecord.appMetadata);\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.saveAccessToken = function (credential) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var currentTokenCache, currentScopes, currentAccessTokens, removedAccessTokens_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        currentTokenCache = this.getCredentialsFilteredBy({\r\n                            clientId: credential.clientId,\r\n                            credentialType: credential.credentialType,\r\n                            environment: credential.environment,\r\n                            homeAccountId: credential.homeAccountId,\r\n                            realm: credential.realm,\r\n                            tokenType: credential.tokenType\r\n                        });\r\n                        currentScopes = ScopeSet.fromString(credential.target);\r\n                        currentAccessTokens = Object.keys(currentTokenCache.accessTokens).map(function (key) { return currentTokenCache.accessTokens[key]; });\r\n                        if (!currentAccessTokens) return [3 /*break*/, 2];\r\n                        removedAccessTokens_1 = [];\r\n                        currentAccessTokens.forEach(function (tokenEntity) {\r\n                            var tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                            if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                                removedAccessTokens_1.push(_this.removeCredential(tokenEntity));\r\n                            }\r\n                        });\r\n                        return [4 /*yield*/, Promise.all(removedAccessTokens_1)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.setAccessTokenCredential(credential);\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredBy = function (accountFilter) {\r\n        return this.getAccountsFilteredByInternal(accountFilter ? accountFilter.homeAccountId : \"\", accountFilter ? accountFilter.environment : \"\", accountFilter ? accountFilter.realm : \"\");\r\n    };\r\n    /**\r\n     * retrieve accounts matching all provided filters; if no filter is set, get all accounts\r\n     * not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.getAccountsFilteredByInternal = function (homeAccountId, environment, realm) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingAccounts = {};\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            var entity = _this.getAccount(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!homeAccountId && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!environment && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!!realm && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            matchingAccounts[cacheKey] = entity;\r\n        });\r\n        return matchingAccounts;\r\n    };\r\n    /**\r\n     * retrieve credentails matching all provided filters; if no filter is set, get all credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredBy = function (filter) {\r\n        return this.getCredentialsFilteredByInternal(filter.homeAccountId, filter.environment, filter.credentialType, filter.clientId, filter.familyId, filter.realm, filter.target, filter.oboAssertion, filter.tokenType);\r\n    };\r\n    /**\r\n     * Support function to help match credentials\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param credentialType\r\n     * @param clientId\r\n     * @param realm\r\n     * @param target\r\n     * @param oboAssertion\r\n     * @param tokenType\r\n     */\r\n    CacheManager.prototype.getCredentialsFilteredByInternal = function (homeAccountId, environment, credentialType, clientId, familyId, realm, target, oboAssertion, tokenType) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingCredentials = {\r\n            idTokens: {},\r\n            accessTokens: {},\r\n            refreshTokens: {},\r\n        };\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-credential type cache entities\r\n            var credType = CredentialEntity.getCredentialType(cacheKey);\r\n            if (credType === Constants.NOT_DEFINED) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            var entity = _this.getSpecificCredential(cacheKey, credType);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!oboAssertion && !_this.matchOboAssertion(entity, oboAssertion)) {\r\n                return;\r\n            }\r\n            if (!!homeAccountId && !_this.matchHomeAccountId(entity, homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!environment && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!!realm && !_this.matchRealm(entity, realm)) {\r\n                return;\r\n            }\r\n            if (!!credentialType && !_this.matchCredentialType(entity, credentialType)) {\r\n                return;\r\n            }\r\n            if (!!clientId && !_this.matchClientId(entity, clientId)) {\r\n                return;\r\n            }\r\n            if (!!familyId && !_this.matchFamilyId(entity, familyId)) {\r\n                return;\r\n            }\r\n            /*\r\n             * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n             * Resource specific refresh tokens case will be added when the support is deemed necessary\r\n             */\r\n            if (!!target && !_this.matchTarget(entity, target)) {\r\n                return;\r\n            }\r\n            if (credentialType === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\r\n                if (!!tokenType && !_this.matchTokenType(entity, tokenType)) {\r\n                    return;\r\n                }\r\n                // This check avoids matching outdated POP tokens that don't have the <-scheme> in the cache key\r\n                if (cacheKey.indexOf(AuthenticationScheme.POP) === -1) {\r\n                    // AccessToken_With_AuthScheme that doesn't have pop in the key is outdated\r\n                    _this.removeItem(cacheKey, CacheSchemaType.CREDENTIAL);\r\n                    return;\r\n                }\r\n            }\r\n            switch (credType) {\r\n                case CredentialType.ID_TOKEN:\r\n                    matchingCredentials.idTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.ACCESS_TOKEN:\r\n                case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\r\n                    matchingCredentials.accessTokens[cacheKey] = entity;\r\n                    break;\r\n                case CredentialType.REFRESH_TOKEN:\r\n                    matchingCredentials.refreshTokens[cacheKey] = entity;\r\n                    break;\r\n            }\r\n        });\r\n        return matchingCredentials;\r\n    };\r\n    /**\r\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\r\n     * @param filter\r\n     */\r\n    CacheManager.prototype.getAppMetadataFilteredBy = function (filter) {\r\n        return this.getAppMetadataFilteredByInternal(filter.environment, filter.clientId);\r\n    };\r\n    /**\r\n     * Support function to help match appMetadata\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.getAppMetadataFilteredByInternal = function (environment, clientId) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        var matchingAppMetadata = {};\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-appMetadata type cache entities\r\n            if (!_this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            var entity = _this.getAppMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!environment && !_this.matchEnvironment(entity, environment)) {\r\n                return;\r\n            }\r\n            if (!!clientId && !_this.matchClientId(entity, clientId)) {\r\n                return;\r\n            }\r\n            matchingAppMetadata[cacheKey] = entity;\r\n        });\r\n        return matchingAppMetadata;\r\n    };\r\n    /**\r\n     * retrieve authorityMetadata that contains a matching alias\r\n     * @param filter\r\n     */\r\n    CacheManager.prototype.getAuthorityMetadataByAlias = function (host) {\r\n        var _this = this;\r\n        var allCacheKeys = this.getAuthorityMetadataKeys();\r\n        var matchedEntity = null;\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            // don't parse any non-authorityMetadata type cache entities\r\n            if (!_this.isAuthorityMetadata(cacheKey) || cacheKey.indexOf(_this.clientId) === -1) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            var entity = _this.getAuthorityMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (entity.aliases.indexOf(host) === -1) {\r\n                return;\r\n            }\r\n            matchedEntity = entity;\r\n        });\r\n        return matchedEntity;\r\n    };\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    CacheManager.prototype.removeAllAccounts = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var allCacheKeys, removedAccounts;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        allCacheKeys = this.getKeys();\r\n                        removedAccounts = [];\r\n                        allCacheKeys.forEach(function (cacheKey) {\r\n                            var entity = _this.getAccount(cacheKey);\r\n                            if (!entity) {\r\n                                return;\r\n                            }\r\n                            removedAccounts.push(_this.removeAccount(cacheKey));\r\n                        });\r\n                        return [4 /*yield*/, Promise.all(removedAccounts)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccount = function (accountKey) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var account;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        account = this.getAccount(accountKey);\r\n                        if (!account) {\r\n                            throw ClientAuthError.createNoAccountFoundError();\r\n                        }\r\n                        return [4 /*yield*/, this.removeAccountContext(account)];\r\n                    case 1: return [2 /*return*/, ((_a.sent()) && this.removeItem(accountKey, CacheSchemaType.ACCOUNT))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * returns a boolean if the given account is removed\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.removeAccountContext = function (account) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var allCacheKeys, accountId, removedCredentials;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        allCacheKeys = this.getKeys();\r\n                        accountId = account.generateAccountId();\r\n                        removedCredentials = [];\r\n                        allCacheKeys.forEach(function (cacheKey) {\r\n                            // don't parse any non-credential type cache entities\r\n                            var credType = CredentialEntity.getCredentialType(cacheKey);\r\n                            if (credType === Constants.NOT_DEFINED) {\r\n                                return;\r\n                            }\r\n                            var cacheEntity = _this.getSpecificCredential(cacheKey, credType);\r\n                            if (!!cacheEntity && accountId === cacheEntity.generateAccountId()) {\r\n                                removedCredentials.push(_this.removeCredential(cacheEntity));\r\n                            }\r\n                        });\r\n                        return [4 /*yield*/, Promise.all(removedCredentials)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    CacheManager.prototype.removeCredential = function (credential) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var key, accessTokenWithAuthSchemeEntity, kid;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        key = credential.generateCredentialKey();\r\n                        if (!(credential.credentialType.toLowerCase() === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase())) return [3 /*break*/, 4];\r\n                        accessTokenWithAuthSchemeEntity = credential;\r\n                        kid = accessTokenWithAuthSchemeEntity.keyId;\r\n                        if (!kid) return [3 /*break*/, 4];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.cryptoImpl.removeTokenBindingKey(kid)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a.sent();\r\n                        throw ClientAuthError.createBindingKeyNotRemovedError();\r\n                    case 4: return [2 /*return*/, this.removeItem(key, CacheSchemaType.CREDENTIAL)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    CacheManager.prototype.removeAppMetadata = function () {\r\n        var _this = this;\r\n        var allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach(function (cacheKey) {\r\n            if (_this.isAppMetadata(cacheKey)) {\r\n                _this.removeItem(cacheKey, CacheSchemaType.APP_METADATA);\r\n            }\r\n        });\r\n        return true;\r\n    };\r\n    /**\r\n     * Retrieve the cached credentials into a cacherecord\r\n     * @param account\r\n     * @param clientId\r\n     * @param scopes\r\n     * @param environment\r\n     * @param authScheme\r\n     */\r\n    CacheManager.prototype.readCacheRecord = function (account, clientId, scopes, environment, authScheme) {\r\n        var cachedAccount = this.readAccountFromCache(account);\r\n        var cachedIdToken = this.readIdTokenFromCache(clientId, account);\r\n        var cachedAccessToken = this.readAccessTokenFromCache(clientId, account, scopes, authScheme);\r\n        var cachedRefreshToken = this.readRefreshTokenFromCache(clientId, account, false);\r\n        var cachedAppMetadata = this.readAppMetadataFromCache(environment, clientId);\r\n        if (cachedAccount && cachedIdToken) {\r\n            cachedAccount.idTokenClaims = new AuthToken(cachedIdToken.secret, this.cryptoImpl).claims;\r\n        }\r\n        return {\r\n            account: cachedAccount,\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n            refreshToken: cachedRefreshToken,\r\n            appMetadata: cachedAppMetadata,\r\n        };\r\n    };\r\n    /**\r\n     * Retrieve AccountEntity from cache\r\n     * @param account\r\n     */\r\n    CacheManager.prototype.readAccountFromCache = function (account) {\r\n        var accountKey = AccountEntity.generateAccountCacheKey(account);\r\n        return this.getAccount(accountKey);\r\n    };\r\n    /**\r\n     * Retrieve IdTokenEntity from cache\r\n     * @param clientId\r\n     * @param account\r\n     * @param inputRealm\r\n     */\r\n    CacheManager.prototype.readIdTokenFromCache = function (clientId, account) {\r\n        var idTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.ID_TOKEN,\r\n            clientId: clientId,\r\n            realm: account.tenantId,\r\n        };\r\n        var credentialCache = this.getCredentialsFilteredBy(idTokenFilter);\r\n        var idTokens = Object.keys(credentialCache.idTokens).map(function (key) { return credentialCache.idTokens[key]; });\r\n        var numIdTokens = idTokens.length;\r\n        if (numIdTokens < 1) {\r\n            return null;\r\n        }\r\n        else if (numIdTokens > 1) {\r\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\r\n        }\r\n        return idTokens[0];\r\n    };\r\n    /**\r\n     * Retrieve AccessTokenEntity from cache\r\n     * @param clientId\r\n     * @param account\r\n     * @param scopes\r\n     * @param authScheme\r\n     */\r\n    CacheManager.prototype.readAccessTokenFromCache = function (clientId, account, scopes, authScheme) {\r\n        // Distinguish between Bearer and PoP token cache types\r\n        var credentialType = (authScheme === AuthenticationScheme.POP) ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME : CredentialType.ACCESS_TOKEN;\r\n        var accessTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: credentialType,\r\n            clientId: clientId,\r\n            realm: account.tenantId,\r\n            target: scopes.printScopesLowerCase(),\r\n            tokenType: authScheme\r\n        };\r\n        var credentialCache = this.getCredentialsFilteredBy(accessTokenFilter);\r\n        var accessTokens = Object.keys(credentialCache.accessTokens).map(function (key) { return credentialCache.accessTokens[key]; });\r\n        var numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            return null;\r\n        }\r\n        else if (numAccessTokens > 1) {\r\n            throw ClientAuthError.createMultipleMatchingTokensInCacheError();\r\n        }\r\n        return accessTokens[0];\r\n    };\r\n    /**\r\n     * Helper to retrieve the appropriate refresh token from cache\r\n     * @param clientId\r\n     * @param account\r\n     * @param familyRT\r\n     */\r\n    CacheManager.prototype.readRefreshTokenFromCache = function (clientId, account, familyRT) {\r\n        var id = familyRT ? THE_FAMILY_ID : undefined;\r\n        var refreshTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.REFRESH_TOKEN,\r\n            clientId: clientId,\r\n            familyId: id\r\n        };\r\n        var credentialCache = this.getCredentialsFilteredBy(refreshTokenFilter);\r\n        var refreshTokens = Object.keys(credentialCache.refreshTokens).map(function (key) { return credentialCache.refreshTokens[key]; });\r\n        var numRefreshTokens = refreshTokens.length;\r\n        if (numRefreshTokens < 1) {\r\n            return null;\r\n        }\r\n        // address the else case after remove functions address environment aliases\r\n        return refreshTokens[0];\r\n    };\r\n    /**\r\n     * Retrieve AppMetadataEntity from cache\r\n     */\r\n    CacheManager.prototype.readAppMetadataFromCache = function (environment, clientId) {\r\n        var appMetadataFilter = {\r\n            environment: environment,\r\n            clientId: clientId,\r\n        };\r\n        var appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\r\n        var appMetadataEntries = Object.keys(appMetadata).map(function (key) { return appMetadata[key]; });\r\n        var numAppMetadata = appMetadataEntries.length;\r\n        if (numAppMetadata < 1) {\r\n            return null;\r\n        }\r\n        else if (numAppMetadata > 1) {\r\n            throw ClientAuthError.createMultipleMatchingAppMetadataInCacheError();\r\n        }\r\n        return appMetadataEntries[0];\r\n    };\r\n    /**\r\n     * Return the family_id value associated  with FOCI\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.isAppMetadataFOCI = function (environment, clientId) {\r\n        var appMetadata = this.readAppMetadataFromCache(environment, clientId);\r\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\r\n    };\r\n    /**\r\n     * helper to match account ids\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    CacheManager.prototype.matchHomeAccountId = function (entity, homeAccountId) {\r\n        return !!(entity.homeAccountId && homeAccountId === entity.homeAccountId);\r\n    };\r\n    /**\r\n     * helper to match assertion\r\n     * @param value\r\n     * @param oboAssertion\r\n     */\r\n    CacheManager.prototype.matchOboAssertion = function (entity, oboAssertion) {\r\n        return !!(entity.oboAssertion && oboAssertion === entity.oboAssertion);\r\n    };\r\n    /**\r\n     * helper to match environment\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    CacheManager.prototype.matchEnvironment = function (entity, environment) {\r\n        var cloudMetadata = this.getAuthorityMetadataByAlias(environment);\r\n        if (cloudMetadata && cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * helper to match credential type\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    CacheManager.prototype.matchCredentialType = function (entity, credentialType) {\r\n        return (entity.credentialType && credentialType.toLowerCase() === entity.credentialType.toLowerCase());\r\n    };\r\n    /**\r\n     * helper to match client ids\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    CacheManager.prototype.matchClientId = function (entity, clientId) {\r\n        return !!(entity.clientId && clientId === entity.clientId);\r\n    };\r\n    /**\r\n     * helper to match family ids\r\n     * @param entity\r\n     * @param familyId\r\n     */\r\n    CacheManager.prototype.matchFamilyId = function (entity, familyId) {\r\n        return !!(entity.familyId && familyId === entity.familyId);\r\n    };\r\n    /**\r\n     * helper to match realm\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    CacheManager.prototype.matchRealm = function (entity, realm) {\r\n        return !!(entity.realm && realm === entity.realm);\r\n    };\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    CacheManager.prototype.matchTarget = function (entity, target) {\r\n        var isNotAccessTokenCredential = (entity.credentialType !== CredentialType.ACCESS_TOKEN && entity.credentialType !== CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME);\r\n        if (isNotAccessTokenCredential || !entity.target) {\r\n            return false;\r\n        }\r\n        var entityScopeSet = ScopeSet.fromString(entity.target);\r\n        var requestTargetScopeSet = ScopeSet.fromString(target);\r\n        if (!requestTargetScopeSet.containsOnlyOIDCScopes()) {\r\n            requestTargetScopeSet.removeOIDCScopes(); // ignore OIDC scopes\r\n        }\r\n        else {\r\n            requestTargetScopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n        }\r\n        return entityScopeSet.containsScopeSet(requestTargetScopeSet);\r\n    };\r\n    /**\r\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param tokenType\r\n     */\r\n    CacheManager.prototype.matchTokenType = function (entity, tokenType) {\r\n        return !!(entity.tokenType && entity.tokenType === tokenType);\r\n    };\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.isAppMetadata = function (key) {\r\n        return key.indexOf(APP_METADATA) !== -1;\r\n    };\r\n    /**\r\n     * returns if a given cache entity is of the type authoritymetadata\r\n     * @param key\r\n     */\r\n    CacheManager.prototype.isAuthorityMetadata = function (key) {\r\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\r\n    };\r\n    /**\r\n     * returns cache key used for cloud instance metadata\r\n     */\r\n    CacheManager.prototype.generateAuthorityMetadataCacheKey = function (authority) {\r\n        return AUTHORITY_METADATA_CONSTANTS.CACHE_KEY + \"-\" + this.clientId + \"-\" + authority;\r\n    };\r\n    /**\r\n     * Returns the specific credential (IdToken/AccessToken/RefreshToken) from the cache\r\n     * @param key\r\n     * @param credType\r\n     */\r\n    CacheManager.prototype.getSpecificCredential = function (key, credType) {\r\n        switch (credType) {\r\n            case CredentialType.ID_TOKEN: {\r\n                return this.getIdTokenCredential(key);\r\n            }\r\n            case CredentialType.ACCESS_TOKEN:\r\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME: {\r\n                return this.getAccessTokenCredential(key);\r\n            }\r\n            case CredentialType.REFRESH_TOKEN: {\r\n                return this.getRefreshTokenCredential(key);\r\n            }\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    CacheManager.toObject = function (obj, json) {\r\n        for (var propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    };\r\n    return CacheManager;\r\n}());\r\nvar DefaultStorageClass = /** @class */ (function (_super) {\r\n    __extends(DefaultStorageClass, _super);\r\n    function DefaultStorageClass() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    DefaultStorageClass.prototype.setAccount = function () {\r\n        var notImplErr = \"Storage interface - setAccount() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getAccount = function () {\r\n        var notImplErr = \"Storage interface - getAccount() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setIdTokenCredential = function () {\r\n        var notImplErr = \"Storage interface - setIdTokenCredential() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getIdTokenCredential = function () {\r\n        var notImplErr = \"Storage interface - getIdTokenCredential() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setAccessTokenCredential = function () {\r\n        var notImplErr = \"Storage interface - setAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getAccessTokenCredential = function () {\r\n        var notImplErr = \"Storage interface - getAccessTokenCredential() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setRefreshTokenCredential = function () {\r\n        var notImplErr = \"Storage interface - setRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getRefreshTokenCredential = function () {\r\n        var notImplErr = \"Storage interface - getRefreshTokenCredential() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setAppMetadata = function () {\r\n        var notImplErr = \"Storage interface - setAppMetadata() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getAppMetadata = function () {\r\n        var notImplErr = \"Storage interface - getAppMetadata() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setServerTelemetry = function () {\r\n        var notImplErr = \"Storage interface - setServerTelemetry() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getServerTelemetry = function () {\r\n        var notImplErr = \"Storage interface - getServerTelemetry() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setAuthorityMetadata = function () {\r\n        var notImplErr = \"Storage interface - setAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getAuthorityMetadata = function () {\r\n        var notImplErr = \"Storage interface - getAuthorityMetadata() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getAuthorityMetadataKeys = function () {\r\n        var notImplErr = \"Storage interface - getAuthorityMetadataKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.setThrottlingCache = function () {\r\n        var notImplErr = \"Storage interface - setThrottlingCache() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getThrottlingCache = function () {\r\n        var notImplErr = \"Storage interface - getThrottlingCache() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.removeItem = function () {\r\n        var notImplErr = \"Storage interface - removeItem() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.containsKey = function () {\r\n        var notImplErr = \"Storage interface - containsKey() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.getKeys = function () {\r\n        var notImplErr = \"Storage interface - getKeys() has not been implemented for the cacheStorage interface.\";\r\n        throw AuthError.createUnexpectedError(notImplErr);\r\n    };\r\n    DefaultStorageClass.prototype.clear = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Storage interface - clear() has not been implemented for the cacheStorage interface.\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    };\r\n    return DefaultStorageClass;\r\n}(CacheManager));\n\nexport { CacheManager, DefaultStorageClass };\n//# sourceMappingURL=CacheManager.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __assign, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.js';\nimport { AuthError } from '../error/AuthError.js';\nimport { LogLevel } from '../logger/Logger.js';\nimport { Constants } from '../utils/Constants.js';\nimport { version } from '../packageMetadata.js';\nimport { DefaultStorageClass } from '../cache/CacheManager.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Token renewal offset default in seconds\r\nvar DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\nvar DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false\r\n};\r\nvar DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: function () {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: \"\"\r\n};\r\nvar DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    sendGetRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var notImplErr;\r\n            return __generator(this, function (_a) {\r\n                notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented\";\r\n                throw AuthError.createUnexpectedError(notImplErr);\r\n            });\r\n        });\r\n    }\r\n};\r\nvar DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: \"\",\r\n    os: \"\"\r\n};\r\nvar DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: \"\",\r\n    clientAssertion: undefined\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration(_a) {\r\n    var userAuthOptions = _a.authOptions, userSystemOptions = _a.systemOptions, userLoggerOption = _a.loggerOptions, storageImplementation = _a.storageInterface, networkImplementation = _a.networkInterface, cryptoImplementation = _a.cryptoInterface, clientCredentials = _a.clientCredentials, libraryInfo = _a.libraryInfo, serverTelemetryManager = _a.serverTelemetryManager, persistencePlugin = _a.persistencePlugin, serializableCache = _a.serializableCache;\r\n    var loggerOptions = __assign(__assign({}, DEFAULT_LOGGER_IMPLEMENTATION), userLoggerOption);\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: __assign(__assign({}, DEFAULT_SYSTEM_OPTIONS), userSystemOptions),\r\n        loggerOptions: loggerOptions,\r\n        storageInterface: storageImplementation || new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: __assign(__assign({}, DEFAULT_LIBRARY_INFO), libraryInfo),\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return __assign({ clientCapabilities: [] }, authOptions);\r\n}\n\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration };\n//# sourceMappingURL=ClientConfiguration.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nvar ServerError = /** @class */ (function (_super) {\r\n    __extends(ServerError, _super);\r\n    function ServerError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"ServerError\";\r\n        Object.setPrototypeOf(_this, ServerError.prototype);\r\n        return _this;\r\n    }\r\n    return ServerError;\r\n}(AuthError));\n\nexport { ServerError };\n//# sourceMappingURL=ServerError.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { ThrottlingConstants, CacheSchemaType, Constants, HeaderNames } from '../utils/Constants.js';\nimport { ServerError } from '../error/ServerError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ThrottlingUtils = /** @class */ (function () {\r\n    function ThrottlingUtils() {\r\n    }\r\n    /**\r\n     * Prepares a RequestThumbprint to be stored as a key.\r\n     * @param thumbprint\r\n     */\r\n    ThrottlingUtils.generateThrottlingStorageKey = function (thumbprint) {\r\n        return ThrottlingConstants.THROTTLING_PREFIX + \".\" + JSON.stringify(thumbprint);\r\n    };\r\n    /**\r\n     * Performs necessary throttling checks before a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     */\r\n    ThrottlingUtils.preProcess = function (cacheManager, thumbprint) {\r\n        var _a;\r\n        var key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\r\n        var value = cacheManager.getThrottlingCache(key);\r\n        if (value) {\r\n            if (value.throttleTime < Date.now()) {\r\n                cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\r\n                return;\r\n            }\r\n            throw new ServerError(((_a = value.errorCodes) === null || _a === void 0 ? void 0 : _a.join(\" \")) || Constants.EMPTY_STRING, value.errorMessage, value.subError);\r\n        }\r\n    };\r\n    /**\r\n     * Performs necessary throttling checks after a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     * @param response\r\n     */\r\n    ThrottlingUtils.postProcess = function (cacheManager, thumbprint, response) {\r\n        if (ThrottlingUtils.checkResponseStatus(response) || ThrottlingUtils.checkResponseForRetryAfter(response)) {\r\n            var thumbprintValue = {\r\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\r\n                error: response.body.error,\r\n                errorCodes: response.body.error_codes,\r\n                errorMessage: response.body.error_description,\r\n                subError: response.body.suberror\r\n            };\r\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\r\n        }\r\n    };\r\n    /**\r\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\r\n     * @param response\r\n     */\r\n    ThrottlingUtils.checkResponseStatus = function (response) {\r\n        return response.status === 429 || response.status >= 500 && response.status < 600;\r\n    };\r\n    /**\r\n     * Checks a NetworkResponse object's RetryAfter header\r\n     * @param response\r\n     */\r\n    ThrottlingUtils.checkResponseForRetryAfter = function (response) {\r\n        if (response.headers) {\r\n            return response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) && (response.status < 200 || response.status >= 300);\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\r\n     * @param throttleTime\r\n     */\r\n    ThrottlingUtils.calculateThrottleTime = function (throttleTime) {\r\n        var time = throttleTime <= 0 ? 0 : throttleTime;\r\n        var currentSeconds = Date.now() / 1000;\r\n        return Math.floor(Math.min(currentSeconds + (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds + ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\r\n    };\r\n    ThrottlingUtils.removeThrottle = function (cacheManager, clientId, request, homeAccountIdentifier) {\r\n        var thumbprint = {\r\n            clientId: clientId,\r\n            authority: request.authority,\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: homeAccountIdentifier,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims\r\n        };\r\n        var key = this.generateThrottlingStorageKey(thumbprint);\r\n        return cacheManager.removeItem(key, CacheSchemaType.THROTTLING);\r\n    };\r\n    return ThrottlingUtils;\r\n}());\n\nexport { ThrottlingUtils };\n//# sourceMappingURL=ThrottlingUtils.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { ThrottlingUtils } from './ThrottlingUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { AuthError } from '../error/AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar NetworkManager = /** @class */ (function () {\r\n    function NetworkManager(networkClient, cacheManager) {\r\n        this.networkClient = networkClient;\r\n        this.cacheManager = cacheManager;\r\n    }\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint\r\n     * @param tokenEndpoint\r\n     * @param options\r\n     */\r\n    NetworkManager.prototype.sendPostRequest = function (thumbprint, tokenEndpoint, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.networkClient.sendPostRequestAsync(tokenEndpoint, options)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof AuthError) {\r\n                            throw e_1;\r\n                        }\r\n                        else {\r\n                            throw ClientAuthError.createNetworkError(tokenEndpoint, e_1);\r\n                        }\r\n                    case 4:\r\n                        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return NetworkManager;\r\n}());\n\nexport { NetworkManager };\n//# sourceMappingURL=NetworkManager.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CcsCredentialType;\r\n(function (CcsCredentialType) {\r\n    CcsCredentialType[\"HOME_ACCOUNT_ID\"] = \"home_account_id\";\r\n    CcsCredentialType[\"UPN\"] = \"UPN\";\r\n})(CcsCredentialType || (CcsCredentialType = {}));\n\nexport { CcsCredentialType };\n//# sourceMappingURL=CcsCredential.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { buildClientConfiguration } from '../config/ClientConfiguration.js';\nimport { NetworkManager } from '../network/NetworkManager.js';\nimport { Logger } from '../logger/Logger.js';\nimport { HeaderNames, Constants } from '../utils/Constants.js';\nimport { name, version } from '../packageMetadata.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n */\r\nvar BaseClient = /** @class */ (function () {\r\n    function BaseClient(configuration) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions, name, version);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set the NetworkManager\r\n        this.networkManager = new NetworkManager(this.networkClient, this.cacheManager);\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        // set Authority\r\n        this.authority = this.config.authOptions.authority;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    BaseClient.prototype.createTokenRequestHeaders = function (ccsCred) {\r\n        var headers = {};\r\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\r\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        var clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\r\n                        headers[HeaderNames.CCS_HEADER] = \"Oid:\" + clientInfo.uid + \"@\" + clientInfo.utid;\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    headers[HeaderNames.CCS_HEADER] = \"UPN: \" + ccsCred.credential;\r\n                    break;\r\n            }\r\n        }\r\n        return headers;\r\n    };\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     * @param thumbprint\r\n     */\r\n    BaseClient.prototype.executePostToTokenEndpoint = function (tokenEndpoint, queryString, headers, thumbprint) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.networkManager.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers })];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        if (this.config.serverTelemetryManager && response.status < 500 && response.status !== 429) {\r\n                            // Telemetry data successfully logged by server, clear Telemetry cache\r\n                            this.config.serverTelemetryManager.clearTelemetryCache();\r\n                        }\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates the authority object of the client. Endpoint discovery must be completed.\r\n     * @param updatedAuthority\r\n     */\r\n    BaseClient.prototype.updateAuthority = function (updatedAuthority) {\r\n        if (!updatedAuthority.discoveryComplete()) {\r\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Updated authority has not completed endpoint discovery.\");\r\n        }\r\n        this.authority = updatedAuthority;\r\n    };\r\n    return BaseClient;\r\n}());\n\nexport { BaseClient };\n//# sourceMappingURL=BaseClient.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { CodeChallengeMethodValues, PromptValue } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nvar RequestValidator = /** @class */ (function () {\r\n    function RequestValidator() {\r\n    }\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    RequestValidator.validateRedirectUri = function (redirectUri) {\r\n        if (StringUtils.isEmpty(redirectUri)) {\r\n            throw ClientConfigurationError.createRedirectUriEmptyError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    RequestValidator.validatePrompt = function (prompt) {\r\n        var promptValues = [];\r\n        for (var value in PromptValue) {\r\n            promptValues.push(PromptValue[value]);\r\n        }\r\n        if (promptValues.indexOf(prompt) < 0) {\r\n            throw ClientConfigurationError.createInvalidPromptError(prompt);\r\n        }\r\n    };\r\n    RequestValidator.validateClaims = function (claims) {\r\n        try {\r\n            JSON.parse(claims);\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createInvalidClaimsRequestError();\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        if (StringUtils.isEmpty(codeChallenge) || StringUtils.isEmpty(codeChallengeMethod)) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    };\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestValidator.validateCodeChallengeMethod = function (codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeMethodError();\r\n        }\r\n    };\r\n    /**\r\n     * Removes unnecessary or duplicate query parameters from extraQueryParameters\r\n     * @param request\r\n     */\r\n    RequestValidator.sanitizeEQParams = function (eQParams, queryParams) {\r\n        if (!eQParams) {\r\n            return {};\r\n        }\r\n        // Remove any query parameters already included in SSO params\r\n        queryParams.forEach(function (value, key) {\r\n            if (eQParams[key]) {\r\n                delete eQParams[key];\r\n            }\r\n        });\r\n        return eQParams;\r\n    };\r\n    return RequestValidator;\r\n}());\n\nexport { RequestValidator };\n//# sourceMappingURL=RequestValidator.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __spreadArrays } from '../_virtual/_tslib.js';\nimport { AADServerParamKeys, Constants, ResponseMode, OIDC_DEFAULT_SCOPES, SSOTypes, HeaderNames, CLIENT_INFO, ClaimsRequestKeys, PasswordGrantConstants, AuthenticationScheme, ThrottlingConstants } from '../utils/Constants.js';\nimport { ScopeSet } from './ScopeSet.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { RequestValidator } from './RequestValidator.js';\nimport { StringUtils } from '../utils/StringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar RequestParameterBuilder = /** @class */ (function () {\r\n    function RequestParameterBuilder() {\r\n        this.parameters = new Map();\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseTypeCode = function () {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    };\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    RequestParameterBuilder.prototype.addResponseMode = function (responseMode) {\r\n        this.parameters.set(AADServerParamKeys.RESPONSE_MODE, encodeURIComponent((responseMode) ? responseMode : ResponseMode.QUERY));\r\n    };\r\n    /**\r\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\r\n     * @param scopeSet\r\n     * @param addOidcScopes\r\n     */\r\n    RequestParameterBuilder.prototype.addScopes = function (scopes, addOidcScopes) {\r\n        if (addOidcScopes === void 0) { addOidcScopes = true; }\r\n        var requestScopes = addOidcScopes ? __spreadArrays(scopes || [], OIDC_DEFAULT_SCOPES) : scopes || [];\r\n        var scopeSet = new ScopeSet(requestScopes);\r\n        this.parameters.set(AADServerParamKeys.SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    };\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    RequestParameterBuilder.prototype.addClientId = function (clientId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ID, encodeURIComponent(clientId));\r\n    };\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addRedirectUri = function (redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(AADServerParamKeys.REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add post logout redirectUri\r\n     * @param redirectUri\r\n     */\r\n    RequestParameterBuilder.prototype.addPostLogoutRedirectUri = function (redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(AADServerParamKeys.POST_LOGOUT_URI, encodeURIComponent(redirectUri));\r\n    };\r\n    /**\r\n     * add id_token_hint to logout request\r\n     * @param idTokenHint\r\n     */\r\n    RequestParameterBuilder.prototype.addIdTokenHint = function (idTokenHint) {\r\n        this.parameters.set(AADServerParamKeys.ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\r\n    };\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    RequestParameterBuilder.prototype.addDomainHint = function (domainHint) {\r\n        this.parameters.set(SSOTypes.DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    };\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addLoginHint = function (loginHint) {\r\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\r\n    };\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addCcsUpn = function (loginHint) {\r\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(\"UPN:\" + loginHint));\r\n    };\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for account object\r\n     * @param loginHint\r\n     */\r\n    RequestParameterBuilder.prototype.addCcsOid = function (clientInfo) {\r\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(\"Oid:\" + clientInfo.uid + \"@\" + clientInfo.utid));\r\n    };\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    RequestParameterBuilder.prototype.addSid = function (sid) {\r\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\r\n    };\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    RequestParameterBuilder.prototype.addClaims = function (claims, clientCapabilities) {\r\n        var mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\r\n        RequestValidator.validateClaims(mergedClaims);\r\n        this.parameters.set(AADServerParamKeys.CLAIMS, encodeURIComponent(mergedClaims));\r\n    };\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    RequestParameterBuilder.prototype.addCorrelationId = function (correlationId) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    };\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    RequestParameterBuilder.prototype.addLibraryInfo = function (libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_VER, libraryInfo.version);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CPU, libraryInfo.cpu);\r\n    };\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    RequestParameterBuilder.prototype.addPrompt = function (prompt) {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(\"\" + AADServerParamKeys.PROMPT, encodeURIComponent(prompt));\r\n    };\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    RequestParameterBuilder.prototype.addState = function (state) {\r\n        if (!StringUtils.isEmpty(state)) {\r\n            this.parameters.set(AADServerParamKeys.STATE, encodeURIComponent(state));\r\n        }\r\n    };\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    RequestParameterBuilder.prototype.addNonce = function (nonce) {\r\n        this.parameters.set(AADServerParamKeys.NONCE, encodeURIComponent(nonce));\r\n    };\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeChallengeParams = function (codeChallenge, codeChallengeMethod) {\r\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(AADServerParamKeys.CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw ClientConfigurationError.createInvalidCodeChallengeParamsError();\r\n        }\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addAuthorizationCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    RequestParameterBuilder.prototype.addDeviceCode = function (code) {\r\n        this.parameters.set(AADServerParamKeys.DEVICE_CODE, encodeURIComponent(code));\r\n    };\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    RequestParameterBuilder.prototype.addRefreshToken = function (refreshToken) {\r\n        this.parameters.set(AADServerParamKeys.REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    };\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    RequestParameterBuilder.prototype.addCodeVerifier = function (codeVerifier) {\r\n        this.parameters.set(AADServerParamKeys.CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    };\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    RequestParameterBuilder.prototype.addClientSecret = function (clientSecret) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_SECRET, encodeURIComponent(clientSecret));\r\n    };\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    RequestParameterBuilder.prototype.addClientAssertion = function (clientAssertion) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\r\n    };\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    RequestParameterBuilder.prototype.addClientAssertionType = function (clientAssertionType) {\r\n        this.parameters.set(AADServerParamKeys.CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\r\n    };\r\n    /**\r\n     * add OBO assertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    RequestParameterBuilder.prototype.addOboAssertion = function (oboAssertion) {\r\n        this.parameters.set(AADServerParamKeys.OBO_ASSERTION, encodeURIComponent(oboAssertion));\r\n    };\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addRequestTokenUse = function (tokenUse) {\r\n        this.parameters.set(AADServerParamKeys.REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\r\n    };\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    RequestParameterBuilder.prototype.addGrantType = function (grantType) {\r\n        this.parameters.set(AADServerParamKeys.GRANT_TYPE, encodeURIComponent(grantType));\r\n    };\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    RequestParameterBuilder.prototype.addClientInfo = function () {\r\n        this.parameters.set(CLIENT_INFO, \"1\");\r\n    };\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQparams\r\n     */\r\n    RequestParameterBuilder.prototype.addExtraQueryParameters = function (eQparams) {\r\n        var _this = this;\r\n        RequestValidator.sanitizeEQParams(eQparams, this.parameters);\r\n        Object.keys(eQparams).forEach(function (key) {\r\n            _this.parameters.set(key, eQparams[key]);\r\n        });\r\n    };\r\n    RequestParameterBuilder.prototype.addClientCapabilitiesToClaims = function (claims, clientCapabilities) {\r\n        var mergedClaims;\r\n        // Parse provided claims into JSON object or initialize empty object\r\n        if (!claims) {\r\n            mergedClaims = {};\r\n        }\r\n        else {\r\n            try {\r\n                mergedClaims = JSON.parse(claims);\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidClaimsRequestError();\r\n            }\r\n        }\r\n        if (clientCapabilities && clientCapabilities.length > 0) {\r\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\r\n                // Add access_token key to claims object\r\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\r\n            }\r\n            // Add xms_cc claim with provided clientCapabilities to access_token key\r\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\r\n                values: clientCapabilities\r\n            };\r\n        }\r\n        return JSON.stringify(mergedClaims);\r\n    };\r\n    /**\r\n     * adds `username` for Password Grant flow\r\n     * @param username\r\n     */\r\n    RequestParameterBuilder.prototype.addUsername = function (username) {\r\n        this.parameters.set(PasswordGrantConstants.username, username);\r\n    };\r\n    /**\r\n     * adds `password` for Password Grant flow\r\n     * @param password\r\n     */\r\n    RequestParameterBuilder.prototype.addPassword = function (password) {\r\n        this.parameters.set(PasswordGrantConstants.password, password);\r\n    };\r\n    /**\r\n     * add pop_jwk to query params\r\n     * @param cnfString\r\n     */\r\n    RequestParameterBuilder.prototype.addPopToken = function (cnfString) {\r\n        if (!StringUtils.isEmpty(cnfString)) {\r\n            this.parameters.set(AADServerParamKeys.TOKEN_TYPE, AuthenticationScheme.POP);\r\n            this.parameters.set(AADServerParamKeys.REQ_CNF, encodeURIComponent(cnfString));\r\n        }\r\n    };\r\n    /**\r\n     * add server telemetry fields\r\n     * @param serverTelemetryManager\r\n     */\r\n    RequestParameterBuilder.prototype.addServerTelemetry = function (serverTelemetryManager) {\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n        this.parameters.set(AADServerParamKeys.X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\r\n    };\r\n    /**\r\n     * Adds parameter that indicates to the server that throttling is supported\r\n     */\r\n    RequestParameterBuilder.prototype.addThrottling = function () {\r\n        this.parameters.set(AADServerParamKeys.X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\r\n    };\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    RequestParameterBuilder.prototype.createQueryString = function () {\r\n        var queryParameterArray = new Array();\r\n        this.parameters.forEach(function (value, key) {\r\n            queryParameterArray.push(key + \"=\" + value);\r\n        });\r\n        return queryParameterArray.join(\"&\");\r\n    };\r\n    return RequestParameterBuilder;\r\n}());\n\nexport { RequestParameterBuilder };\n//# sourceMappingURL=RequestParameterBuilder.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { CredentialEntity } from './CredentialEntity.js';\nimport { CredentialType } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ID_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n * }\r\n */\r\nvar IdTokenEntity = /** @class */ (function (_super) {\r\n    __extends(IdTokenEntity, _super);\r\n    function IdTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create IdTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    IdTokenEntity.createIdTokenEntity = function (homeAccountId, environment, idToken, clientId, tenantId, oboAssertion) {\r\n        var idTokenEntity = new IdTokenEntity();\r\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\r\n        idTokenEntity.homeAccountId = homeAccountId;\r\n        idTokenEntity.environment = environment;\r\n        idTokenEntity.clientId = clientId;\r\n        idTokenEntity.secret = idToken;\r\n        idTokenEntity.realm = tenantId;\r\n        idTokenEntity.oboAssertion = oboAssertion;\r\n        return idTokenEntity;\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    IdTokenEntity.isIdTokenEntity = function (entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"credentialType\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"clientId\") &&\r\n            entity.hasOwnProperty(\"secret\") &&\r\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN);\r\n    };\r\n    return IdTokenEntity;\r\n}(CredentialEntity));\n\nexport { IdTokenEntity };\n//# sourceMappingURL=IdTokenEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility class which exposes functions for managing date and time operations.\r\n */\r\nvar TimeUtils = /** @class */ (function () {\r\n    function TimeUtils() {\r\n    }\r\n    /**\r\n     * return the current time in Unix time (seconds).\r\n     */\r\n    TimeUtils.nowSeconds = function () {\r\n        // Date.getTime() returns in milliseconds.\r\n        return Math.round(new Date().getTime() / 1000.0);\r\n    };\r\n    /**\r\n     * check if a token is expired based on given UTC time in seconds.\r\n     * @param expiresOn\r\n     */\r\n    TimeUtils.isTokenExpired = function (expiresOn, offset) {\r\n        // check for access token expiry\r\n        var expirationSec = Number(expiresOn) || 0;\r\n        var offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\r\n        // If current time + offset is greater than token expiration time, then token is expired.\r\n        return (offsetCurrentTimeSec > expirationSec);\r\n    };\r\n    /**\r\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\r\n     * i.e. The system clock was turned back after acquiring the cached token\r\n     * @param cachedAt\r\n     * @param offset\r\n     */\r\n    TimeUtils.wasClockTurnedBack = function (cachedAt) {\r\n        var cachedAtSec = Number(cachedAt);\r\n        return cachedAtSec > TimeUtils.nowSeconds();\r\n    };\r\n    /**\r\n     * Waits for t number of milliseconds\r\n     * @param t number\r\n     * @param value T\r\n     */\r\n    TimeUtils.delay = function (t, value) {\r\n        return new Promise(function (resolve) { return setTimeout(function () { return resolve(value); }, t); });\r\n    };\r\n    return TimeUtils;\r\n}());\n\nexport { TimeUtils };\n//# sourceMappingURL=TimeUtils.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { CredentialEntity } from './CredentialEntity.js';\nimport { CredentialType, AuthenticationScheme } from '../../utils/Constants.js';\nimport { TimeUtils } from '../../utils/TimeUtils.js';\nimport { StringUtils } from '../../utils/StringUtils.js';\nimport { AuthToken } from '../../account/AuthToken.js';\nimport { ClientAuthError } from '../../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ACCESS_TOKEN Credential Type\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, usually only used for refresh tokens\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n *      cachedAt: Absolute device time when entry was created in the cache.\r\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\r\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\r\n *      keyId: used for POP and SSH tokenTypes\r\n *      tokenType: Type of the token issued. Usually \"Bearer\"\r\n * }\r\n */\r\nvar AccessTokenEntity = /** @class */ (function (_super) {\r\n    __extends(AccessTokenEntity, _super);\r\n    function AccessTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create AccessTokenEntity\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param accessToken\r\n     * @param clientId\r\n     * @param tenantId\r\n     * @param scopes\r\n     * @param expiresOn\r\n     * @param extExpiresOn\r\n     */\r\n    AccessTokenEntity.createAccessTokenEntity = function (homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, cryptoUtils, refreshOn, tokenType, oboAssertion) {\r\n        var _a;\r\n        var atEntity = new AccessTokenEntity();\r\n        atEntity.homeAccountId = homeAccountId;\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\r\n        atEntity.secret = accessToken;\r\n        var currentTime = TimeUtils.nowSeconds();\r\n        atEntity.cachedAt = currentTime.toString();\r\n        /*\r\n         * Token expiry time.\r\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\r\n         */\r\n        atEntity.expiresOn = expiresOn.toString();\r\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\r\n        if (refreshOn) {\r\n            atEntity.refreshOn = refreshOn.toString();\r\n        }\r\n        atEntity.environment = environment;\r\n        atEntity.clientId = clientId;\r\n        atEntity.realm = tenantId;\r\n        atEntity.target = scopes;\r\n        atEntity.oboAssertion = oboAssertion;\r\n        atEntity.tokenType = StringUtils.isEmpty(tokenType) ? AuthenticationScheme.BEARER : tokenType;\r\n        // Create Access Token With AuthScheme instead of regular access token\r\n        if (atEntity.tokenType === AuthenticationScheme.POP) {\r\n            atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n            // Make sure keyId is present and add it to credential\r\n            var tokenClaims = AuthToken.extractTokenClaims(accessToken, cryptoUtils);\r\n            if (!((_a = tokenClaims === null || tokenClaims === void 0 ? void 0 : tokenClaims.cnf) === null || _a === void 0 ? void 0 : _a.kid)) {\r\n                throw ClientAuthError.createTokenClaimsRequiredError();\r\n            }\r\n            atEntity.keyId = tokenClaims.cnf.kid;\r\n        }\r\n        return atEntity;\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    AccessTokenEntity.isAccessTokenEntity = function (entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"credentialType\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"clientId\") &&\r\n            entity.hasOwnProperty(\"secret\") &&\r\n            entity.hasOwnProperty(\"target\") &&\r\n            (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN || entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\r\n    };\r\n    return AccessTokenEntity;\r\n}(CredentialEntity));\n\nexport { AccessTokenEntity };\n//# sourceMappingURL=AccessTokenEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../../_virtual/_tslib.js';\nimport { CredentialEntity } from './CredentialEntity.js';\nimport { CredentialType } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * REFRESH_TOKEN Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\r\n *\r\n * Value:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\r\n *      clientId: client ID of the application\r\n *      secret: Actual credential as a string\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\r\n * }\r\n */\r\nvar RefreshTokenEntity = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenEntity, _super);\r\n    function RefreshTokenEntity() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * Create RefreshTokenEntity\r\n     * @param homeAccountId\r\n     * @param authenticationResult\r\n     * @param clientId\r\n     * @param authority\r\n     */\r\n    RefreshTokenEntity.createRefreshTokenEntity = function (homeAccountId, environment, refreshToken, clientId, familyId, oboAssertion) {\r\n        var rtEntity = new RefreshTokenEntity();\r\n        rtEntity.clientId = clientId;\r\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\r\n        rtEntity.environment = environment;\r\n        rtEntity.homeAccountId = homeAccountId;\r\n        rtEntity.secret = refreshToken;\r\n        rtEntity.oboAssertion = oboAssertion;\r\n        if (familyId)\r\n            rtEntity.familyId = familyId;\r\n        return rtEntity;\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    RefreshTokenEntity.isRefreshTokenEntity = function (entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"credentialType\") &&\r\n            entity.hasOwnProperty(\"clientId\") &&\r\n            entity.hasOwnProperty(\"secret\") &&\r\n            entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN);\r\n    };\r\n    return RefreshTokenEntity;\r\n}(CredentialEntity));\n\nexport { RefreshTokenEntity };\n//# sourceMappingURL=RefreshTokenEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends } from '../_virtual/_tslib.js';\nimport { AuthError } from './AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nvar InteractionRequiredServerErrorMessage = [\r\n    \"interaction_required\",\r\n    \"consent_required\",\r\n    \"login_required\"\r\n];\r\nvar InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\"\r\n];\r\n/**\r\n * Interaction required errors defined by the SDK\r\n */\r\nvar InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: \"no_tokens_found\",\r\n        desc: \"No refresh token found in the cache. Please sign-in.\"\r\n    }\r\n};\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nvar InteractionRequiredAuthError = /** @class */ (function (_super) {\r\n    __extends(InteractionRequiredAuthError, _super);\r\n    function InteractionRequiredAuthError(errorCode, errorMessage, subError) {\r\n        var _this = _super.call(this, errorCode, errorMessage, subError) || this;\r\n        _this.name = \"InteractionRequiredAuthError\";\r\n        Object.setPrototypeOf(_this, InteractionRequiredAuthError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n     * @param errorCode\r\n     * @param errorString\r\n     * @param subError\r\n     */\r\n    InteractionRequiredAuthError.isInteractionRequiredError = function (errorCode, errorString, subError) {\r\n        var isInteractionRequiredErrorCode = !!errorCode && InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n        var isInteractionRequiredSubError = !!subError && InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n        var isInteractionRequiredErrorDesc = !!errorString && InteractionRequiredServerErrorMessage.some(function (irErrorCode) {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n        return isInteractionRequiredErrorCode || isInteractionRequiredErrorDesc || isInteractionRequiredSubError;\r\n    };\r\n    /**\r\n     * Creates an error thrown when the authorization code required for a token request is null or empty.\r\n     */\r\n    InteractionRequiredAuthError.createNoTokensFoundError = function () {\r\n        return new InteractionRequiredAuthError(InteractionRequiredAuthErrorMessage.noTokensFoundError.code, InteractionRequiredAuthErrorMessage.noTokensFoundError.desc);\r\n    };\r\n    return InteractionRequiredAuthError;\r\n}(AuthError));\n\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage };\n//# sourceMappingURL=InteractionRequiredAuthError.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar CacheRecord = /** @class */ (function () {\r\n    function CacheRecord(accountEntity, idTokenEntity, accessTokenEntity, refreshTokenEntity, appMetadataEntity) {\r\n        this.account = accountEntity || null;\r\n        this.idToken = idTokenEntity || null;\r\n        this.accessToken = accessTokenEntity || null;\r\n        this.refreshToken = refreshTokenEntity || null;\r\n        this.appMetadata = appMetadataEntity || null;\r\n    }\r\n    return CacheRecord;\r\n}());\n\nexport { CacheRecord };\n//# sourceMappingURL=CacheRecord.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { StringUtils } from './StringUtils.js';\nimport { Constants } from './Constants.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nvar ProtocolUtils = /** @class */ (function () {\r\n    function ProtocolUtils() {\r\n    }\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    ProtocolUtils.setRequestState = function (cryptoObj, userState, meta) {\r\n        var libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return !StringUtils.isEmpty(userState) ? \"\" + libraryState + Constants.RESOURCE_DELIM + userState : libraryState;\r\n    };\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.generateLibraryState = function (cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"generateLibraryState\");\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        var stateObj = {\r\n            id: cryptoObj.createNewGuid()\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        var stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    };\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    ProtocolUtils.parseRequestState = function (cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw ClientAuthError.createNoCryptoObjectError(\"parseRequestState\");\r\n        }\r\n        if (StringUtils.isEmpty(state)) {\r\n            throw ClientAuthError.createInvalidStateError(state, \"Null, undefined or empty state\");\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            var splitState = state.split(Constants.RESOURCE_DELIM);\r\n            var libraryState = splitState[0];\r\n            var userState = splitState.length > 1 ? splitState.slice(1).join(Constants.RESOURCE_DELIM) : \"\";\r\n            var libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            var libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: !StringUtils.isEmpty(userState) ? userState : \"\",\r\n                libraryState: libraryStateObj\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    };\r\n    return ProtocolUtils;\r\n}());\n\nexport { ProtocolUtils };\n//# sourceMappingURL=ProtocolUtils.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { AADAuthorityConstants, Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nvar UrlString = /** @class */ (function () {\r\n    function UrlString(url) {\r\n        this._urlString = url;\r\n        if (StringUtils.isEmpty(this._urlString)) {\r\n            // Throws error if url is empty\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        if (StringUtils.isEmpty(this.getHash())) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n    }\r\n    Object.defineProperty(UrlString.prototype, \"urlString\", {\r\n        get: function () {\r\n            return this._urlString;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    UrlString.canonicalizeUri = function (url) {\r\n        if (url) {\r\n            var lowerCaseUrl = url.toLowerCase();\r\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n            }\r\n            else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n            }\r\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n            return lowerCaseUrl;\r\n        }\r\n        return url;\r\n    };\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    UrlString.prototype.validateAsUri = function () {\r\n        // Attempts to parse url for uri components\r\n        var components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw ClientConfigurationError.createUrlParseError(e);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol || components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw ClientConfigurationError.createInsecureAuthorityUriError(this.urlString);\r\n        }\r\n    };\r\n    /**\r\n     * Given a url and a query string return the url with provided query string appended\r\n     * @param url\r\n     * @param queryString\r\n     */\r\n    UrlString.appendQueryString = function (url, queryString) {\r\n        if (StringUtils.isEmpty(queryString)) {\r\n            return url;\r\n        }\r\n        return url.indexOf(\"?\") < 0 ? url + \"?\" + queryString : url + \"&\" + queryString;\r\n    };\r\n    /**\r\n     * Returns a url with the hash removed\r\n     * @param url\r\n     */\r\n    UrlString.removeHashFromUrl = function (url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    };\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    UrlString.prototype.replaceTenantPath = function (tenantId) {\r\n        var urlObject = this.getUrlComponents();\r\n        var pathArray = urlObject.PathSegments;\r\n        if (tenantId && (pathArray.length !== 0 && (pathArray[0] === AADAuthorityConstants.COMMON || pathArray[0] === AADAuthorityConstants.ORGANIZATIONS))) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    };\r\n    /**\r\n     * Returns the anchor part(#) of the URL\r\n     */\r\n    UrlString.prototype.getHash = function () {\r\n        return UrlString.parseHash(this.urlString);\r\n    };\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    UrlString.prototype.getUrlComponents = function () {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        var regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        var match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + this.urlString);\r\n        }\r\n        // Url component object\r\n        var urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5],\r\n            QueryString: match[7]\r\n        };\r\n        var pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter(function (val) { return val && val.length > 0; }); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (!StringUtils.isEmpty(urlComponents.QueryString) && urlComponents.QueryString.endsWith(\"/\")) {\r\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\r\n        }\r\n        return urlComponents;\r\n    };\r\n    UrlString.getDomainFromUrl = function (url) {\r\n        var regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\r\n        var match = url.match(regEx);\r\n        if (!match) {\r\n            throw ClientConfigurationError.createUrlParseError(\"Given url string: \" + url);\r\n        }\r\n        return match[2];\r\n    };\r\n    UrlString.getAbsoluteUrl = function (relativeUrl, baseUrl) {\r\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\r\n            var url = new UrlString(baseUrl);\r\n            var baseComponents = url.getUrlComponents();\r\n            return baseComponents.Protocol + \"//\" + baseComponents.HostNameAndPort + relativeUrl;\r\n        }\r\n        return relativeUrl;\r\n    };\r\n    /**\r\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\r\n     * @param hashString\r\n     */\r\n    UrlString.parseHash = function (hashString) {\r\n        var hashIndex1 = hashString.indexOf(\"#\");\r\n        var hashIndex2 = hashString.indexOf(\"#/\");\r\n        if (hashIndex2 > -1) {\r\n            return hashString.substring(hashIndex2 + 2);\r\n        }\r\n        else if (hashIndex1 > -1) {\r\n            return hashString.substring(hashIndex1 + 1);\r\n        }\r\n        return \"\";\r\n    };\r\n    UrlString.constructAuthorityUriFromObject = function (urlObject) {\r\n        return new UrlString(urlObject.Protocol + \"//\" + urlObject.HostNameAndPort + \"/\" + urlObject.PathSegments.join(\"/\"));\r\n    };\r\n    /**\r\n     * Returns URL hash as server auth code response object.\r\n     */\r\n    UrlString.getDeserializedHash = function (hash) {\r\n        // Check if given hash is empty\r\n        if (StringUtils.isEmpty(hash)) {\r\n            return {};\r\n        }\r\n        // Strip the # symbol if present\r\n        var parsedHash = UrlString.parseHash(hash);\r\n        // If # symbol was not present, above will return empty string, so give original hash value\r\n        var deserializedHash = StringUtils.queryStringToObject(StringUtils.isEmpty(parsedHash) ? hash : parsedHash);\r\n        // Check if deserialization didn't work\r\n        if (!deserializedHash) {\r\n            throw ClientAuthError.createHashNotDeserializedError(JSON.stringify(deserializedHash));\r\n        }\r\n        return deserializedHash;\r\n    };\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     */\r\n    UrlString.hashContainsKnownProperties = function (hash) {\r\n        if (StringUtils.isEmpty(hash) || hash.indexOf(\"=\") < 0) {\r\n            // Hash doesn't contain key/value pairs\r\n            return false;\r\n        }\r\n        var parameters = UrlString.getDeserializedHash(hash);\r\n        return !!(parameters.code ||\r\n            parameters.error_description ||\r\n            parameters.error ||\r\n            parameters.state);\r\n    };\r\n    return UrlString;\r\n}());\n\nexport { UrlString };\n//# sourceMappingURL=UrlString.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { AuthToken } from '../account/AuthToken.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar KeyLocation;\r\n(function (KeyLocation) {\r\n    KeyLocation[\"SW\"] = \"sw\";\r\n    KeyLocation[\"UHW\"] = \"uhw\";\r\n})(KeyLocation || (KeyLocation = {}));\r\nvar PopTokenGenerator = /** @class */ (function () {\r\n    function PopTokenGenerator(cryptoUtils) {\r\n        this.cryptoUtils = cryptoUtils;\r\n    }\r\n    PopTokenGenerator.prototype.generateCnf = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqCnf;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.generateKid(request)];\r\n                    case 1:\r\n                        reqCnf = _a.sent();\r\n                        return [2 /*return*/, this.cryptoUtils.base64Encode(JSON.stringify(reqCnf))];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PopTokenGenerator.prototype.generateKid = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var kidThumbprint;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.cryptoUtils.getPublicKeyThumbprint(request)];\r\n                    case 1:\r\n                        kidThumbprint = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                kid: kidThumbprint,\r\n                                xms_ksl: KeyLocation.SW\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    PopTokenGenerator.prototype.signPopToken = function (accessToken, request) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var tokenClaims;\r\n            return __generator(this, function (_b) {\r\n                tokenClaims = AuthToken.extractTokenClaims(accessToken, this.cryptoUtils);\r\n                if (!((_a = tokenClaims === null || tokenClaims === void 0 ? void 0 : tokenClaims.cnf) === null || _a === void 0 ? void 0 : _a.kid)) {\r\n                    throw ClientAuthError.createTokenClaimsRequiredError();\r\n                }\r\n                return [2 /*return*/, this.signPayload(accessToken, tokenClaims.cnf.kid, request)];\r\n            });\r\n        });\r\n    };\r\n    PopTokenGenerator.prototype.signPayload = function (payload, kid, request, claims) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var resourceRequestMethod, resourceRequestUri, shrClaims, resourceUrlString, resourceUrlComponents;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        resourceRequestMethod = request.resourceRequestMethod, resourceRequestUri = request.resourceRequestUri, shrClaims = request.shrClaims;\r\n                        resourceUrlString = (resourceRequestUri) ? new UrlString(resourceRequestUri) : undefined;\r\n                        resourceUrlComponents = resourceUrlString === null || resourceUrlString === void 0 ? void 0 : resourceUrlString.getUrlComponents();\r\n                        return [4 /*yield*/, this.cryptoUtils.signJwt(__assign({ at: payload, ts: TimeUtils.nowSeconds(), m: resourceRequestMethod === null || resourceRequestMethod === void 0 ? void 0 : resourceRequestMethod.toUpperCase(), u: resourceUrlComponents === null || resourceUrlComponents === void 0 ? void 0 : resourceUrlComponents.HostNameAndPort, nonce: this.cryptoUtils.createNewGuid(), p: resourceUrlComponents === null || resourceUrlComponents === void 0 ? void 0 : resourceUrlComponents.AbsolutePath, q: (resourceUrlComponents === null || resourceUrlComponents === void 0 ? void 0 : resourceUrlComponents.QueryString) ? [[], resourceUrlComponents.QueryString] : undefined, client_claims: shrClaims || undefined }, claims), kid)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return PopTokenGenerator;\r\n}());\n\nexport { PopTokenGenerator };\n//# sourceMappingURL=PopTokenGenerator.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { Separators, APP_METADATA } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * APP_METADATA Cache\r\n *\r\n * Key:Value Schema:\r\n *\r\n * Key: appmetadata-<environment>-<client_id>\r\n *\r\n * Value:\r\n * {\r\n *      clientId: client ID of the application\r\n *      environment: entity that issued the token, represented as a full host\r\n *      familyId: Family ID identifier, '1' represents Microsoft Family\r\n * }\r\n */\r\nvar AppMetadataEntity = /** @class */ (function () {\r\n    function AppMetadataEntity() {\r\n    }\r\n    /**\r\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n     */\r\n    AppMetadataEntity.prototype.generateAppMetadataKey = function () {\r\n        return AppMetadataEntity.generateAppMetadataCacheKey(this.environment, this.clientId);\r\n    };\r\n    /**\r\n     * Generate AppMetadata Cache Key\r\n     */\r\n    AppMetadataEntity.generateAppMetadataCacheKey = function (environment, clientId) {\r\n        var appMetaDataKeyArray = [\r\n            APP_METADATA,\r\n            environment,\r\n            clientId,\r\n        ];\r\n        return appMetaDataKeyArray.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    };\r\n    /**\r\n     * Creates AppMetadataEntity\r\n     * @param clientId\r\n     * @param environment\r\n     * @param familyId\r\n     */\r\n    AppMetadataEntity.createAppMetadataEntity = function (clientId, environment, familyId) {\r\n        var appMetadata = new AppMetadataEntity();\r\n        appMetadata.clientId = clientId;\r\n        appMetadata.environment = environment;\r\n        if (familyId) {\r\n            appMetadata.familyId = familyId;\r\n        }\r\n        return appMetadata;\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    AppMetadataEntity.isAppMetadataEntity = function (key, entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (key.indexOf(APP_METADATA) === 0 &&\r\n            entity.hasOwnProperty(\"clientId\") &&\r\n            entity.hasOwnProperty(\"environment\"));\r\n    };\r\n    return AppMetadataEntity;\r\n}());\n\nexport { AppMetadataEntity };\n//# sourceMappingURL=AppMetadataEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */ var TokenCacheContext = /** @class */ (function () {\r\n    function TokenCacheContext(tokenCache, hasChanged) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n    Object.defineProperty(TokenCacheContext.prototype, \"cacheHasChanged\", {\r\n        /**\r\n         * boolean which indicates the changes in cache\r\n         */\r\n        get: function () {\r\n            return this.hasChanged;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TokenCacheContext.prototype, \"tokenCache\", {\r\n        /**\r\n         * function to retrieve the token cache\r\n         */\r\n        get: function () {\r\n            return this.cache;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return TokenCacheContext;\r\n}());\n\nexport { TokenCacheContext };\n//# sourceMappingURL=TokenCacheContext.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { buildClientInfo } from '../account/ClientInfo.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ServerError } from '../error/ServerError.js';\nimport { AuthToken } from '../account/AuthToken.js';\nimport { ScopeSet } from '../request/ScopeSet.js';\nimport { AccountEntity } from '../cache/entities/AccountEntity.js';\nimport { AuthorityType } from '../authority/AuthorityType.js';\nimport { IdTokenEntity } from '../cache/entities/IdTokenEntity.js';\nimport { AccessTokenEntity } from '../cache/entities/AccessTokenEntity.js';\nimport { RefreshTokenEntity } from '../cache/entities/RefreshTokenEntity.js';\nimport { InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.js';\nimport { CacheRecord } from '../cache/entities/CacheRecord.js';\nimport { ProtocolUtils } from '../utils/ProtocolUtils.js';\nimport { Constants, AuthenticationScheme, THE_FAMILY_ID } from '../utils/Constants.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { AppMetadataEntity } from '../cache/entities/AppMetadataEntity.js';\nimport { TokenCacheContext } from '../cache/persistence/TokenCacheContext.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class that handles response parsing.\r\n */\r\nvar ResponseHandler = /** @class */ (function () {\r\n    function ResponseHandler(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n        this.serializableCache = serializableCache;\r\n        this.persistencePlugin = persistencePlugin;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param cachedState\r\n     * @param cryptoObj\r\n     */\r\n    ResponseHandler.prototype.validateServerAuthorizationCodeResponse = function (serverResponseHash, cachedState, cryptoObj) {\r\n        if (!serverResponseHash.state || !cachedState) {\r\n            throw !serverResponseHash.state ? ClientAuthError.createStateNotFoundError(\"Server State\") : ClientAuthError.createStateNotFoundError(\"Cached State\");\r\n        }\r\n        if (decodeURIComponent(serverResponseHash.state) !== decodeURIComponent(cachedState)) {\r\n            throw ClientAuthError.createStateMismatchError();\r\n        }\r\n        // Check for error\r\n        if (serverResponseHash.error || serverResponseHash.error_description || serverResponseHash.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponseHash.error, serverResponseHash.error_description, serverResponseHash.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\r\n            }\r\n            throw new ServerError(serverResponseHash.error || Constants.EMPTY_STRING, serverResponseHash.error_description, serverResponseHash.suberror);\r\n        }\r\n        if (serverResponseHash.client_info) {\r\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\r\n        }\r\n    };\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     */\r\n    ResponseHandler.prototype.validateTokenResponse = function (serverResponse) {\r\n        // Check for error\r\n        if (serverResponse.error || serverResponse.error_description || serverResponse.suberror) {\r\n            if (InteractionRequiredAuthError.isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror);\r\n            }\r\n            var errString = serverResponse.error_codes + \" - [\" + serverResponse.timestamp + \"]: \" + serverResponse.error_description + \" - Correlation ID: \" + serverResponse.correlation_id + \" - Trace ID: \" + serverResponse.trace_id;\r\n            throw new ServerError(serverResponse.error, errString, serverResponse.suberror);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.handleServerTokenResponse = function (serverTokenResponse, authority, reqTimestamp, request, authCodePayload, oboAssertion, handlingRefreshTokenResponse) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var idTokenObj, requestStateObj, cacheRecord, cacheContext, key, account;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (serverTokenResponse.id_token) {\r\n                            idTokenObj = new AuthToken(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj);\r\n                            // token nonce check (TODO: Add a warning if no nonce is given?)\r\n                            if (authCodePayload && !StringUtils.isEmpty(authCodePayload.nonce)) {\r\n                                if (idTokenObj.claims.nonce !== authCodePayload.nonce) {\r\n                                    throw ClientAuthError.createNonceMismatchError();\r\n                                }\r\n                            }\r\n                        }\r\n                        // generate homeAccountId\r\n                        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenObj);\r\n                        if (!!authCodePayload && !!authCodePayload.state) {\r\n                            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\r\n                        }\r\n                        cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, idTokenObj, request.scopes, oboAssertion, authCodePayload);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 5, 8]);\r\n                        if (!(this.persistencePlugin && this.serializableCache)) return [3 /*break*/, 3];\r\n                        this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\r\n                        cacheContext = new TokenCacheContext(this.serializableCache, true);\r\n                        return [4 /*yield*/, this.persistencePlugin.beforeCacheAccess(cacheContext)];\r\n                    case 2:\r\n                        _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        /*\r\n                         * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\r\n                         * If not present, we should return null, as it's the case that another application called removeAccount in between\r\n                         * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal.\r\n                         */\r\n                        if (handlingRefreshTokenResponse && cacheRecord.account) {\r\n                            key = cacheRecord.account.generateAccountKey();\r\n                            account = this.cacheStorage.getAccount(key);\r\n                            if (!account) {\r\n                                this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\r\n                                return [2 /*return*/, ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj)];\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, this.cacheStorage.saveCacheRecord(cacheRecord)];\r\n                    case 4:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        if (!(this.persistencePlugin && this.serializableCache && cacheContext)) return [3 /*break*/, 7];\r\n                        this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\r\n                        return [4 /*yield*/, this.persistencePlugin.afterCacheAccess(cacheContext)];\r\n                    case 6:\r\n                        _a.sent();\r\n                        _a.label = 7;\r\n                    case 7: return [7 /*endfinally*/];\r\n                    case 8: return [2 /*return*/, ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenObj, requestStateObj)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateCacheRecord = function (serverTokenResponse, authority, reqTimestamp, idTokenObj, requestScopes, oboAssertion, authCodePayload) {\r\n        var env = authority.getPreferredCache();\r\n        if (StringUtils.isEmpty(env)) {\r\n            throw ClientAuthError.createInvalidCacheEnvironmentError();\r\n        }\r\n        // IdToken: non AAD scenarios can have empty realm\r\n        var cachedIdToken;\r\n        var cachedAccount;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.id_token) && !!idTokenObj) {\r\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token || Constants.EMPTY_STRING, this.clientId, idTokenObj.claims.tid || Constants.EMPTY_STRING, oboAssertion);\r\n            cachedAccount = this.generateAccountEntity(serverTokenResponse, idTokenObj, authority, oboAssertion, authCodePayload);\r\n        }\r\n        // AccessToken\r\n        var cachedAccessToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.access_token)) {\r\n            // If scopes not returned in server response, use request scopes\r\n            var responseScopes = serverTokenResponse.scope ? ScopeSet.fromString(serverTokenResponse.scope) : new ScopeSet(requestScopes || []);\r\n            /*\r\n             * Use timestamp calculated before request\r\n             * Server may return timestamps as strings, parse to numbers if so.\r\n             */\r\n            var expiresIn = (typeof serverTokenResponse.expires_in === \"string\" ? parseInt(serverTokenResponse.expires_in, 10) : serverTokenResponse.expires_in) || 0;\r\n            var extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\" ? parseInt(serverTokenResponse.ext_expires_in, 10) : serverTokenResponse.ext_expires_in) || 0;\r\n            var refreshIn = (typeof serverTokenResponse.refresh_in === \"string\" ? parseInt(serverTokenResponse.refresh_in, 10) : serverTokenResponse.refresh_in) || undefined;\r\n            var tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n            var extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\r\n            var refreshOnSeconds = refreshIn && refreshIn > 0 ? reqTimestamp + refreshIn : undefined;\r\n            // non AAD scenarios can have empty realm\r\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token || Constants.EMPTY_STRING, this.clientId, idTokenObj ? idTokenObj.claims.tid || Constants.EMPTY_STRING : authority.tenant, responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj, refreshOnSeconds, serverTokenResponse.token_type, oboAssertion);\r\n        }\r\n        // refreshToken\r\n        var cachedRefreshToken = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.refresh_token)) {\r\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token || Constants.EMPTY_STRING, this.clientId, serverTokenResponse.foci, oboAssertion);\r\n        }\r\n        // appMetadata\r\n        var cachedAppMetadata = null;\r\n        if (!StringUtils.isEmpty(serverTokenResponse.foci)) {\r\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(this.clientId, env, serverTokenResponse.foci);\r\n        }\r\n        return new CacheRecord(cachedAccount, cachedIdToken, cachedAccessToken, cachedRefreshToken, cachedAppMetadata);\r\n    };\r\n    /**\r\n     * Generate Account\r\n     * @param serverTokenResponse\r\n     * @param idToken\r\n     * @param authority\r\n     */\r\n    ResponseHandler.prototype.generateAccountEntity = function (serverTokenResponse, idToken, authority, oboAssertion, authCodePayload) {\r\n        var authorityType = authority.authorityType;\r\n        var cloudGraphHostName = authCodePayload ? authCodePayload.cloud_graph_host_name : \"\";\r\n        var msGraphhost = authCodePayload ? authCodePayload.msgraph_host : \"\";\r\n        // ADFS does not require client_info in the response\r\n        if (authorityType === AuthorityType.Adfs) {\r\n            this.logger.verbose(\"Authority type is ADFS, creating ADFS account\");\r\n            return AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, oboAssertion, cloudGraphHostName, msGraphhost);\r\n        }\r\n        // This fallback applies to B2C as well as they fall under an AAD account type.\r\n        if (StringUtils.isEmpty(serverTokenResponse.client_info) && authority.protocolMode === \"AAD\") {\r\n            throw ClientAuthError.createClientInfoEmptyError();\r\n        }\r\n        return serverTokenResponse.client_info ?\r\n            AccountEntity.createAccount(serverTokenResponse.client_info, this.homeAccountIdentifier, idToken, authority, oboAssertion, cloudGraphHostName, msGraphhost) :\r\n            AccountEntity.createGenericAccount(this.homeAccountIdentifier, idToken, authority, oboAssertion, cloudGraphHostName, msGraphhost);\r\n    };\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    ResponseHandler.generateAuthenticationResult = function (cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenObj, requestState) {\r\n        var _a, _b, _c;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var accessToken, responseScopes, expiresOn, extExpiresOn, familyId, popTokenGenerator, uid, tid;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0:\r\n                        accessToken = \"\";\r\n                        responseScopes = [];\r\n                        expiresOn = null;\r\n                        familyId = Constants.EMPTY_STRING;\r\n                        if (!cacheRecord.accessToken) return [3 /*break*/, 4];\r\n                        if (!(cacheRecord.accessToken.tokenType === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        popTokenGenerator = new PopTokenGenerator(cryptoObj);\r\n                        return [4 /*yield*/, popTokenGenerator.signPopToken(cacheRecord.accessToken.secret, request)];\r\n                    case 1:\r\n                        accessToken = _d.sent();\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        accessToken = cacheRecord.accessToken.secret;\r\n                        _d.label = 3;\r\n                    case 3:\r\n                        responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n                        expiresOn = new Date(Number(cacheRecord.accessToken.expiresOn) * 1000);\r\n                        extExpiresOn = new Date(Number(cacheRecord.accessToken.extendedExpiresOn) * 1000);\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        if (cacheRecord.appMetadata) {\r\n                            familyId = cacheRecord.appMetadata.familyId === THE_FAMILY_ID ? THE_FAMILY_ID : Constants.EMPTY_STRING;\r\n                        }\r\n                        uid = (idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.claims.oid) || (idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.claims.sub) || Constants.EMPTY_STRING;\r\n                        tid = (idTokenObj === null || idTokenObj === void 0 ? void 0 : idTokenObj.claims.tid) || Constants.EMPTY_STRING;\r\n                        return [2 /*return*/, {\r\n                                authority: authority.canonicalAuthority,\r\n                                uniqueId: uid,\r\n                                tenantId: tid,\r\n                                scopes: responseScopes,\r\n                                account: cacheRecord.account ? cacheRecord.account.getAccountInfo() : null,\r\n                                idToken: idTokenObj ? idTokenObj.rawToken : Constants.EMPTY_STRING,\r\n                                idTokenClaims: idTokenObj ? idTokenObj.claims : {},\r\n                                accessToken: accessToken,\r\n                                fromCache: fromTokenCache,\r\n                                expiresOn: expiresOn,\r\n                                correlationId: request.correlationId,\r\n                                extExpiresOn: extExpiresOn,\r\n                                familyId: familyId,\r\n                                tokenType: ((_a = cacheRecord.accessToken) === null || _a === void 0 ? void 0 : _a.tokenType) || Constants.EMPTY_STRING,\r\n                                state: requestState ? requestState.userRequestState : Constants.EMPTY_STRING,\r\n                                cloudGraphHostName: ((_b = cacheRecord.account) === null || _b === void 0 ? void 0 : _b.cloudGraphHostName) || Constants.EMPTY_STRING,\r\n                                msGraphHost: ((_c = cacheRecord.account) === null || _c === void 0 ? void 0 : _c.msGraphHost) || Constants.EMPTY_STRING\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ResponseHandler;\r\n}());\n\nexport { ResponseHandler };\n//# sourceMappingURL=ResponseHandler.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign, __spreadArrays } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.js';\nimport { PromptValue, Separators, GrantType, AuthenticationScheme } from '../utils/Constants.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { buildClientInfoFromHomeAccountId, buildClientInfo } from '../account/ClientInfo.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n */\r\nvar AuthorizationCodeClient = /** @class */ (function (_super) {\r\n    __extends(AuthorizationCodeClient, _super);\r\n    function AuthorizationCodeClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.getAuthCodeUrl = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var queryString;\r\n            return __generator(this, function (_a) {\r\n                queryString = this.createAuthCodeUrlQueryString(request);\r\n                return [2 /*return*/, UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.acquireToken = function (request, authCodePayload) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqTimestamp, response, responseHandler;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.logger.info(\"in acquireToken call\");\r\n                        if (!request || StringUtils.isEmpty(request.code)) {\r\n                            throw ClientAuthError.createTokenRequestCannotBeMadeError();\r\n                        }\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        return [4 /*yield*/, this.executeTokenRequest(this.authority, request)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n                        // Validate response. This function throws a server error if an error is returned by the server.\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        return [4 /*yield*/, responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, authCodePayload)];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    AuthorizationCodeClient.prototype.handleFragmentResponse = function (hashFragment, cachedState) {\r\n        // Handle responses.\r\n        var responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\r\n        // Deserialize hash fragment response parameters.\r\n        var hashUrlString = new UrlString(hashFragment);\r\n        // Deserialize hash fragment response parameters.\r\n        var serverParams = UrlString.getDeserializedHash(hashUrlString.getHash());\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState, this.cryptoUtils);\r\n        // throw when there is no auth code in the response\r\n        if (!serverParams.code) {\r\n            throw ClientAuthError.createNoAuthCodeInServerResponseError();\r\n        }\r\n        return __assign(__assign({}, serverParams), { \r\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\r\n            code: serverParams.code });\r\n    };\r\n    /**\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    AuthorizationCodeClient.prototype.getLogoutUri = function (logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw ClientConfigurationError.createEmptyLogoutRequestError();\r\n        }\r\n        var queryString = this.createLogoutUrlQueryString(logoutRequest);\r\n        // Construct logout URI.\r\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\r\n    };\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.executeTokenRequest = function (authority, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var thumbprint, requestBody, queryParameters, ccsCredential, clientInfo, headers, endpoint;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        thumbprint = {\r\n                            clientId: this.config.authOptions.clientId,\r\n                            authority: authority.canonicalAuthority,\r\n                            scopes: request.scopes,\r\n                            authenticationScheme: request.authenticationScheme,\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            shrClaims: request.shrClaims\r\n                        };\r\n                        return [4 /*yield*/, this.createTokenRequestBody(request)];\r\n                    case 1:\r\n                        requestBody = _a.sent();\r\n                        queryParameters = this.createTokenQueryParameters(request);\r\n                        ccsCredential = undefined;\r\n                        if (request.clientInfo) {\r\n                            try {\r\n                                clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\r\n                                ccsCredential = {\r\n                                    credential: \"\" + clientInfo.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfo.utid,\r\n                                    type: CcsCredentialType.HOME_ACCOUNT_ID\r\n                                };\r\n                            }\r\n                            catch (e) {\r\n                                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n                            }\r\n                        }\r\n                        headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\r\n                        endpoint = StringUtils.isEmpty(queryParameters) ? authority.tokenEndpoint : authority.tokenEndpoint + \"?\" + queryParameters;\r\n                        return [2 /*return*/, this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenQueryParameters = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createTokenRequestBody = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parameterBuilder, clientAssertion, popTokenGenerator, cnfString, correlationId, ccsCred, clientInfo, clientInfo;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        parameterBuilder = new RequestParameterBuilder();\r\n                        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n                        // validate the redirectUri (to be a non null value)\r\n                        parameterBuilder.addRedirectUri(request.redirectUri);\r\n                        // Add scope array, parameter builder will add default scopes and dedupe\r\n                        parameterBuilder.addScopes(request.scopes);\r\n                        // add code: user set, not validated\r\n                        parameterBuilder.addAuthorizationCode(request.code);\r\n                        // Add library metadata\r\n                        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n                        parameterBuilder.addThrottling();\r\n                        if (this.serverTelemetryManager) {\r\n                            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n                        }\r\n                        // add code_verifier if passed\r\n                        if (request.codeVerifier) {\r\n                            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n                        }\r\n                        if (this.config.clientCredentials.clientSecret) {\r\n                            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n                        }\r\n                        if (this.config.clientCredentials.clientAssertion) {\r\n                            clientAssertion = this.config.clientCredentials.clientAssertion;\r\n                            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n                            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n                        }\r\n                        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n                        parameterBuilder.addClientInfo();\r\n                        if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\r\n                        return [4 /*yield*/, popTokenGenerator.generateCnf(request)];\r\n                    case 1:\r\n                        cnfString = _a.sent();\r\n                        parameterBuilder.addPopToken(cnfString);\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n                        parameterBuilder.addCorrelationId(correlationId);\r\n                        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\r\n                            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n                        }\r\n                        ccsCred = undefined;\r\n                        if (request.clientInfo) {\r\n                            try {\r\n                                clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils);\r\n                                ccsCred = {\r\n                                    credential: \"\" + clientInfo.uid + Separators.CLIENT_INFO_SEPARATOR + clientInfo.utid,\r\n                                    type: CcsCredentialType.HOME_ACCOUNT_ID\r\n                                };\r\n                            }\r\n                            catch (e) {\r\n                                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n                            }\r\n                        }\r\n                        else {\r\n                            ccsCred = request.ccsCredential;\r\n                        }\r\n                        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\r\n                        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n                            switch (ccsCred.type) {\r\n                                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                                    try {\r\n                                        clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\r\n                                        parameterBuilder.addCcsOid(clientInfo);\r\n                                    }\r\n                                    catch (e) {\r\n                                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                                    }\r\n                                    break;\r\n                                case CcsCredentialType.UPN:\r\n                                    parameterBuilder.addCcsUpn(ccsCred.credential);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, parameterBuilder.createQueryString()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createAuthCodeUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n        var requestScopes = __spreadArrays(request.scopes || [], request.extraScopesToConsent || []);\r\n        parameterBuilder.addScopes(requestScopes);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        // generate the correlationId if not set by the user and add\r\n        var correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge && request.codeChallengeMethod) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n        }\r\n        // Add sid or loginHint with preference for sid -> loginHint -> username of AccountInfo object\r\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\r\n            // AAD will throw if prompt=select_account is passed with an account hint\r\n            if (request.sid && request.prompt === PromptValue.NONE) {\r\n                // SessionID is only used in silent calls\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\r\n                parameterBuilder.addSid(request.sid);\r\n            }\r\n            else if (request.account) {\r\n                var accountSid = this.extractAccountSid(request.account);\r\n                // If account and loginHint are provided, we will check account first for sid before adding loginHint\r\n                if (accountSid && request.prompt === PromptValue.NONE) {\r\n                    // SessionId is only used in silent calls\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\r\n                    parameterBuilder.addSid(accountSid);\r\n                    try {\r\n                        var clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                    }\r\n                }\r\n                else if (request.loginHint) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\r\n                    parameterBuilder.addLoginHint(request.loginHint);\r\n                    parameterBuilder.addCcsUpn(request.loginHint);\r\n                }\r\n                else if (request.account.username) {\r\n                    // Fallback to account username if provided\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\r\n                    parameterBuilder.addLoginHint(request.account.username);\r\n                    try {\r\n                        var clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                    }\r\n                }\r\n            }\r\n            else if (request.loginHint) {\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\r\n                parameterBuilder.addLoginHint(request.loginHint);\r\n                parameterBuilder.addCcsUpn(request.loginHint);\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (!StringUtils.isEmpty(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * This API validates the `EndSessionRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    AuthorizationCodeClient.prototype.createLogoutUrlQueryString = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        if (request.postLogoutRedirectUri) {\r\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\r\n        }\r\n        if (request.correlationId) {\r\n            parameterBuilder.addCorrelationId(request.correlationId);\r\n        }\r\n        if (request.idTokenHint) {\r\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\r\n     * @param account\r\n     */\r\n    AuthorizationCodeClient.prototype.extractAccountSid = function (account) {\r\n        if (account.idTokenClaims) {\r\n            var tokenClaims = account.idTokenClaims;\r\n            return tokenClaims.sid || null;\r\n        }\r\n        return null;\r\n    };\r\n    return AuthorizationCodeClient;\r\n}(BaseClient));\n\nexport { AuthorizationCodeClient };\n//# sourceMappingURL=AuthorizationCodeClient.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends, __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.js';\nimport { AuthenticationScheme, GrantType, Errors } from '../utils/Constants.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { ServerError } from '../error/ServerError.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { CcsCredentialType } from '../account/CcsCredential.js';\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.js';\nimport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage } from '../error/InteractionRequiredAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * OAuth2.0 refresh token client\r\n */\r\nvar RefreshTokenClient = /** @class */ (function (_super) {\r\n    __extends(RefreshTokenClient, _super);\r\n    function RefreshTokenClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    RefreshTokenClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var reqTimestamp, response, responseHandler;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        reqTimestamp = TimeUtils.nowSeconds();\r\n                        return [4 /*yield*/, this.executeTokenRequest(request, this.authority)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n                        responseHandler.validateTokenResponse(response.body);\r\n                        return [2 /*return*/, responseHandler.handleServerTokenResponse(response.body, this.authority, reqTimestamp, request, undefined, undefined, true)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.acquireTokenByRefreshToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var isFOCI, noFamilyRTInCache, clientMismatchErrorWithFamilyRT;\r\n            return __generator(this, function (_a) {\r\n                // Cannot renew token if no request object is given.\r\n                if (!request) {\r\n                    throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                }\r\n                // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                if (!request.account) {\r\n                    throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                }\r\n                isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment, this.config.authOptions.clientId);\r\n                // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n                if (isFOCI) {\r\n                    try {\r\n                        return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, true)];\r\n                    }\r\n                    catch (e) {\r\n                        noFamilyRTInCache = e instanceof InteractionRequiredAuthError && e.errorCode === InteractionRequiredAuthErrorMessage.noTokensFoundError.code;\r\n                        clientMismatchErrorWithFamilyRT = e instanceof ServerError && e.errorCode === Errors.INVALID_GRANT_ERROR && e.subError === Errors.CLIENT_MISMATCH_ERROR;\r\n                        // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                        if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                            return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\r\n                            // throw in all other cases\r\n                        }\r\n                        else {\r\n                            throw e;\r\n                        }\r\n                    }\r\n                }\r\n                // fall back to application refresh token acquisition\r\n                return [2 /*return*/, this.acquireTokenWithCachedRefreshToken(request, false)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.acquireTokenWithCachedRefreshToken = function (request, foci) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var refreshToken, refreshTokenRequest;\r\n            return __generator(this, function (_a) {\r\n                refreshToken = this.cacheManager.readRefreshTokenFromCache(this.config.authOptions.clientId, request.account, foci);\r\n                // no refresh Token\r\n                if (!refreshToken) {\r\n                    throw InteractionRequiredAuthError.createNoTokensFoundError();\r\n                }\r\n                refreshTokenRequest = __assign(__assign({}, request), { refreshToken: refreshToken.secret, authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER, ccsCredential: {\r\n                        credential: request.account.homeAccountId,\r\n                        type: CcsCredentialType.HOME_ACCOUNT_ID\r\n                    } });\r\n                return [2 /*return*/, this.acquireToken(refreshTokenRequest)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    RefreshTokenClient.prototype.executeTokenRequest = function (request, authority) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestBody, queryParameters, headers, thumbprint, endpoint;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.createTokenRequestBody(request)];\r\n                    case 1:\r\n                        requestBody = _a.sent();\r\n                        queryParameters = this.createTokenQueryParameters(request);\r\n                        headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n                        thumbprint = {\r\n                            clientId: this.config.authOptions.clientId,\r\n                            authority: authority.canonicalAuthority,\r\n                            scopes: request.scopes,\r\n                            authenticationScheme: request.authenticationScheme,\r\n                            resourceRequestMethod: request.resourceRequestMethod,\r\n                            resourceRequestUri: request.resourceRequestUri,\r\n                            shrClaims: request.shrClaims\r\n                        };\r\n                        endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParameters);\r\n                        return [2 /*return*/, this.executePostToTokenEndpoint(endpoint, requestBody, headers, thumbprint)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.createTokenQueryParameters = function (request) {\r\n        var parameterBuilder = new RequestParameterBuilder();\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    };\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    RefreshTokenClient.prototype.createTokenRequestBody = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parameterBuilder, correlationId, clientAssertion, popTokenGenerator, _a, _b, clientInfo;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        parameterBuilder = new RequestParameterBuilder();\r\n                        parameterBuilder.addClientId(this.config.authOptions.clientId);\r\n                        parameterBuilder.addScopes(request.scopes);\r\n                        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n                        parameterBuilder.addClientInfo();\r\n                        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n                        parameterBuilder.addThrottling();\r\n                        if (this.serverTelemetryManager) {\r\n                            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n                        }\r\n                        correlationId = request.correlationId || this.config.cryptoInterface.createNewGuid();\r\n                        parameterBuilder.addCorrelationId(correlationId);\r\n                        parameterBuilder.addRefreshToken(request.refreshToken);\r\n                        if (this.config.clientCredentials.clientSecret) {\r\n                            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n                        }\r\n                        if (this.config.clientCredentials.clientAssertion) {\r\n                            clientAssertion = this.config.clientCredentials.clientAssertion;\r\n                            parameterBuilder.addClientAssertion(clientAssertion.assertion);\r\n                            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n                        }\r\n                        if (!(request.authenticationScheme === AuthenticationScheme.POP)) return [3 /*break*/, 2];\r\n                        popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\r\n                        _b = (_a = parameterBuilder).addPopToken;\r\n                        return [4 /*yield*/, popTokenGenerator.generateCnf(request)];\r\n                    case 1:\r\n                        _b.apply(_a, [_c.sent()]);\r\n                        _c.label = 2;\r\n                    case 2:\r\n                        if (!StringUtils.isEmptyObj(request.claims) || this.config.authOptions.clientCapabilities && this.config.authOptions.clientCapabilities.length > 0) {\r\n                            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n                        }\r\n                        if (this.config.systemOptions.preventCorsPreflight && request.ccsCredential) {\r\n                            switch (request.ccsCredential.type) {\r\n                                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                                    try {\r\n                                        clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\r\n                                        parameterBuilder.addCcsOid(clientInfo);\r\n                                    }\r\n                                    catch (e) {\r\n                                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" + e);\r\n                                    }\r\n                                    break;\r\n                                case CcsCredentialType.UPN:\r\n                                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        return [2 /*return*/, parameterBuilder.createQueryString()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RefreshTokenClient;\r\n}(BaseClient));\n\nexport { RefreshTokenClient };\n//# sourceMappingURL=RefreshTokenClient.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __extends, __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { BaseClient } from './BaseClient.js';\nimport { ScopeSet } from '../request/ScopeSet.js';\nimport { AuthToken } from '../account/AuthToken.js';\nimport { TimeUtils } from '../utils/TimeUtils.js';\nimport { RefreshTokenClient } from './RefreshTokenClient.js';\nimport { ClientAuthError, ClientAuthErrorMessage } from '../error/ClientAuthError.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ResponseHandler } from '../response/ResponseHandler.js';\nimport { CacheOutcome, AuthenticationScheme } from '../utils/Constants.js';\nimport { StringUtils } from '../utils/StringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar SilentFlowClient = /** @class */ (function (_super) {\r\n    __extends(SilentFlowClient, _super);\r\n    function SilentFlowClient(configuration) {\r\n        return _super.call(this, configuration) || this;\r\n    }\r\n    /**\r\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\r\n     * the given token and returns the renewed token\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.acquireToken = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var e_1, refreshTokenClient;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.acquireCachedToken(request)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                    case 2:\r\n                        e_1 = _a.sent();\r\n                        if (e_1 instanceof ClientAuthError && e_1.errorCode === ClientAuthErrorMessage.tokenRefreshRequired.code) {\r\n                            refreshTokenClient = new RefreshTokenClient(this.config);\r\n                            return [2 /*return*/, refreshTokenClient.acquireTokenByRefreshToken(request)];\r\n                        }\r\n                        else {\r\n                            throw e_1;\r\n                        }\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Retrieves token from cache or throws an error if it must be refreshed.\r\n     * @param request\r\n     */\r\n    SilentFlowClient.prototype.acquireCachedToken = function (request) {\r\n        var _a, _b, _c, _d;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var requestScopes, environment, authScheme, cacheRecord;\r\n            return __generator(this, function (_e) {\r\n                switch (_e.label) {\r\n                    case 0:\r\n                        // Cannot renew token if no request object is given.\r\n                        if (!request) {\r\n                            throw ClientConfigurationError.createEmptyTokenRequestError();\r\n                        }\r\n                        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n                        if (!request.account) {\r\n                            throw ClientAuthError.createNoAccountInSilentRequestError();\r\n                        }\r\n                        requestScopes = new ScopeSet(request.scopes || []);\r\n                        environment = request.authority || this.authority.getPreferredCache();\r\n                        authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\r\n                        cacheRecord = this.cacheManager.readCacheRecord(request.account, this.config.authOptions.clientId, requestScopes, environment, authScheme);\r\n                        if (request.forceRefresh) {\r\n                            // Must refresh due to present force_refresh flag.\r\n                            (_a = this.serverTelemetryManager) === null || _a === void 0 ? void 0 : _a.setCacheOutcome(CacheOutcome.FORCE_REFRESH);\r\n                            throw ClientAuthError.createRefreshRequiredError();\r\n                        }\r\n                        else if (!cacheRecord.accessToken) {\r\n                            // Must refresh due to non-existent access_token.\r\n                            (_b = this.serverTelemetryManager) === null || _b === void 0 ? void 0 : _b.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN);\r\n                            throw ClientAuthError.createRefreshRequiredError();\r\n                        }\r\n                        else if (TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\r\n                            TimeUtils.isTokenExpired(cacheRecord.accessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\r\n                            // Must refresh due to expired access_token.\r\n                            (_c = this.serverTelemetryManager) === null || _c === void 0 ? void 0 : _c.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED);\r\n                            throw ClientAuthError.createRefreshRequiredError();\r\n                        }\r\n                        else if (cacheRecord.accessToken.refreshOn && TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)) {\r\n                            // Must refresh due to the refresh_in value.\r\n                            (_d = this.serverTelemetryManager) === null || _d === void 0 ? void 0 : _d.setCacheOutcome(CacheOutcome.REFRESH_CACHED_ACCESS_TOKEN);\r\n                            throw ClientAuthError.createRefreshRequiredError();\r\n                        }\r\n                        else if (!StringUtils.isEmptyObj(request.claims)) {\r\n                            // Must refresh due to request parameters.\r\n                            throw ClientAuthError.createRefreshRequiredError();\r\n                        }\r\n                        if (this.config.serverTelemetryManager) {\r\n                            this.config.serverTelemetryManager.incrementCacheHits();\r\n                        }\r\n                        return [4 /*yield*/, this.generateResultFromCacheRecord(cacheRecord, request)];\r\n                    case 1: return [2 /*return*/, _e.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function to build response object from the CacheRecord\r\n     * @param cacheRecord\r\n     */\r\n    SilentFlowClient.prototype.generateResultFromCacheRecord = function (cacheRecord, request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var idTokenObj;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (cacheRecord.idToken) {\r\n                            idTokenObj = new AuthToken(cacheRecord.idToken.secret, this.config.cryptoInterface);\r\n                        }\r\n                        return [4 /*yield*/, ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenObj)];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return SilentFlowClient;\r\n}(BaseClient));\n\nexport { SilentFlowClient };\n//# sourceMappingURL=SilentFlowClient.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isOpenIdConfigResponse(response) {\r\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\r\n        response.hasOwnProperty(\"token_endpoint\") &&\r\n        response.hasOwnProperty(\"end_session_endpoint\") &&\r\n        response.hasOwnProperty(\"issuer\"));\r\n}\n\nexport { isOpenIdConfigResponse };\n//# sourceMappingURL=OpenIdConfigResponse.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nvar ProtocolMode;\r\n(function (ProtocolMode) {\r\n    ProtocolMode[\"AAD\"] = \"AAD\";\r\n    ProtocolMode[\"OIDC\"] = \"OIDC\";\r\n})(ProtocolMode || (ProtocolMode = {}));\n\nexport { ProtocolMode };\n//# sourceMappingURL=ProtocolMode.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { AUTHORITY_METADATA_CONSTANTS } from '../../utils/Constants.js';\nimport { TimeUtils } from '../../utils/TimeUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar AuthorityMetadataEntity = /** @class */ (function () {\r\n    function AuthorityMetadataEntity() {\r\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\r\n    }\r\n    /**\r\n     * Update the entity with new aliases, preferred_cache and preferred_network values\r\n     * @param metadata\r\n     * @param fromNetwork\r\n     */\r\n    AuthorityMetadataEntity.prototype.updateCloudDiscoveryMetadata = function (metadata, fromNetwork) {\r\n        this.aliases = metadata.aliases;\r\n        this.preferred_cache = metadata.preferred_cache;\r\n        this.preferred_network = metadata.preferred_network;\r\n        this.aliasesFromNetwork = fromNetwork;\r\n    };\r\n    /**\r\n     * Update the entity with new endpoints\r\n     * @param metadata\r\n     * @param fromNetwork\r\n     */\r\n    AuthorityMetadataEntity.prototype.updateEndpointMetadata = function (metadata, fromNetwork) {\r\n        this.authorization_endpoint = metadata.authorization_endpoint;\r\n        this.token_endpoint = metadata.token_endpoint;\r\n        this.end_session_endpoint = metadata.end_session_endpoint;\r\n        this.issuer = metadata.issuer;\r\n        this.endpointsFromNetwork = fromNetwork;\r\n    };\r\n    /**\r\n     * Save the authority that was used to create this cache entry\r\n     * @param authority\r\n     */\r\n    AuthorityMetadataEntity.prototype.updateCanonicalAuthority = function (authority) {\r\n        this.canonical_authority = authority;\r\n    };\r\n    /**\r\n     * Reset the exiresAt value\r\n     */\r\n    AuthorityMetadataEntity.prototype.resetExpiresAt = function () {\r\n        this.expiresAt = TimeUtils.nowSeconds() + AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\r\n    };\r\n    /**\r\n     * Returns whether or not the data needs to be refreshed\r\n     */\r\n    AuthorityMetadataEntity.prototype.isExpired = function () {\r\n        return this.expiresAt <= TimeUtils.nowSeconds();\r\n    };\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    AuthorityMetadataEntity.isAuthorityMetadataEntity = function (key, entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\r\n            entity.hasOwnProperty(\"aliases\") &&\r\n            entity.hasOwnProperty(\"preferred_cache\") &&\r\n            entity.hasOwnProperty(\"preferred_network\") &&\r\n            entity.hasOwnProperty(\"canonical_authority\") &&\r\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\r\n            entity.hasOwnProperty(\"token_endpoint\") &&\r\n            entity.hasOwnProperty(\"end_session_endpoint\") &&\r\n            entity.hasOwnProperty(\"issuer\") &&\r\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\r\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\r\n            entity.hasOwnProperty(\"expiresAt\"));\r\n    };\r\n    return AuthorityMetadataEntity;\r\n}());\n\nexport { AuthorityMetadataEntity };\n//# sourceMappingURL=AuthorityMetadataEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryResponse(response) {\r\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\r\n        response.hasOwnProperty(\"metadata\"));\r\n}\n\nexport { isCloudInstanceDiscoveryResponse };\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { RegionDiscoverySources, ResponseCodes, Constants } from '../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar RegionDiscovery = /** @class */ (function () {\r\n    function RegionDiscovery(networkInterface) {\r\n        this.networkInterface = networkInterface;\r\n    }\r\n    /**\r\n     * Detect the region from the application's environment.\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    RegionDiscovery.prototype.detectRegion = function (environmentRegion, regionDiscoveryMetadata) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var autodetectedRegionName, localIMDSVersionResponse, currentIMDSVersion, currentIMDSVersionResponse;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        autodetectedRegionName = environmentRegion;\r\n                        if (!!autodetectedRegionName) return [3 /*break*/, 8];\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        return [4 /*yield*/, this.getRegionFromIMDS(Constants.IMDS_VERSION)];\r\n                    case 2:\r\n                        localIMDSVersionResponse = _a.sent();\r\n                        if (localIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\r\n                            autodetectedRegionName = localIMDSVersionResponse.body;\r\n                            regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\r\n                        }\r\n                        if (!(localIMDSVersionResponse.status === ResponseCodes.httpBadRequest)) return [3 /*break*/, 5];\r\n                        return [4 /*yield*/, this.getCurrentVersion()];\r\n                    case 3:\r\n                        currentIMDSVersion = _a.sent();\r\n                        if (!currentIMDSVersion) {\r\n                            regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, this.getRegionFromIMDS(currentIMDSVersion)];\r\n                    case 4:\r\n                        currentIMDSVersionResponse = _a.sent();\r\n                        if (currentIMDSVersionResponse.status === ResponseCodes.httpSuccess) {\r\n                            autodetectedRegionName = currentIMDSVersionResponse.body;\r\n                            regionDiscoveryMetadata.region_source = RegionDiscoverySources.IMDS;\r\n                        }\r\n                        _a.label = 5;\r\n                    case 5: return [3 /*break*/, 7];\r\n                    case 6:\r\n                        _a.sent();\r\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        return [2 /*return*/, null];\r\n                    case 7: return [3 /*break*/, 9];\r\n                    case 8:\r\n                        regionDiscoveryMetadata.region_source = RegionDiscoverySources.ENVIRONMENT_VARIABLE;\r\n                        _a.label = 9;\r\n                    case 9:\r\n                        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\r\n                        if (!autodetectedRegionName) {\r\n                            regionDiscoveryMetadata.region_source = RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        }\r\n                        return [2 /*return*/, autodetectedRegionName || null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Make the call to the IMDS endpoint\r\n     *\r\n     * @param imdsEndpointUrl\r\n     * @returns Promise<NetworkResponse<string>>\r\n     */\r\n    RegionDiscovery.prototype.getRegionFromIMDS = function (version) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.networkInterface.sendGetRequestAsync(Constants.IMDS_ENDPOINT + \"?api-version=\" + version + \"&format=text\", RegionDiscovery.IMDS_OPTIONS, Constants.IMDS_TIMEOUT)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Get the most recent version of the IMDS endpoint available\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    RegionDiscovery.prototype.getCurrentVersion = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.networkInterface.sendGetRequestAsync(Constants.IMDS_ENDPOINT + \"?format=json\", RegionDiscovery.IMDS_OPTIONS)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\r\n                        if (response.status === ResponseCodes.httpBadRequest && response.body && response.body[\"newest-versions\"] && response.body[\"newest-versions\"].length > 0) {\r\n                            return [2 /*return*/, response.body[\"newest-versions\"][0]];\r\n                        }\r\n                        return [2 /*return*/, null];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, null];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Options for the IMDS endpoint request\r\n    RegionDiscovery.IMDS_OPTIONS = { headers: { \"Metadata\": \"true\" } };\r\n    return RegionDiscovery;\r\n}());\n\nexport { RegionDiscovery };\n//# sourceMappingURL=RegionDiscovery.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator, __assign } from '../_virtual/_tslib.js';\nimport { AuthorityType } from './AuthorityType.js';\nimport { isOpenIdConfigResponse } from './OpenIdConfigResponse.js';\nimport { UrlString } from '../url/UrlString.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\nimport { Constants, AuthorityMetadataSource, RegionDiscoveryOutcomes } from '../utils/Constants.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { ProtocolMode } from './ProtocolMode.js';\nimport { AuthorityMetadataEntity } from '../cache/entities/AuthorityMetadataEntity.js';\nimport { isCloudInstanceDiscoveryResponse } from './CloudInstanceDiscoveryResponse.js';\nimport { RegionDiscovery } from './RegionDiscovery.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n */\r\nvar Authority = /** @class */ (function () {\r\n    function Authority(authority, networkInterface, cacheManager, authorityOptions) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n        this.cacheManager = cacheManager;\r\n        this.authorityOptions = authorityOptions;\r\n        this.regionDiscovery = new RegionDiscovery(networkInterface);\r\n        this.regionDiscoveryMetadata = { region_used: undefined, region_source: undefined, region_outcome: undefined };\r\n    }\r\n    Object.defineProperty(Authority.prototype, \"authorityType\", {\r\n        // See above for AuthorityType\r\n        get: function () {\r\n            var pathSegments = this.canonicalAuthorityUrlComponents.PathSegments;\r\n            if (pathSegments.length && pathSegments[0].toLowerCase() === Constants.ADFS) {\r\n                return AuthorityType.Adfs;\r\n            }\r\n            return AuthorityType.Default;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"protocolMode\", {\r\n        /**\r\n         * ProtocolMode enum representing the way endpoints are constructed.\r\n         */\r\n        get: function () {\r\n            return this.authorityOptions.protocolMode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"options\", {\r\n        /**\r\n         * Returns authorityOptions which can be used to reinstantiate a new authority instance\r\n         */\r\n        get: function () {\r\n            return this.authorityOptions;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthority\", {\r\n        /**\r\n         * A URL that is the authority set by the developer\r\n         */\r\n        get: function () {\r\n            return this._canonicalAuthority.urlString;\r\n        },\r\n        /**\r\n         * Sets canonical authority.\r\n         */\r\n        set: function (url) {\r\n            this._canonicalAuthority = new UrlString(url);\r\n            this._canonicalAuthority.validateAsUri();\r\n            this._canonicalAuthorityUrlComponents = null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"canonicalAuthorityUrlComponents\", {\r\n        /**\r\n         * Get authority components.\r\n         */\r\n        get: function () {\r\n            if (!this._canonicalAuthorityUrlComponents) {\r\n                this._canonicalAuthorityUrlComponents = this._canonicalAuthority.getUrlComponents();\r\n            }\r\n            return this._canonicalAuthorityUrlComponents;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"hostnameAndPort\", {\r\n        /**\r\n         * Get hostname and port i.e. login.microsoftonline.com\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tenant\", {\r\n        /**\r\n         * Get tenant for authority.\r\n         */\r\n        get: function () {\r\n            return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"authorizationEndpoint\", {\r\n        /**\r\n         * OAuth /authorize endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                var endpoint = this.replacePath(this.metadata.authorization_endpoint);\r\n                return this.replaceTenant(endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"tokenEndpoint\", {\r\n        /**\r\n         * OAuth /token endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                var endpoint = this.replacePath(this.metadata.token_endpoint);\r\n                return this.replaceTenant(endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"deviceCodeEndpoint\", {\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                var endpoint = this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\r\n                return this.replaceTenant(endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"endSessionEndpoint\", {\r\n        /**\r\n         * OAuth logout endpoint for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                var endpoint = this.replacePath(this.metadata.end_session_endpoint);\r\n                return this.replaceTenant(endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Authority.prototype, \"selfSignedJwtAudience\", {\r\n        /**\r\n         * OAuth issuer for requests\r\n         */\r\n        get: function () {\r\n            if (this.discoveryComplete()) {\r\n                var endpoint = this.replacePath(this.metadata.issuer);\r\n                return this.replaceTenant(endpoint);\r\n            }\r\n            else {\r\n                throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replaceTenant = function (urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    };\r\n    /**\r\n     * Replaces path such as tenant or policy with the current tenant or policy.\r\n     * @param urlString\r\n     */\r\n    Authority.prototype.replacePath = function (urlString) {\r\n        var endpoint = urlString;\r\n        var cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\r\n        var cachedAuthorityParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n        var currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\r\n        currentAuthorityParts.forEach(function (currentPart, index) {\r\n            var cachedPart = cachedAuthorityParts[index];\r\n            if (currentPart !== cachedPart) {\r\n                endpoint = endpoint.replace(\"/\" + cachedPart + \"/\", \"/\" + currentPart + \"/\");\r\n            }\r\n        });\r\n        return endpoint;\r\n    };\r\n    Object.defineProperty(Authority.prototype, \"defaultOpenIdConfigurationEndpoint\", {\r\n        /**\r\n         * The default open id configuration endpoint for any canonical authority.\r\n         */\r\n        get: function () {\r\n            if (this.authorityType === AuthorityType.Adfs || this.protocolMode === ProtocolMode.OIDC) {\r\n                return this.canonicalAuthority + \".well-known/openid-configuration\";\r\n            }\r\n            return this.canonicalAuthority + \"v2.0/.well-known/openid-configuration\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Boolean that returns whethr or not tenant discovery has been completed.\r\n     */\r\n    Authority.prototype.discoveryComplete = function () {\r\n        return !!this.metadata;\r\n    };\r\n    /**\r\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\r\n     * and the /authorize, /token and logout endpoints.\r\n     */\r\n    Authority.prototype.resolveEndpointsAsync = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var metadataEntity, cloudDiscoverySource, endpointSource, cacheKey;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\r\n                        if (!metadataEntity) {\r\n                            metadataEntity = new AuthorityMetadataEntity();\r\n                            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\r\n                        }\r\n                        return [4 /*yield*/, this.updateCloudDiscoveryMetadata(metadataEntity)];\r\n                    case 1:\r\n                        cloudDiscoverySource = _a.sent();\r\n                        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\r\n                        return [4 /*yield*/, this.updateEndpointMetadata(metadataEntity)];\r\n                    case 2:\r\n                        endpointSource = _a.sent();\r\n                        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE && endpointSource !== AuthorityMetadataSource.CACHE) {\r\n                            // Reset the expiration time unless both values came from a successful cache lookup\r\n                            metadataEntity.resetExpiresAt();\r\n                            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\r\n                        }\r\n                        cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\r\n                        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\r\n                        this.metadata = metadataEntity;\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\r\n     * @param metadataEntity\r\n     */\r\n    Authority.prototype.updateEndpointMetadata = function (metadataEntity) {\r\n        var _a;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var metadata, autodetectedRegionName, azureRegion;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        metadata = this.getEndpointMetadataFromConfig();\r\n                        if (metadata) {\r\n                            metadataEntity.updateEndpointMetadata(metadata, false);\r\n                            return [2 /*return*/, AuthorityMetadataSource.CONFIG];\r\n                        }\r\n                        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.endpointsFromNetwork && !metadataEntity.isExpired()) {\r\n                            // No need to update\r\n                            return [2 /*return*/, AuthorityMetadataSource.CACHE];\r\n                        }\r\n                        return [4 /*yield*/, this.getEndpointMetadataFromNetwork()];\r\n                    case 1:\r\n                        metadata = _b.sent();\r\n                        if (!metadata) return [3 /*break*/, 4];\r\n                        if (!((_a = this.authorityOptions.azureRegionConfiguration) === null || _a === void 0 ? void 0 : _a.azureRegion)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.regionDiscovery.detectRegion(this.authorityOptions.azureRegionConfiguration.environmentRegion, this.regionDiscoveryMetadata)];\r\n                    case 2:\r\n                        autodetectedRegionName = _b.sent();\r\n                        azureRegion = this.authorityOptions.azureRegionConfiguration.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\r\n                            ? autodetectedRegionName\r\n                            : this.authorityOptions.azureRegionConfiguration.azureRegion;\r\n                        if (this.authorityOptions.azureRegionConfiguration.azureRegion === Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\r\n                            this.regionDiscoveryMetadata.region_outcome = autodetectedRegionName ?\r\n                                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL :\r\n                                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\r\n                        }\r\n                        else {\r\n                            if (autodetectedRegionName) {\r\n                                this.regionDiscoveryMetadata.region_outcome = (this.authorityOptions.azureRegionConfiguration.azureRegion === autodetectedRegionName) ?\r\n                                    RegionDiscoveryOutcomes.CONFIGURED_MATCHES_DETECTED :\r\n                                    RegionDiscoveryOutcomes.CONFIGURED_NOT_DETECTED;\r\n                            }\r\n                            else {\r\n                                this.regionDiscoveryMetadata.region_outcome = RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\r\n                            }\r\n                        }\r\n                        if (azureRegion) {\r\n                            this.regionDiscoveryMetadata.region_used = azureRegion;\r\n                            metadata = Authority.replaceWithRegionalInformation(metadata, azureRegion);\r\n                        }\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        metadataEntity.updateEndpointMetadata(metadata, true);\r\n                        return [2 /*return*/, AuthorityMetadataSource.NETWORK];\r\n                    case 4: throw ClientAuthError.createUnableToGetOpenidConfigError(this.defaultOpenIdConfigurationEndpoint);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Compares the number of url components after the domain to determine if the cached authority metadata can be used for the requested authority\r\n     * Protects against same domain different authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\r\n     * @param metadataEntity\r\n     */\r\n    Authority.prototype.isAuthoritySameType = function (metadataEntity) {\r\n        var cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\r\n        var cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n        return cachedParts.length === this.canonicalAuthorityUrlComponents.PathSegments.length;\r\n    };\r\n    /**\r\n     * Parse authorityMetadata config option\r\n     */\r\n    Authority.prototype.getEndpointMetadataFromConfig = function () {\r\n        if (this.authorityOptions.authorityMetadata) {\r\n            try {\r\n                return JSON.parse(this.authorityOptions.authorityMetadata);\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidAuthorityMetadataError();\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     */\r\n    Authority.prototype.getEndpointMetadataFromNetwork = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.networkInterface.sendGetRequestAsync(this.defaultOpenIdConfigurationEndpoint)];\r\n                    case 1:\r\n                        response = _a.sent();\r\n                        return [2 /*return*/, isOpenIdConfigResponse(response.body) ? response.body : null];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, null];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache and returns where the information was retrived from\r\n     * @param cachedMetadata\r\n     * @param newMetadata\r\n     */\r\n    Authority.prototype.updateCloudDiscoveryMetadata = function (metadataEntity) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var metadata;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        metadata = this.getCloudDiscoveryMetadataFromConfig();\r\n                        if (metadata) {\r\n                            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\r\n                            return [2 /*return*/, AuthorityMetadataSource.CONFIG];\r\n                        }\r\n                        // If The cached metadata came from config but that config was not passed to this instance, we must go to the network\r\n                        if (this.isAuthoritySameType(metadataEntity) && metadataEntity.aliasesFromNetwork && !metadataEntity.isExpired()) {\r\n                            // No need to update\r\n                            return [2 /*return*/, AuthorityMetadataSource.CACHE];\r\n                        }\r\n                        return [4 /*yield*/, this.getCloudDiscoveryMetadataFromNetwork()];\r\n                    case 1:\r\n                        metadata = _a.sent();\r\n                        if (metadata) {\r\n                            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\r\n                            return [2 /*return*/, AuthorityMetadataSource.NETWORK];\r\n                        }\r\n                        else {\r\n                            // Metadata could not be obtained from config, cache or network\r\n                            throw ClientConfigurationError.createUntrustedAuthorityError();\r\n                        }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\r\n     */\r\n    Authority.prototype.getCloudDiscoveryMetadataFromConfig = function () {\r\n        // Check if network response was provided in config\r\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\r\n            try {\r\n                var parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\r\n                var metadata = Authority.getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\r\n                if (metadata) {\r\n                    return metadata;\r\n                }\r\n            }\r\n            catch (e) {\r\n                throw ClientConfigurationError.createInvalidCloudDiscoveryMetadataError();\r\n            }\r\n        }\r\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\r\n        if (this.isInKnownAuthorities()) {\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     * @param networkInterface\r\n     */\r\n    Authority.prototype.getCloudDiscoveryMetadataFromNetwork = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var instanceDiscoveryEndpoint, match, response, metadata;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        instanceDiscoveryEndpoint = \"\" + Constants.AAD_INSTANCE_DISCOVERY_ENDPT + this.canonicalAuthority + \"oauth2/v2.0/authorize\";\r\n                        match = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint)];\r\n                    case 2:\r\n                        response = _a.sent();\r\n                        metadata = isCloudInstanceDiscoveryResponse(response.body) ? response.body.metadata : [];\r\n                        if (metadata.length === 0) {\r\n                            // If no metadata is returned, authority is untrusted\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        match = Authority.getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, null];\r\n                    case 4:\r\n                        if (!match) {\r\n                            // Custom Domain scenario, host is trusted because Instance Discovery call succeeded \r\n                            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n                        }\r\n                        return [2 /*return*/, match];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Helper function to determine if this host is included in the knownAuthorities config option\r\n     */\r\n    Authority.prototype.isInKnownAuthorities = function () {\r\n        var _this = this;\r\n        var matches = this.authorityOptions.knownAuthorities.filter(function (authority) {\r\n            return UrlString.getDomainFromUrl(authority).toLowerCase() === _this.hostnameAndPort;\r\n        });\r\n        return matches.length > 0;\r\n    };\r\n    /**\r\n     * Creates cloud discovery metadata object from a given host\r\n     * @param host\r\n     */\r\n    Authority.createCloudDiscoveryMetadataFromHost = function (host) {\r\n        return {\r\n            preferred_network: host,\r\n            preferred_cache: host,\r\n            aliases: [host]\r\n        };\r\n    };\r\n    /**\r\n     * Searches instance discovery network response for the entry that contains the host in the aliases list\r\n     * @param response\r\n     * @param authority\r\n     */\r\n    Authority.getCloudDiscoveryMetadataFromNetworkResponse = function (response, authority) {\r\n        for (var i = 0; i < response.length; i++) {\r\n            var metadata = response[i];\r\n            if (metadata.aliases.indexOf(authority) > -1) {\r\n                return metadata;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * helper function to generate environment from authority object\r\n     */\r\n    Authority.prototype.getPreferredCache = function () {\r\n        if (this.discoveryComplete()) {\r\n            return this.metadata.preferred_cache;\r\n        }\r\n        else {\r\n            throw ClientAuthError.createEndpointDiscoveryIncompleteError(\"Discovery incomplete.\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether or not the provided host is an alias of this authority instance\r\n     * @param host\r\n     */\r\n    Authority.prototype.isAlias = function (host) {\r\n        return this.metadata.aliases.indexOf(host) > -1;\r\n    };\r\n    /**\r\n     * Checks whether the provided host is that of a public cloud authority\r\n     *\r\n     * @param authority string\r\n     * @returns bool\r\n     */\r\n    Authority.isPublicCloudAuthority = function (host) {\r\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\r\n    };\r\n    /**\r\n     * Rebuild the authority string with the region\r\n     *\r\n     * @param host string\r\n     * @param region string\r\n     */\r\n    Authority.buildRegionalAuthorityString = function (host, region, queryString) {\r\n        // Create and validate a Url string object with the initial authority string\r\n        var authorityUrlInstance = new UrlString(host);\r\n        authorityUrlInstance.validateAsUri();\r\n        var authorityUrlParts = authorityUrlInstance.getUrlComponents();\r\n        var hostNameAndPort = region + \".\" + authorityUrlParts.HostNameAndPort;\r\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\r\n            hostNameAndPort = region + \".\" + Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX;\r\n        }\r\n        // Include the query string portion of the url\r\n        var url = UrlString.constructAuthorityUriFromObject(__assign(__assign({}, authorityUrlInstance.getUrlComponents()), { HostNameAndPort: hostNameAndPort })).urlString;\r\n        // Add the query string if a query string was provided\r\n        if (queryString)\r\n            return url + \"?\" + queryString;\r\n        return url;\r\n    };\r\n    /**\r\n     * Replace the endpoints in the metadata object with their regional equivalents.\r\n     *\r\n     * @param metadata OpenIdConfigResponse\r\n     * @param azureRegion string\r\n     */\r\n    Authority.replaceWithRegionalInformation = function (metadata, azureRegion) {\r\n        metadata.authorization_endpoint = Authority.buildRegionalAuthorityString(metadata.authorization_endpoint, azureRegion);\r\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\r\n        metadata.token_endpoint = Authority.buildRegionalAuthorityString(metadata.token_endpoint, azureRegion, \"allowestsrnonmsi=true\");\r\n        metadata.end_session_endpoint = Authority.buildRegionalAuthorityString(metadata.end_session_endpoint, azureRegion);\r\n        return metadata;\r\n    };\r\n    return Authority;\r\n}());\n\nexport { Authority };\n//# sourceMappingURL=Authority.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { __awaiter, __generator } from '../_virtual/_tslib.js';\nimport { Authority } from './Authority.js';\nimport { ClientConfigurationError } from '../error/ClientConfigurationError.js';\nimport { StringUtils } from '../utils/StringUtils.js';\nimport { ClientAuthError } from '../error/ClientAuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar AuthorityFactory = /** @class */ (function () {\r\n    function AuthorityFactory() {\r\n    }\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Also performs endpoint discovery.\r\n     *\r\n     * @param authorityUri\r\n     * @param networkClient\r\n     * @param protocolMode\r\n     */\r\n    AuthorityFactory.createDiscoveredInstance = function (authorityUri, networkClient, cacheManager, authorityOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var acquireTokenAuthority, e_1;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        acquireTokenAuthority = AuthorityFactory.createInstance(authorityUri, networkClient, cacheManager, authorityOptions);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, acquireTokenAuthority.resolveEndpointsAsync()];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [2 /*return*/, acquireTokenAuthority];\r\n                    case 3:\r\n                        e_1 = _a.sent();\r\n                        throw ClientAuthError.createEndpointDiscoveryIncompleteError(e_1);\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Create an authority object of the correct type based on the url\r\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n     *\r\n     * Does not perform endpoint discovery.\r\n     *\r\n     * @param authorityUrl\r\n     * @param networkInterface\r\n     * @param protocolMode\r\n     */\r\n    AuthorityFactory.createInstance = function (authorityUrl, networkInterface, cacheManager, authorityOptions) {\r\n        // Throw error if authority url is empty\r\n        if (StringUtils.isEmpty(authorityUrl)) {\r\n            throw ClientConfigurationError.createUrlEmptyError();\r\n        }\r\n        return new Authority(authorityUrl, networkInterface, cacheManager, authorityOptions);\r\n    };\r\n    return AuthorityFactory;\r\n}());\n\nexport { AuthorityFactory };\n//# sourceMappingURL=AuthorityFactory.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { SERVER_TELEM_CONSTANTS } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ServerTelemetryEntity = /** @class */ (function () {\r\n    function ServerTelemetryEntity() {\r\n        this.failedRequests = [];\r\n        this.errors = [];\r\n        this.cacheHits = 0;\r\n    }\r\n    /**\r\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n     * @param key\r\n     * @param entity\r\n     */\r\n    ServerTelemetryEntity.isServerTelemetryEntity = function (key, entity) {\r\n        var validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n        var validateEntity = true;\r\n        if (entity) {\r\n            validateEntity =\r\n                entity.hasOwnProperty(\"failedRequests\") &&\r\n                    entity.hasOwnProperty(\"errors\") &&\r\n                    entity.hasOwnProperty(\"cacheHits\");\r\n        }\r\n        return validateKey && validateEntity;\r\n    };\r\n    return ServerTelemetryEntity;\r\n}());\n\nexport { ServerTelemetryEntity };\n//# sourceMappingURL=ServerTelemetryEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { ThrottlingConstants } from '../../utils/Constants.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ThrottlingEntity = /** @class */ (function () {\r\n    function ThrottlingEntity() {\r\n    }\r\n    /**\r\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n     * @param key\r\n     * @param entity\r\n     */\r\n    ThrottlingEntity.isThrottlingEntity = function (key, entity) {\r\n        var validateKey = false;\r\n        if (key) {\r\n            validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n        }\r\n        var validateEntity = true;\r\n        if (entity) {\r\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n        }\r\n        return validateKey && validateEntity;\r\n    };\r\n    return ThrottlingEntity;\r\n}());\n\nexport { ThrottlingEntity };\n//# sourceMappingURL=ThrottlingEntity.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { AuthError } from '../error/AuthError.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar StubbedNetworkModule = {\r\n    sendGetRequestAsync: function () {\r\n        var notImplErr = \"Network interface - sendGetRequestAsync() has not been implemented for the Network interface.\";\r\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\r\n    },\r\n    sendPostRequestAsync: function () {\r\n        var notImplErr = \"Network interface - sendPostRequestAsync() has not been implemented for the Network interface.\";\r\n        return Promise.reject(AuthError.createUnexpectedError(notImplErr));\r\n    }\r\n};\n\nexport { StubbedNetworkModule };\n//# sourceMappingURL=INetworkModule.js.map\n","/*! @azure/msal-common v5.0.1 2021-10-05 */\n'use strict';\nimport { SERVER_TELEM_CONSTANTS, CacheOutcome, Constants, Separators } from '../../utils/Constants.js';\nimport { ServerTelemetryEntity } from '../../cache/entities/ServerTelemetryEntity.js';\nimport { StringUtils } from '../../utils/StringUtils.js';\n\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nvar ServerTelemetryManager = /** @class */ (function () {\r\n    function ServerTelemetryManager(telemetryRequest, cacheManager) {\r\n        this.cacheOutcome = CacheOutcome.NO_CACHE_HIT;\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\r\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\r\n        this.telemetryCacheKey = SERVER_TELEM_CONSTANTS.CACHE_KEY + Separators.CACHE_KEY_SEPARATOR + telemetryRequest.clientId;\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry to request\r\n     */\r\n    ServerTelemetryManager.prototype.generateCurrentRequestHeaderValue = function () {\r\n        var request = \"\" + this.apiId + SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR + this.cacheOutcome;\r\n        var platformFields = [this.wrapperSKU, this.wrapperVer].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var regionDiscoveryFields = this.getRegionDiscoveryFields();\r\n        var requestWithRegionDiscoveryFields = [request, regionDiscoveryFields].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, requestWithRegionDiscoveryFields, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    };\r\n    /**\r\n     * API to add MSER Telemetry for the last failed request\r\n     */\r\n    ServerTelemetryManager.prototype.generateLastRequestHeaderValue = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        var maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        var failedRequests = lastRequests.failedRequests.slice(0, 2 * maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var errors = lastRequests.errors.slice(0, maxErrors).join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        var errorCount = lastRequests.errors.length;\r\n        // Indicate whether this header contains all data or partial data\r\n        var overflow = maxErrors < errorCount ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\r\n        var platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [SERVER_TELEM_CONSTANTS.SCHEMA_VERSION, lastRequests.cacheHits, failedRequests, errors, platformFields].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    };\r\n    /**\r\n     * API to cache token failures for MSER data capture\r\n     * @param error\r\n     */\r\n    ServerTelemetryManager.prototype.cacheFailedRequest = function (error) {\r\n        var lastRequests = this.getLastRequests();\r\n        if (lastRequests.errors.length >= SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\r\n            // Remove a cached error to make room, first in first out\r\n            lastRequests.failedRequests.shift(); // apiId\r\n            lastRequests.failedRequests.shift(); // correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        if (!StringUtils.isEmpty(error.subError)) {\r\n            lastRequests.errors.push(error.subError);\r\n        }\r\n        else if (!StringUtils.isEmpty(error.errorCode)) {\r\n            lastRequests.errors.push(error.errorCode);\r\n        }\r\n        else if (!!error && error.toString()) {\r\n            lastRequests.errors.push(error.toString());\r\n        }\r\n        else {\r\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\r\n        }\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return;\r\n    };\r\n    /**\r\n     * Update server telemetry cache entry by incrementing cache hit counter\r\n     */\r\n    ServerTelemetryManager.prototype.incrementCacheHits = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return lastRequests.cacheHits;\r\n    };\r\n    /**\r\n     * Get the server telemetry entity from cache or initialize a new one\r\n     */\r\n    ServerTelemetryManager.prototype.getLastRequests = function () {\r\n        var initialValue = new ServerTelemetryEntity();\r\n        var lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\r\n        return lastRequests || initialValue;\r\n    };\r\n    /**\r\n     * Remove server telemetry cache entry\r\n     */\r\n    ServerTelemetryManager.prototype.clearTelemetryCache = function () {\r\n        var lastRequests = this.getLastRequests();\r\n        var numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        var errorCount = lastRequests.errors.length;\r\n        if (numErrorsFlushed === errorCount) {\r\n            // All errors were sent on last request, clear Telemetry cache\r\n            this.cacheManager.removeItem(this.telemetryCacheKey);\r\n        }\r\n        else {\r\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\r\n            var serverTelemEntity = new ServerTelemetryEntity();\r\n            serverTelemEntity.failedRequests = lastRequests.failedRequests.slice(numErrorsFlushed * 2); // failedRequests contains 2 items for each error\r\n            serverTelemEntity.errors = lastRequests.errors.slice(numErrorsFlushed);\r\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\r\n     * @param serverTelemetryEntity\r\n     */\r\n    ServerTelemetryManager.maxErrorsToSend = function (serverTelemetryEntity) {\r\n        var i;\r\n        var maxErrors = 0;\r\n        var dataSize = 0;\r\n        var errorCount = serverTelemetryEntity.errors.length;\r\n        for (i = 0; i < errorCount; i++) {\r\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\r\n            var apiId = serverTelemetryEntity.failedRequests[2 * i] || Constants.EMPTY_STRING;\r\n            var correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] || Constants.EMPTY_STRING;\r\n            var errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\r\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\r\n            dataSize += apiId.toString().length + correlationId.toString().length + errorCode.length + 3;\r\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\r\n                // Adding this entry to the header would still keep header size below the limit\r\n                maxErrors += 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return maxErrors;\r\n    };\r\n    /**\r\n     * Get the region discovery fields\r\n     *\r\n     * @returns string\r\n     */\r\n    ServerTelemetryManager.prototype.getRegionDiscoveryFields = function () {\r\n        var regionDiscoveryFields = [];\r\n        regionDiscoveryFields.push(this.regionUsed || \"\");\r\n        regionDiscoveryFields.push(this.regionSource || \"\");\r\n        regionDiscoveryFields.push(this.regionOutcome || \"\");\r\n        return regionDiscoveryFields.join(\",\");\r\n    };\r\n    /**\r\n     * Update the region discovery metadata\r\n     *\r\n     * @param regionDiscoveryMetadata\r\n     * @returns void\r\n     */\r\n    ServerTelemetryManager.prototype.updateRegionDiscoveryMetadata = function (regionDiscoveryMetadata) {\r\n        this.regionUsed = regionDiscoveryMetadata.region_used;\r\n        this.regionSource = regionDiscoveryMetadata.region_source;\r\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\r\n    };\r\n    /**\r\n     * Set cache outcome\r\n     */\r\n    ServerTelemetryManager.prototype.setCacheOutcome = function (cacheOutcome) {\r\n        this.cacheOutcome = cacheOutcome;\r\n    };\r\n    return ServerTelemetryManager;\r\n}());\n\nexport { ServerTelemetryManager };\n//# sourceMappingURL=ServerTelemetryManager.js.map\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const BrowserConstants = {\r\n    /**\r\n     * Interaction in progress cache value\r\n     */\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    /**\r\n     * Invalid grant error code\r\n     */\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    /**\r\n     * Default popup window width\r\n     */\r\n    POPUP_WIDTH: 483,\r\n    /**\r\n     * Default popup window height\r\n     */\r\n    POPUP_HEIGHT: 600,\r\n    /**\r\n     * Name of the popup window starts with\r\n     */\r\n    POPUP_NAME_PREFIX: \"msal\",\r\n    /**\r\n     * Default popup monitor poll interval in milliseconds\r\n     */\r\n    POLL_INTERVAL_MS: 50,\r\n    /**\r\n     * Msal-browser SKU\r\n     */\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\n\r\nexport enum BrowserCacheLocation {\r\n    LocalStorage = \"localStorage\",\r\n    SessionStorage = \"sessionStorage\",\r\n    MemoryStorage = \"memoryStorage\"\r\n}\r\n\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nexport enum HTTP_REQUEST_TYPE {\r\n    GET = \"GET\",\r\n    POST = \"POST\"\r\n}\r\n\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nexport enum TemporaryCacheKeys {\r\n    AUTHORITY = \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT = \"acquireToken.account\",\r\n    SESSION_STATE = \"session.state\",\r\n    REQUEST_STATE = \"request.state\",\r\n    NONCE_IDTOKEN = \"nonce.id_token\",\r\n    ORIGIN_URI = \"request.origin\",\r\n    RENEW_STATUS = \"token.renew.status\",\r\n    URL_HASH = \"urlHash\",\r\n    REQUEST_PARAMS = \"request.params\",\r\n    SCOPES = \"scopes\",\r\n    INTERACTION_STATUS_KEY = \"interaction.status\",\r\n    CCS_CREDENTIAL = \"ccs.credential\",\r\n    CORRELATION_ID = \"request.correlationId\"\r\n}\r\n\r\n/**\r\n * Cache keys stored in-memory\r\n */\r\nexport enum InMemoryCacheKeys {\r\n    WRAPPER_SKU = \"wrapper.sku\",\r\n    WRAPPER_VER = \"wrapper.version\"\r\n}\r\n\r\n/**\r\n * API Codes for Telemetry purposes. \r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nexport enum ApiId {\r\n    acquireTokenRedirect = 861,\r\n    acquireTokenPopup = 862,\r\n    ssoSilent = 863,\r\n    acquireTokenSilent_authCode = 864,\r\n    handleRedirectPromise = 865,\r\n    acquireTokenSilent_silentFlow = 61,\r\n    logout = 961,\r\n    logoutPopup = 962\r\n}\r\n\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nexport enum InteractionType {\r\n    Redirect = \"redirect\",\r\n    Popup = \"popup\",\r\n    Silent = \"silent\"\r\n}\r\n\r\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\r\nexport enum InteractionStatus {\r\n    /**\r\n     * Initial status before interaction occurs\r\n     */\r\n    Startup = \"startup\",\r\n    /**\r\n     * Status set when all login calls occuring\r\n     */\r\n    Login = \"login\",\r\n    /**\r\n     * Status set when logout call occuring\r\n     */ \r\n    Logout = \"logout\",\r\n    /**\r\n     * Status set for acquireToken calls\r\n     */\r\n    AcquireToken = \"acquireToken\",\r\n    /**\r\n     * Status set for ssoSilent calls\r\n     */\r\n    SsoSilent = \"ssoSilent\",\r\n    /**\r\n     * Status set when handleRedirect in progress\r\n     */\r\n    HandleRedirect = \"handleRedirect\",\r\n    /**\r\n     * Status set when interaction is complete\r\n     */\r\n    None = \"none\"\r\n}\r\n\r\nexport const DEFAULT_REQUEST: RedirectRequest|PopupRequest = {\r\n    scopes: OIDC_DEFAULT_SCOPES\r\n};\r\n\r\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\r\nexport const KEY_FORMAT_JWK = \"jwk\";\r\n\r\n// Supported wrapper SKUs\r\nexport enum WrapperSKU {\r\n    React = \"@azure/msal-react\",\r\n    Angular = \"@azure/msal-angular\"\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility class for math specific functions in browser.\r\n */\r\nexport class MathUtils {\r\n\r\n    /**\r\n     * Decimal to Hex\r\n     *\r\n     * @param num\r\n     */\r\n    static decimalToHex(num: number): string {\r\n        let hex: string = num.toString(16);\r\n        while (hex.length < 2) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        return hex;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { MathUtils } from \"../utils/MathUtils\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\nexport class GuidGenerator {\r\n\r\n    // browser crypto object used to generate random values\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /*\r\n     * RFC4122: The version 4 UUID is meant for generating UUIDs from truly-random or\r\n     * pseudo-random numbers.\r\n     * The algorithm is as follows:\r\n     *     Set the two most significant bits (bits 6 and 7) of the\r\n     *        clock_seq_hi_and_reserved to zero and one, respectively.\r\n     *     Set the four most significant bits (bits 12 through 15) of the\r\n     *        time_hi_and_version field to the 4-bit version number from\r\n     *        Section 4.1.3. Version4\r\n     *     Set all the other bits to randomly (or pseudo-randomly) chosen\r\n     *     values.\r\n     * UUID                   = time-low \"-\" time-mid \"-\"time-high-and-version \"-\"clock-seq-reserved and low(2hexOctet)\"-\" node\r\n     * time-low               = 4hexOctet\r\n     * time-mid               = 2hexOctet\r\n     * time-high-and-version  = 2hexOctet\r\n     * clock-seq-and-reserved = hexOctet:\r\n     * clock-seq-low          = hexOctet\r\n     * node                   = 6hexOctet\r\n     * Format: xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\r\n     * y could be 1000, 1001, 1010, 1011 since most significant two bits needs to be 10\r\n     * y values are 8, 9, A, B\r\n     */\r\n    generateGuid(): string {\r\n        try {\r\n            const buffer: Uint8Array = new Uint8Array(16);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n\r\n            // buffer[6] and buffer[7] represents the time_hi_and_version field. We will set the four most significant bits (4 through 7) of buffer[6] to represent decimal number 4 (UUID version number).\r\n            buffer[6] |= 0x40; // buffer[6] | 01000000 will set the 6 bit to 1.\r\n            buffer[6] &= 0x4f; // buffer[6] & 01001111 will set the 4, 5, and 7 bit to 0 such that bits 4-7 == 0100 = \"4\".\r\n\r\n            // buffer[8] represents the clock_seq_hi_and_reserved field. We will set the two most significant bits (6 and 7) of the clock_seq_hi_and_reserved to zero and one, respectively.\r\n            buffer[8] |= 0x80; // buffer[8] | 10000000 will set the 7 bit to 1.\r\n            buffer[8] &= 0xbf; // buffer[8] & 10111111 will set the 6 bit to 0.\r\n\r\n            return MathUtils.decimalToHex(buffer[0]) + MathUtils.decimalToHex(buffer[1])\r\n                + MathUtils.decimalToHex(buffer[2]) + MathUtils.decimalToHex(buffer[3])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[4]) + MathUtils.decimalToHex(buffer[5])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[6]) + MathUtils.decimalToHex(buffer[7])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[8]) + MathUtils.decimalToHex(buffer[9])\r\n                + \"-\" + MathUtils.decimalToHex(buffer[10]) + MathUtils.decimalToHex(buffer[11])\r\n                + MathUtils.decimalToHex(buffer[12]) + MathUtils.decimalToHex(buffer[13])\r\n                + MathUtils.decimalToHex(buffer[14]) + MathUtils.decimalToHex(buffer[15]);\r\n        }\r\n        catch (err) {\r\n            const guidHolder: string = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\";\r\n            const hex: string = \"0123456789abcdef\";\r\n            let r: number = 0;\r\n            let guidResponse: string = \"\";\r\n            for (let i: number = 0; i < 36; i++) {\r\n                if (guidHolder[i] !== \"-\" && guidHolder[i] !== \"4\") {\r\n                    // each x and y needs to be random\r\n                    r = Math.random() * 16 | 0;\r\n                }\r\n                if (guidHolder[i] === \"x\") {\r\n                    guidResponse += hex[r];\r\n                } else if (guidHolder[i] === \"y\") {\r\n                    // clock-seq-and-reserved first hex is filtered and remaining hex values are random\r\n                    r &= 0x3; // bit and with 0011 to set pos 2 to zero ?0??\r\n                    r |= 0x8; // set pos 3 to 1 as 1???\r\n                    guidResponse += hex[r];\r\n                } else {\r\n                    guidResponse += guidHolder[i];\r\n                }\r\n            }\r\n            return guidResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * verifies if a string is  GUID\r\n     * @param guid\r\n     */\r\n    static isGuid(guid: string): boolean {\r\n        const regexGuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\r\n        return regexGuid.test(guid);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n/**\r\n * Utility functions for strings in a browser. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class BrowserStringUtils {\r\n\r\n    /**\r\n     * Converts string to Uint8Array\r\n     * @param sDOMStr \r\n     */\r\n    static stringToUtf8Arr (sDOMStr: string): Uint8Array {\r\n        let nChr;\r\n        let nArrLen = 0;\r\n        const nStrLen = sDOMStr.length;\r\n        /* mapping... */\r\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nMapIdx);\r\n            nArrLen += nChr < 0x80 ? 1 : nChr < 0x800 ? 2 : nChr < 0x10000 ? 3 : nChr < 0x200000 ? 4 : nChr < 0x4000000 ? 5 : 6;\r\n        }\r\n\r\n        const aBytes = new Uint8Array(nArrLen);\r\n\r\n        /* transcription... */\r\n\r\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\r\n            nChr = sDOMStr.charCodeAt(nChrIdx);\r\n            if (nChr < 128) {\r\n                /* one byte */\r\n                aBytes[nIdx++] = nChr;\r\n            } else if (nChr < 0x800) {\r\n                /* two bytes */\r\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x10000) {\r\n                /* three bytes */\r\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x200000) {\r\n                /* four bytes */\r\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else if (nChr < 0x4000000) {\r\n                /* five bytes */\r\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            } else /* if (nChr <= 0x7fffffff) */ {\r\n                /* six bytes */\r\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 24 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 18 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 12 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr >>> 6 & 63);\r\n                aBytes[nIdx++] = 128 + (nChr & 63);\r\n            }\r\n        }\r\n\r\n        return aBytes;      \r\n    }\r\n\r\n    /**\r\n     * Converst string to ArrayBuffer\r\n     * @param dataString \r\n     */\r\n    static stringToArrayBuffer(dataString: string): ArrayBuffer {\r\n        const data = new ArrayBuffer(dataString.length);\r\n        const dataView = new Uint8Array(data);\r\n        for (let i: number = 0; i < dataString.length; i++) {\r\n            dataView[i] = dataString.charCodeAt(i);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Converts Uint8Array to a string\r\n     * @param aBytes \r\n     */\r\n    static utf8ArrToString (aBytes: Uint8Array): string {\r\n        let sView = \"\";\r\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nPart = aBytes[nIdx];\r\n            sView += String.fromCharCode(\r\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen ? /* six bytes */\r\n                    /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\r\n                    (nPart - 252) * 1073741824 + (aBytes[++nIdx] - 128 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                    : nPart > 247 && nPart < 252 && nIdx + 4 < nLen ? /* five bytes */\r\n                        (nPart - 248 << 24) + (aBytes[++nIdx] - 128 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                        : nPart > 239 && nPart < 248 && nIdx + 3 < nLen ? /* four bytes */\r\n                            (nPart - 240 << 18) + (aBytes[++nIdx] - 128 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                            : nPart > 223 && nPart < 240 && nIdx + 2 < nLen ? /* three bytes */\r\n                                (nPart - 224 << 12) + (aBytes[++nIdx] - 128 << 6) + aBytes[++nIdx] - 128\r\n                                : nPart > 191 && nPart < 224 && nIdx + 1 < nLen ? /* two bytes */\r\n                                    (nPart - 192 << 6) + aBytes[++nIdx] - 128\r\n                                    : /* nPart < 127 ? */ /* one byte */\r\n                                    nPart\r\n            );\r\n        }\r\n        return sView;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Encode {\r\n    \r\n    /**\r\n     * Returns URL Safe b64 encoded string from a plaintext string.\r\n     * @param input \r\n     */\r\n    urlEncode(input: string): string {\r\n        return encodeURIComponent(this.encode(input)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\"));\r\n    }\r\n\r\n    /**\r\n     * Returns URL Safe b64 encoded string from an int8Array.\r\n     * @param inputArr \r\n     */\r\n    urlEncodeArr(inputArr: Uint8Array): string {\r\n        return this.base64EncArr(inputArr)\r\n            .replace(/=/g, \"\")\r\n            .replace(/\\+/g, \"-\")\r\n            .replace(/\\//g, \"_\");\r\n    }\r\n\r\n    /**\r\n     * Returns b64 encoded string from plaintext string.\r\n     * @param input \r\n     */\r\n    encode(input: string): string {\r\n        const inputUtf8Arr = BrowserStringUtils.stringToUtf8Arr(input);\r\n        return this.base64EncArr(inputUtf8Arr);\r\n    }\r\n\r\n    /**\r\n     * Base64 encode byte array\r\n     * @param aBytes \r\n     */\r\n    private base64EncArr(aBytes: Uint8Array): string {  \r\n        const eqLen = (3 - (aBytes.length % 3)) % 3;\r\n        let sB64Enc = \"\";\r\n      \r\n        for (let nMod3, nLen = aBytes.length, nUint24 = 0, nIdx = 0; nIdx < nLen; nIdx++) {\r\n            nMod3 = nIdx % 3;\r\n            /* Uncomment the following line in order to split the output in lines 76-character long: */\r\n            /*\r\n             *if (nIdx > 0 && (nIdx * 4 / 3) % 76 === 0) { sB64Enc += \"\\r\\n\"; }\r\n             */\r\n            nUint24 |= aBytes[nIdx] << (16 >>> nMod3 & 24);\r\n            if (nMod3 === 2 || aBytes.length - nIdx === 1) {\r\n                sB64Enc += String.fromCharCode(\r\n                    this.uint6ToB64(nUint24 >>> 18 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 12 & 63), \r\n                    this.uint6ToB64(nUint24 >>> 6 & 63), \r\n                    this.uint6ToB64(nUint24 & 63)\r\n                );\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return  eqLen === 0 ? sB64Enc : sB64Enc.substring(0, sB64Enc.length - eqLen) + (eqLen === 1 ? \"=\" : \"==\");\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array encoding helper\r\n     * @param nUint6 \r\n     */\r\n    private uint6ToB64 (nUint6: number): number {\r\n        return nUint6 < 26 ?\r\n            nUint6 + 65\r\n            : nUint6 < 52 ?\r\n                nUint6 + 71\r\n                : nUint6 < 62 ?\r\n                    nUint6 - 4\r\n                    : nUint6 === 62 ?\r\n                        43\r\n                        : nUint6 === 63 ?\r\n                            47\r\n                            :\r\n                            65;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\n\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\nexport class Base64Decode {\r\n\r\n    /**\r\n     * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n     * @param input \r\n     */\r\n    decode(input: string): string {\r\n        let encodedString = input.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n        switch (encodedString.length % 4) {\r\n            case 0:\r\n                break;\r\n            case 2:\r\n                encodedString += \"==\";\r\n                break;\r\n            case 3:\r\n                encodedString += \"=\";\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid base64 string\");\r\n        }\r\n\r\n        const inputUtf8Arr = this.base64DecToArr(encodedString);\r\n        return BrowserStringUtils.utf8ArrToString(inputUtf8Arr);\r\n    }\r\n\r\n    /**\r\n     * Decodes base64 into Uint8Array\r\n     * @param base64String \r\n     * @param nBlockSize \r\n     */\r\n    private base64DecToArr(base64String: string, nBlockSize?: number): Uint8Array {\r\n        const sB64Enc = base64String.replace(/[^A-Za-z0-9\\+\\/]/g, \"\");\r\n        const nInLen = sB64Enc.length;\r\n        const nOutLen = nBlockSize ? Math.ceil((nInLen * 3 + 1 >>> 2) / nBlockSize) * nBlockSize : nInLen * 3 + 1 >>> 2;\r\n        const aBytes = new Uint8Array(nOutLen);\r\n\r\n        for (let nMod3, nMod4, nUint24 = 0, nOutIdx = 0, nInIdx = 0; nInIdx < nInLen; nInIdx++) {\r\n            nMod4 = nInIdx & 3;\r\n            nUint24 |= this.b64ToUint6(sB64Enc.charCodeAt(nInIdx)) << 18 - 6 * nMod4;\r\n            if (nMod4 === 3 || nInLen - nInIdx === 1) {\r\n                for (nMod3 = 0; nMod3 < 3 && nOutIdx < nOutLen; nMod3++, nOutIdx++) {\r\n                    aBytes[nOutIdx] = nUint24 >>> (16 >>> nMod3 & 24) & 255;\r\n                }\r\n                nUint24 = 0;\r\n            }\r\n        }\r\n\r\n        return aBytes;\r\n    }\r\n\r\n    /**\r\n     * Base64 string to array decoding helper\r\n     * @param charNum \r\n     */\r\n    private b64ToUint6(charNum: number): number {\r\n        return charNum > 64 && charNum < 91 ?\r\n            charNum - 65\r\n            : charNum > 96 && charNum < 123 ? \r\n                charNum - 71\r\n                : charNum > 47 && charNum < 58 ?\r\n                    charNum + 4\r\n                    : charNum === 43 ?\r\n                        62\r\n                        : charNum === 47 ?\r\n                            63\r\n                            :\r\n                            0;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError, StringUtils } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: \"pkce_not_created\",\r\n        desc: \"The PKCE code challenge and verifier could not be generated.\"\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: \"crypto_nonexistent\",\r\n        desc: \"The crypto object or function is not available.\"\r\n    },\r\n    httpMethodNotImplementedError: {\r\n        code: \"http_method_not_implemented\",\r\n        desc: \"The HTTP method given has not been implemented in this library.\"\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: \"empty_navigate_uri\",\r\n        desc: \"Navigation URI is empty. Please check stack trace for more info.\"\r\n    },\r\n    hashEmptyError: {\r\n        code: \"hash_empty_error\",\r\n        desc: \"Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash.\"\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: \"no_state_in_hash\",\r\n        desc: \"Hash does not contain state. Please verify that the request originated from msal.\"\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: \"hash_does_not_contain_known_properties\",\r\n        desc: \"Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.\"\r\n    },\r\n    unableToParseStateError: {\r\n        code: \"unable_to_parse_state\",\r\n        desc: \"Unable to parse state. Please verify that the request originated from msal.\"\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: \"state_interaction_type_mismatch\",\r\n        desc: \"Hash contains state but the interaction type does not match the caller.\"\r\n    },\r\n    interactionInProgress: {\r\n        code: \"interaction_in_progress\",\r\n        desc: \"Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.  For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    popupWindowError: {\r\n        code: \"popup_window_error\",\r\n        desc: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\"\r\n    },\r\n    emptyWindowError: {\r\n        code: \"empty_window_error\",\r\n        desc: \"window.open returned null or undefined window object.\"\r\n    },\r\n    userCancelledError: {\r\n        code: \"user_cancelled\",\r\n        desc: \"User cancelled the flow.\"\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in popup failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: \"monitor_window_timeout\",\r\n        desc: \"Token acquisition in iframe failed due to timeout. For more visit: aka.ms/msaljs/browser-errors.\"\r\n    },\r\n    redirectInIframeError: {\r\n        code: \"redirect_in_iframe\",\r\n        desc: \"Code flow is not supported inside an iframe. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\"\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: \"block_iframe_reload\",\r\n        desc: \"Request was blocked inside an iframe because MSAL detected an authentication response. For more visit: aka.ms/msaljs/browser-errors\"\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: \"block_nested_popups\",\r\n        desc: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\"\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: \"iframe_closed_prematurely\",\r\n        desc: \"The iframe being monitored was closed prematurely.\"\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: \"silent_logout_unsupported\",\r\n        desc: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\"\r\n    },\r\n    noAccountError: {\r\n        code: \"no_account_error\",\r\n        desc: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\"\r\n    },\r\n    silentPromptValueError: {\r\n        code: \"silent_prompt_value_error\",\r\n        desc: \"The value given for the prompt value is not valid for silent requests - must be set to 'none'.\"\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: \"no_token_request_cache_error\",\r\n        desc: \"No token request in found in cache.\"\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: \"unable_to_parse_token_request_cache_error\",\r\n        desc: \"The cached token request could not be parsed.\"\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: \"no_cached_authority_error\",\r\n        desc: \"No cached authority found.\"\r\n    },\r\n    authRequestNotSet: {\r\n        code: \"auth_request_not_set_error\",\r\n        desc: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\"\r\n    },\r\n    invalidCacheType: {\r\n        code: \"invalid_cache_type\",\r\n        desc: \"Invalid cache type\"\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: \"non_browser_environment\",\r\n        desc: \"Login and token requests are not supported in non-browser environments.\"\r\n    },\r\n    databaseNotOpen: {\r\n        code: \"database_not_open\",\r\n        desc: \"Database is not open!\"\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: \"no_network_connectivity\",\r\n        desc: \"No network connectivity. Check your internet connection.\"\r\n    },\r\n    postRequestFailed: {\r\n        code: \"post_request_failed\",\r\n        desc: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\"\r\n    },\r\n    getRequestFailed: {\r\n        code: \"get_request_failed\",\r\n        desc: \"Network request failed. Please check the network trace to determine root cause.\"\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: \"failed_to_parse_response\",\r\n        desc: \"Failed to parse network response. Check network trace.\"\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: \"unable_to_load_token\",\r\n        desc: \"Error loading token to cache.\"\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: \"crypto_key_not_found\",\r\n        desc: \"Cryptographic Key or Keypair not found in browser storage.\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when PKCE is not implemented.\r\n     * @param errDetail \r\n     */\r\n    static createPkceNotGeneratedError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.pkceNotGenerated.code,\r\n            `${BrowserAuthErrorMessage.pkceNotGenerated.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the crypto object is unavailable.\r\n     * @param errDetail \r\n     */\r\n    static createCryptoNotAvailableError(errDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.cryptoDoesNotExist.code,\r\n            `${BrowserAuthErrorMessage.cryptoDoesNotExist.desc} Detail:${errDetail}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an HTTP method hasn't been implemented by the browser class.\r\n     * @param method \r\n     */\r\n    static createHttpMethodNotImplementedError(method: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.httpMethodNotImplementedError.code,\r\n            `${BrowserAuthErrorMessage.httpMethodNotImplementedError.desc} Given Method: ${method}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the navigation URI is empty.\r\n     */\r\n    static createEmptyNavigationUriError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyNavigateUriError.code, BrowserAuthErrorMessage.emptyNavigateUriError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     * @param hashValue \r\n     */\r\n    static createEmptyHashError(hashValue: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashEmptyError.code, `${BrowserAuthErrorMessage.hashEmptyError.desc} Given Url: ${hashValue}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    static createHashDoesNotContainStateError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainStateError.code, BrowserAuthErrorMessage.hashDoesNotContainStateError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value does not contain known properties\r\n     */\r\n    static createHashDoesNotContainKnownPropertiesError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.code, BrowserAuthErrorMessage.hashDoesNotContainKnownPropertiesError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the hash string value is unexpectedly empty.\r\n     */\r\n    static createUnableToParseStateError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseStateError.code, BrowserAuthErrorMessage.unableToParseStateError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the state value in the hash does not match the interaction type of the API attempting to consume it.\r\n     */\r\n    static createStateInteractionTypeMismatchError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.stateInteractionTypeMismatchError.code, BrowserAuthErrorMessage.stateInteractionTypeMismatchError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a browser interaction (redirect or popup) is in progress.\r\n     */\r\n    static createInteractionInProgressError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.interactionInProgress.code, BrowserAuthErrorMessage.interactionInProgress.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the popup window could not be opened.\r\n     * @param errDetail \r\n     */\r\n    static createPopupWindowError(errDetail?: string): BrowserAuthError {\r\n        let errorMessage = BrowserAuthErrorMessage.popupWindowError.desc;\r\n        errorMessage = !StringUtils.isEmpty(errDetail) ? `${errorMessage} Details: ${errDetail}` : errorMessage;\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.popupWindowError.code, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when window.open returns an empty window object.\r\n     * @param errDetail \r\n     */\r\n    static createEmptyWindowCreatedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.emptyWindowError.code, BrowserAuthErrorMessage.emptyWindowError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the user closes a popup.\r\n     */\r\n    static createUserCancelledError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.userCancelledError.code,\r\n            BrowserAuthErrorMessage.userCancelledError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorPopupFromHash times out for a given popup.\r\n     */\r\n    static createMonitorPopupTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorPopupTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorPopupTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when monitorIframeFromHash times out for a given iframe.\r\n     */\r\n    static createMonitorIframeTimeoutError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.monitorIframeTimeoutError.code,\r\n            BrowserAuthErrorMessage.monitorIframeTimeoutError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when navigateWindow is called inside an iframe.\r\n     * @param windowParentCheck \r\n     */\r\n    static createRedirectInIframeError(windowParentCheck: boolean): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.redirectInIframeError.code, \r\n            `${BrowserAuthErrorMessage.redirectInIframeError.desc} (window.parent !== window) => ${windowParentCheck}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an auth reload is done inside an iframe.\r\n     */\r\n    static createBlockReloadInHiddenIframeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.code,\r\n            BrowserAuthErrorMessage.blockTokenRequestsInHiddenIframeError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a popup attempts to call an acquireToken API\r\n     * @returns \r\n     */\r\n    static createBlockAcquireTokenInPopupsError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.code, \r\n            BrowserAuthErrorMessage.blockAcquireTokenInPopupsError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when an iframe is found to be closed before the timeout is reached.\r\n     */\r\n    static createIframeClosedPrematurelyError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.iframeClosedPrematurelyError.code, BrowserAuthErrorMessage.iframeClosedPrematurelyError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the logout API is called on any of the silent interaction clients\r\n     */\r\n    static createSilentLogoutUnsupportedError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentLogoutUnsupportedError.code, BrowserAuthErrorMessage.silentLogoutUnsupportedError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the account object is not provided in the acquireTokenSilent API.\r\n     */\r\n    static createNoAccountError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noAccountError.code, BrowserAuthErrorMessage.noAccountError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when a given prompt value is invalid for silent requests.\r\n     */\r\n    static createSilentPromptValueError(givenPrompt: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.silentPromptValueError.code, `${BrowserAuthErrorMessage.silentPromptValueError.desc} Given value: ${givenPrompt}`);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the cached token request could not be retrieved from the cache\r\n     */\r\n    static createUnableToParseTokenRequestCacheError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.code,\r\n            BrowserAuthErrorMessage.unableToParseTokenRequestCacheError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the token request could not be retrieved from the cache\r\n     */\r\n    static createNoTokenRequestCacheError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noTokenRequestCacheError.code,\r\n            BrowserAuthErrorMessage.noTokenRequestCacheError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when handleCodeResponse is called before initiateAuthRequest (InteractionHandler)\r\n     */\r\n    static createAuthRequestNotSetError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.authRequestNotSet.code,\r\n            BrowserAuthErrorMessage.authRequestNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the authority could not be retrieved from the cache\r\n     */\r\n    static createNoCachedAuthorityError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noCachedAuthorityError.code,\r\n            BrowserAuthErrorMessage.noCachedAuthorityError.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown if cache type is invalid.\r\n     */\r\n    static createInvalidCacheTypeError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.invalidCacheType.code, `${BrowserAuthErrorMessage.invalidCacheType.desc}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when login and token requests are made from a non-browser environment\r\n     */\r\n    static createNonBrowserEnvironmentError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.notInBrowserEnvironment.code, BrowserAuthErrorMessage.notInBrowserEnvironment.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when indexDB database is not open\r\n     */\r\n    static createDatabaseNotOpenError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.databaseNotOpen.code, BrowserAuthErrorMessage.databaseNotOpen.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when token fetch fails due to no internet\r\n     */\r\n    static createNoNetworkConnectivityError(): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.noNetworkConnectivity.code, BrowserAuthErrorMessage.noNetworkConnectivity.desc);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when token fetch fails due to reasons other than internet connectivity\r\n     */\r\n    static createPostRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.postRequestFailed.code, `${BrowserAuthErrorMessage.postRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when get request fails due to reasons other than internet connectivity\r\n     */\r\n    static createGetRequestFailedError(errorDesc: string, endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.getRequestFailed.code, `${BrowserAuthErrorMessage.getRequestFailed.desc} | Network client threw: ${errorDesc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when network client fails to parse network response\r\n     */\r\n    static createFailedToParseNetworkResponseError(endpoint: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.failedToParseNetworkResponse.code, `${BrowserAuthErrorMessage.failedToParseNetworkResponse.desc} | Attempted to reach: ${endpoint.split(\"?\")[0]}`);\r\n    }\r\n\r\n    /**\r\n     * Create an error thrown when the necessary information is not available to sideload tokens \r\n     */\r\n    static createUnableToLoadTokenError(errorDetail: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.unableToLoadTokenError.code, `${BrowserAuthErrorMessage.unableToLoadTokenError.desc} | ${errorDetail}`);\r\n    }\r\n  \r\n    /**\r\n     * Create an error thrown when the queried cryptographic key is not found in IndexedDB\r\n     */\r\n    static createSigningKeyNotFoundInStorageError(keyId: string): BrowserAuthError {\r\n        return new BrowserAuthError(BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code, `${BrowserAuthErrorMessage.signingKeyNotFoundInStorage.desc} | No match found for KeyId: ${keyId}`);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { PkceCodes } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\n\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n\r\n/**\r\n * Class which exposes APIs to generate PKCE codes and code verifiers.\r\n */\r\nexport class PkceGenerator {\r\n\r\n    private base64Encode: Base64Encode;\r\n    private cryptoObj: BrowserCrypto;\r\n\r\n    constructor(cryptoObj: BrowserCrypto) {\r\n        this.base64Encode = new Base64Encode();\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n     */\r\n    async generateCodes(): Promise<PkceCodes> {\r\n        const codeVerifier = this.generateCodeVerifier();\r\n        const codeChallenge = await this.generateCodeChallengeFromVerifier(codeVerifier);\r\n        return {\r\n            verifier: codeVerifier,\r\n            challenge: codeChallenge\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generates a random 32 byte buffer and returns the base64\r\n     * encoded string to be used as a PKCE Code Verifier\r\n     */\r\n    private generateCodeVerifier(): string {\r\n        try {\r\n            // Generate random values as utf-8\r\n            const buffer: Uint8Array = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n            this.cryptoObj.getRandomValues(buffer);\r\n            // encode verifier as base64\r\n            const pkceCodeVerifierB64: string = this.base64Encode.urlEncodeArr(buffer);\r\n            return pkceCodeVerifierB64;\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Creates a base64 encoded PKCE Code Challenge string from the\r\n     * hash created from the PKCE Code Verifier supplied\r\n     */\r\n    private async generateCodeChallengeFromVerifier(pkceCodeVerifier: string): Promise<string> {\r\n        try {\r\n            // hashed verifier\r\n            const pkceHashedCodeVerifier = await this.cryptoObj.sha256Digest(pkceCodeVerifier);\r\n            // encode hash as base64\r\n            return this.base64Encode.urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\r\n        } catch (e) {\r\n            throw BrowserAuthError.createPkceNotGeneratedError(e);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\r\n/**\r\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\r\n */\r\n// RSA KeyGen Algorithm\r\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\r\n// SHA-256 hashing algorithm\r\nconst S256_HASH_ALG = \"SHA-256\";\r\n// MOD length for PoP tokens\r\nconst MODULUS_LENGTH = 2048;\r\n// Public Exponent\r\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\r\n\r\n/**\r\n * This class implements functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\nexport class BrowserCrypto {\r\n\r\n    private _keygenAlgorithmOptions: RsaHashedKeyGenParams;\r\n\r\n    constructor() {\r\n        if (!(this.hasCryptoAPI())) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"Browser crypto or msCrypto object not available.\");\r\n        }\r\n\r\n        this._keygenAlgorithmOptions = {\r\n            name: PKCS1_V15_KEYGEN_ALG,\r\n            hash: S256_HASH_ALG,\r\n            modulusLength: MODULUS_LENGTH,\r\n            publicExponent: PUBLIC_EXPONENT\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n     * @param dataString \r\n     */\r\n    async sha256Digest(dataString: string): Promise<ArrayBuffer> {\r\n        const data = BrowserStringUtils.stringToUtf8Arr(dataString);\r\n\r\n        return this.hasIECrypto() ? this.getMSCryptoDigest(S256_HASH_ALG, data) : this.getSubtleCryptoDigest(S256_HASH_ALG, data);\r\n    }\r\n\r\n    /**\r\n     * Populates buffer with cryptographically random values.\r\n     * @param dataBuffer \r\n     */\r\n    getRandomValues(dataBuffer: Uint8Array): void {\r\n        const cryptoObj = window[\"msCrypto\"] || window.crypto;\r\n        if (!cryptoObj.getRandomValues) {\r\n            throw BrowserAuthError.createCryptoNotAvailableError(\"getRandomValues does not exist.\");\r\n        }\r\n        cryptoObj.getRandomValues(dataBuffer);\r\n    }\r\n\r\n    /**\r\n     * Generates a keypair based on current keygen algorithm config.\r\n     * @param extractable \r\n     * @param usages \r\n     */\r\n    async generateKeyPair(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\r\n        return (\r\n            this.hasIECrypto() ? \r\n                this.msCryptoGenerateKey(extractable, usages) \r\n                : window.crypto.subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages)\r\n        ) as Promise<CryptoKeyPair>;\r\n    }\r\n\r\n    /**\r\n     * Export key as Json Web Key (JWK)\r\n     * @param key \r\n     * @param format \r\n     */\r\n    async exportJwk(key: CryptoKey): Promise<JsonWebKey> {\r\n        return this.hasIECrypto() ? this.msCryptoExportJwk(key) : window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\r\n    }\r\n\r\n    /**\r\n     * Imports key as Json Web Key (JWK), can set extractable and usages.\r\n     * @param key \r\n     * @param format \r\n     * @param extractable \r\n     * @param usages \r\n     */\r\n    async importJwk(key: JsonWebKey, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\r\n        const keyString = BrowserCrypto.getJwkString(key);\r\n        const keyBuffer = BrowserStringUtils.stringToArrayBuffer(keyString);\r\n\r\n        return this.hasIECrypto() ? \r\n            this.msCryptoImportKey(keyBuffer, extractable, usages) \r\n            : window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, this._keygenAlgorithmOptions, extractable, usages);\r\n    }\r\n\r\n    /**\r\n     * Signs given data with given key\r\n     * @param key \r\n     * @param data \r\n     */\r\n    async sign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\r\n        return this.hasIECrypto() ?\r\n            this.msCryptoSign(key, data)\r\n            : window.crypto.subtle.sign(this._keygenAlgorithmOptions, key, data);\r\n    }\r\n\r\n    /**\r\n     * Check whether IE crypto or other browser cryptography is available.\r\n     */\r\n    private hasCryptoAPI(): boolean {\r\n        return this.hasIECrypto() || this.hasBrowserCrypto();\r\n    }\r\n\r\n    /**\r\n     * Checks whether IE crypto (AKA msCrypto) is available.\r\n     */\r\n    private hasIECrypto(): boolean {\r\n        return \"msCrypto\" in window;\r\n    }\r\n\r\n    /**\r\n     * Check whether browser crypto is available.\r\n     */\r\n    private hasBrowserCrypto(): boolean {\r\n        return \"crypto\" in window;\r\n    }\r\n\r\n    /**\r\n     * Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getSubtleCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return window.crypto.subtle.digest(algorithm, data);\r\n    }\r\n\r\n    /**\r\n     * IE Helper function for SHA digest.\r\n     * @param algorithm \r\n     * @param data \r\n     */\r\n    private async getMSCryptoDigest(algorithm: string, data: Uint8Array): Promise<ArrayBuffer> {\r\n        return new Promise((resolve, reject) => {\r\n            const digestOperation = window[\"msCrypto\"].subtle.digest(algorithm, data.buffer);\r\n            digestOperation.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n            digestOperation.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * IE Helper function for generating a keypair\r\n     * @param extractable \r\n     * @param usages \r\n     */\r\n    private async msCryptoGenerateKey(extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKeyPair> {\r\n        return new Promise((resolve: Function, reject: Function) => {\r\n            const msGenerateKey = window[\"msCrypto\"].subtle.generateKey(this._keygenAlgorithmOptions, extractable, usages);\r\n            msGenerateKey.addEventListener(\"complete\", (e: { target: { result: CryptoKeyPair | PromiseLike<CryptoKeyPair>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n\r\n            msGenerateKey.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * IE Helper function for exportKey\r\n     * @param key \r\n     * @param format \r\n     */\r\n    private async msCryptoExportJwk(key: CryptoKey): Promise<JsonWebKey> {\r\n        return new Promise((resolve: Function, reject: Function) => {\r\n            const msExportKey = window[\"msCrypto\"].subtle.exportKey(KEY_FORMAT_JWK, key);\r\n            msExportKey.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer; }; }) => {\r\n                const resultBuffer: ArrayBuffer = e.target.result;\r\n\r\n                const resultString = BrowserStringUtils.utf8ArrToString(new Uint8Array(resultBuffer))\r\n                    .replace(/\\r/g, \"\")\r\n                    .replace(/\\n/g, \"\")\r\n                    .replace(/\\t/g, \"\")\r\n                    .split(\" \").join(\"\")\r\n                    .replace(\"\\u0000\", \"\");\r\n\r\n                try {\r\n                    resolve(JSON.parse(resultString));\r\n                } catch (e) {\r\n                    reject(e);\r\n                }\r\n            });\r\n\r\n            msExportKey.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * IE Helper function for importKey\r\n     * @param key \r\n     * @param format \r\n     * @param extractable \r\n     * @param usages \r\n     */\r\n    private async msCryptoImportKey(keyBuffer: ArrayBuffer, extractable: boolean, usages: Array<KeyUsage>): Promise<CryptoKey> {\r\n        return new Promise((resolve: Function, reject: Function) => {\r\n            const msImportKey = window[\"msCrypto\"].subtle.importKey(KEY_FORMAT_JWK, keyBuffer, this._keygenAlgorithmOptions, extractable, usages);\r\n            msImportKey.addEventListener(\"complete\", (e: { target: { result: CryptoKey | PromiseLike<CryptoKey>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n\r\n            msImportKey.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * IE Helper function for sign JWT\r\n     * @param key \r\n     * @param data \r\n     */\r\n    private async msCryptoSign(key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer> {\r\n        return new Promise((resolve: Function, reject: Function) => {\r\n            const msSign = window[\"msCrypto\"].subtle.sign(this._keygenAlgorithmOptions, key, data);\r\n            msSign.addEventListener(\"complete\", (e: { target: { result: ArrayBuffer | PromiseLike<ArrayBuffer>; }; }) => {\r\n                resolve(e.target.result);\r\n            });\r\n\r\n            msSign.addEventListener(\"error\", (error: string) => {\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Returns stringified jwk.\r\n     * @param jwk \r\n     */\r\n    static getJwkString(jwk: JsonWebKey): string {\r\n        return JSON.stringify(jwk, Object.keys(jwk).sort());\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\ninterface IDBOpenDBRequestEvent extends Event {\r\n    target: IDBOpenDBRequest & EventTarget;\r\n}\r\n\r\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\r\n    target: IDBOpenDBRequest & EventTarget;\r\n}\r\n\r\ninterface IDBRequestEvent extends Event {\r\n    target: IDBRequest & EventTarget;\r\n}\r\n\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nexport class DatabaseStorage<T>{\r\n    private db: IDBDatabase|undefined;\r\n    private dbName: string;\r\n    private tableName: string;\r\n    private version: number;\r\n    private dbOpen: boolean;\r\n\r\n    constructor(dbName: string, tableName: string, version: number) {\r\n        this.dbName = dbName;\r\n        this.tableName = tableName;\r\n        this.version = version;\r\n        this.dbOpen = false;\r\n    }\r\n\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    async open(): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            const openDB = window.indexedDB.open(this.dbName, this.version);\r\n            openDB.addEventListener(\"upgradeneeded\", (e: IDBVersionChangeEvent) => {\r\n                const event = e as IDBOpenOnUpgradeNeededEvent;\r\n                event.target.result.createObjectStore(this.tableName);\r\n            });\r\n            openDB.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBOpenDBRequestEvent;\r\n                this.db = event.target.result;\r\n                this.dbOpen = true;\r\n                resolve();\r\n            });\r\n\r\n            openDB.addEventListener(\"error\", error => reject(error));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key \r\n     */\r\n    async get(key: string): Promise<T> {\r\n        if (!this.dbOpen) {\r\n            await this.open();\r\n        }\r\n\r\n        return new Promise<T>((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n            }\r\n\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGet = objectStore.get(key);\r\n            dbGet.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                resolve(event.target.result);\r\n            });\r\n            dbGet.addEventListener(\"error\", e => reject(e));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key \r\n     * @param payload \r\n     */\r\n    async put(key: string, payload: T): Promise<T> {\r\n        if (!this.dbOpen) {\r\n            await this.open();\r\n        }\r\n\r\n        return new Promise<T>((resolve: Function, reject: Function) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n            }\r\n\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n\r\n            const dbPut = objectStore.put(payload, key);\r\n            dbPut.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                resolve(event.target.result);\r\n            });\r\n            dbPut.addEventListener(\"error\", e => reject(e));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Removes item from IndexedDB under given key\r\n     * @param key\r\n     */\r\n    async delete(key: string): Promise<boolean> {\r\n        if (!this.dbOpen) {\r\n            await this.open();\r\n        }\r\n\r\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\r\n            if (!this.db) {\r\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n            }\r\n\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n\r\n            const dbDelete = objectStore.delete(key);\r\n\r\n            dbDelete.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                resolve(event.target.result === undefined);\r\n            });\r\n            dbDelete.addEventListener(\"error\", e => reject(e));\r\n        });\r\n    }\r\n\r\n    async clear(): Promise<boolean> {\r\n        if (!this.dbOpen) {\r\n            await this.open();\r\n        }\r\n\r\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\r\n            if (!this.db) {\r\n                return reject(BrowserAuthError.createDatabaseNotOpenError());\r\n            }\r\n\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n\r\n            const dbDelete = objectStore.clear();\r\n\r\n            dbDelete.addEventListener(\"success\", (e: Event) => {\r\n                const event = e as IDBRequestEvent;\r\n                resolve(event.target.result === undefined);\r\n            });\r\n            dbDelete.addEventListener(\"error\", e => reject(e));\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICrypto, PkceCodes, SignedHttpRequest, SignedHttpRequestParameters } from \"@azure/msal-common\";\r\nimport { GuidGenerator } from \"./GuidGenerator\";\r\nimport { Base64Encode } from \"../encode/Base64Encode\";\r\nimport { Base64Decode } from \"../encode/Base64Decode\";\r\nimport { PkceGenerator } from \"./PkceGenerator\";\r\nimport { BrowserCrypto } from \"./BrowserCrypto\";\r\nimport { DatabaseStorage } from \"../cache/DatabaseStorage\";\r\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\r\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\nexport type CachedKeyPair = {\r\n    publicKey: CryptoKey,\r\n    privateKey: CryptoKey,\r\n    requestMethod?: string,\r\n    requestUri?: string\r\n};\r\n\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and \r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nexport class CryptoOps implements ICrypto {\r\n\r\n    private browserCrypto: BrowserCrypto;\r\n    private guidGenerator: GuidGenerator;\r\n    private b64Encode: Base64Encode;\r\n    private b64Decode: Base64Decode;\r\n    private pkceGenerator: PkceGenerator;\r\n\r\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\r\n    private static EXTRACTABLE: boolean = true;\r\n\r\n    private static DB_VERSION = 1;\r\n    private static DB_NAME = \"msal.db\";\r\n    private static TABLE_NAME =`${CryptoOps.DB_NAME}.keys`;\r\n    private cache: DatabaseStorage<CachedKeyPair>;\r\n\r\n    constructor() {\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        this.browserCrypto = new BrowserCrypto();\r\n        this.b64Encode = new Base64Encode();\r\n        this.b64Decode = new Base64Decode();\r\n        this.guidGenerator = new GuidGenerator(this.browserCrypto);\r\n        this.pkceGenerator = new PkceGenerator(this.browserCrypto);\r\n        this.cache = new DatabaseStorage(CryptoOps.DB_NAME, CryptoOps.TABLE_NAME, CryptoOps.DB_VERSION);\r\n    }\r\n\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid(): string {\r\n        return this.guidGenerator.generateGuid();\r\n    }\r\n\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input \r\n     */\r\n    base64Encode(input: string): string {\r\n        return this.b64Encode.encode(input);\r\n    }    \r\n    \r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input \r\n     */\r\n    base64Decode(input: string): string {\r\n        return this.b64Decode.decode(input);\r\n    }\r\n\r\n    /**\r\n     * Generates PKCE codes used in Authorization Code Flow.\r\n     */\r\n    async generatePkceCodes(): Promise<PkceCodes> {\r\n        return this.pkceGenerator.generateCodes();\r\n    }\r\n\r\n    /**\r\n     * Generates a keypair, stores it and returns a thumbprint\r\n     * @param request\r\n     */\r\n    async getPublicKeyThumbprint(request: SignedHttpRequestParameters): Promise<string> {\r\n        // Generate Keypair\r\n        const keyPair = await this.browserCrypto.generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\r\n\r\n        // Generate Thumbprint for Public Key\r\n        const publicKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.publicKey);\r\n        const pubKeyThumprintObj: JsonWebKey = {\r\n            e: publicKeyJwk.e,\r\n            kty: publicKeyJwk.kty,\r\n            n: publicKeyJwk.n\r\n        };\r\n        const publicJwkString: string = BrowserCrypto.getJwkString(pubKeyThumprintObj);\r\n        const publicJwkBuffer: ArrayBuffer = await this.browserCrypto.sha256Digest(publicJwkString);\r\n        const publicJwkHash: string = this.b64Encode.urlEncodeArr(new Uint8Array(publicJwkBuffer));\r\n\r\n        // Generate Thumbprint for Private Key\r\n        const privateKeyJwk: JsonWebKey = await this.browserCrypto.exportJwk(keyPair.privateKey);\r\n        // Re-import private key to make it unextractable\r\n        const unextractablePrivateKey: CryptoKey = await this.browserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\r\n\r\n        // Store Keypair data in keystore\r\n        await this.cache.put(publicJwkHash, {\r\n            privateKey: unextractablePrivateKey,\r\n            publicKey: keyPair.publicKey,\r\n            requestMethod: request.resourceRequestMethod,\r\n            requestUri: request.resourceRequestUri\r\n        });\r\n\r\n        return publicJwkHash;\r\n    }\r\n\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid \r\n     */\r\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\r\n        return this.cache.delete(kid);\r\n    }\r\n\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    async clearKeystore(): Promise<boolean> {\r\n        return this.cache.clear();\r\n    }\r\n\r\n    /**\r\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\r\n     * @param payload \r\n     * @param kid \r\n     */\r\n    async signJwt(payload: SignedHttpRequest, kid: string): Promise<string> {\r\n        const cachedKeyPair = await this.cache.get(kid);\r\n            \r\n        if (!cachedKeyPair) {\r\n            throw BrowserAuthError.createSigningKeyNotFoundInStorageError(kid);\r\n        }\r\n\r\n        // Get public key as JWK\r\n        const publicKeyJwk = await this.browserCrypto.exportJwk(cachedKeyPair.publicKey);\r\n        const publicKeyJwkString = BrowserCrypto.getJwkString(publicKeyJwk);\r\n\r\n        // Generate header\r\n        const header = {\r\n            alg: publicKeyJwk.alg,\r\n            type: KEY_FORMAT_JWK\r\n        };\r\n        const encodedHeader = this.b64Encode.urlEncode(JSON.stringify(header));\r\n\r\n        // Generate payload\r\n        payload.cnf = {\r\n            jwk: JSON.parse(publicKeyJwkString)\r\n        };\r\n        const encodedPayload = this.b64Encode.urlEncode(JSON.stringify(payload));\r\n\r\n        // Form token string\r\n        const tokenString = `${encodedHeader}.${encodedPayload}`;\r\n\r\n        // Sign token\r\n        const tokenBuffer = BrowserStringUtils.stringToArrayBuffer(tokenString);\r\n        const signatureBuffer = await this.browserCrypto.sign(cachedKeyPair.privateKey, tokenBuffer);\r\n        const encodedSignature = this.b64Encode.urlEncodeArr(new Uint8Array(signatureBuffer));\r\n\r\n        return `${tokenString}.${encodedSignature}`;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthError } from \"@azure/msal-common\";\r\n\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nexport const BrowserConfigurationAuthErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: \"redirect_uri_empty\",\r\n        desc: \"A redirect URI is required for all calls, and none has been set.\"\r\n    },\r\n    postLogoutUriNotSet: {\r\n        code: \"post_logout_uri_empty\",\r\n        desc: \"A post logout redirect has not been set.\"\r\n    },\r\n    storageNotSupportedError: {\r\n        code: \"storage_not_supported\",\r\n        desc: \"Given storage configuration option was not supported.\"\r\n    },\r\n    noRedirectCallbacksSet: {\r\n        code: \"no_redirect_callbacks\",\r\n        desc: \"No redirect callbacks have been set. Please call setRedirectCallbacks() with the appropriate function arguments before continuing. \" +\r\n            \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    invalidCallbackObject: {\r\n        code: \"invalid_callback_object\",\r\n        desc: \"The object passed for the callback was invalid. \" +\r\n          \"More information is available here: https://github.com/AzureAD/microsoft-authentication-library-for-js/wiki/MSAL-basics.\"\r\n    },\r\n    stubPcaInstanceCalled: {\r\n        code: \"stubbed_public_client_application_called\",\r\n        desc: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\"\r\n    },\r\n    inMemRedirectUnavailable: {\r\n        code: \"in_mem_redirect_unavailable\",\r\n        desc: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\"\r\n    }\r\n};\r\n\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nexport class BrowserConfigurationAuthError extends AuthError {\r\n\r\n    constructor(errorCode: string, errorMessage?: string) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the redirect uri is empty (not set by caller)\r\n     */\r\n    static createRedirectUriEmptyError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.redirectUriNotSet.code,\r\n            BrowserConfigurationAuthErrorMessage.redirectUriNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates an error thrown when the post-logout redirect uri is empty (not set by caller)\r\n     */\r\n    static createPostLogoutRedirectUriEmptyError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.code,\r\n            BrowserConfigurationAuthErrorMessage.postLogoutUriNotSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when given storage location is not supported.\r\n     * @param givenStorageLocation \r\n     */\r\n    static createStorageNotSupportedError(givenStorageLocation: string): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.storageNotSupportedError.code, `${BrowserConfigurationAuthErrorMessage.storageNotSupportedError.desc} Given Location: ${givenStorageLocation}`);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when redirect callbacks are not set before calling loginRedirect() or acquireTokenRedirect().\r\n     */\r\n    static createRedirectCallbacksNotSetError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.code, \r\n            BrowserConfigurationAuthErrorMessage.noRedirectCallbacksSet.desc);\r\n    }\r\n\r\n    /**\r\n     * Creates error thrown when the stub instance of PublicClientApplication is called.\r\n     */\r\n    static createStubPcaInstanceCalledError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.code,\r\n            BrowserConfigurationAuthErrorMessage.stubPcaInstanceCalled.desc);\r\n    }\r\n\r\n    /*\r\n     * Create an error thrown when in-memory storage is used and storeAuthStateInCookie=false.\r\n     */\r\n    static createInMemoryRedirectUnavailableError(): BrowserConfigurationAuthError {\r\n        return new BrowserConfigurationAuthError(BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.code, BrowserConfigurationAuthErrorMessage.inMemRedirectUnavailable.desc);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class BrowserStorage implements IWindowStorage {\r\n\r\n    private windowStorage: Storage;\r\n\r\n    constructor(cacheLocation: string) {\r\n        this.validateWindowStorage(cacheLocation);\r\n        this.windowStorage = window[cacheLocation];\r\n    }\r\n\r\n    private validateWindowStorage(cacheLocation: string): void {\r\n        if (cacheLocation !== BrowserCacheLocation.LocalStorage && cacheLocation !== BrowserCacheLocation.SessionStorage) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n        const storageSupported = !!window[cacheLocation];\r\n        if (!storageSupported) {\r\n            throw BrowserConfigurationAuthError.createStorageNotSupportedError(cacheLocation);\r\n        }\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return this.windowStorage.getItem(key);\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        this.windowStorage.setItem(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.windowStorage.removeItem(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        return Object.keys(this.windowStorage);\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.windowStorage.hasOwnProperty(key);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\n\r\nexport class MemoryStorage implements IWindowStorage {\r\n\r\n    private cache: Map<string, string>;\r\n\r\n    constructor() {\r\n        this.cache = new Map<string, string>();\r\n    }\r\n\r\n    getItem(key: string): string | null {\r\n        return this.cache.get(key) || null;\r\n    }\r\n\r\n    setItem(key: string, value: string): void {\r\n        this.cache.set(key, value);\r\n    }\r\n\r\n    removeItem(key: string): void {\r\n        this.cache.delete(key);\r\n    }\r\n\r\n    getKeys(): string[] {\r\n        const cacheKeys: string[] = [];\r\n        this.cache.forEach((value: string, key: string) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n\r\n    containsKey(key: string): boolean {\r\n        return this.cache.has(key);\r\n    }\r\n\r\n    clear() :void {\r\n        this.cache.clear();\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { InteractionType } from \"./BrowserConstants\";\r\nimport { StringUtils, ClientAuthError, ICrypto, RequestStateObject, ProtocolUtils, ServerAuthorizationCodeResponse, UrlString } from \"@azure/msal-common\";\r\n\r\nexport type BrowserStateObject = {\r\n    interactionType: InteractionType\r\n};\r\n\r\nexport class BrowserProtocolUtils {\r\n\r\n    /**\r\n     * Extracts the BrowserStateObject from the state string.\r\n     * @param browserCrypto \r\n     * @param state \r\n     */\r\n    static extractBrowserRequestState(browserCrypto: ICrypto, state: string): BrowserStateObject | null {\r\n        if (StringUtils.isEmpty(state)) {\r\n            return null;\r\n        }\r\n\r\n        try {\r\n            const requestStateObj: RequestStateObject = ProtocolUtils.parseRequestState(browserCrypto, state);\r\n            return requestStateObj.libraryState.meta as BrowserStateObject;\r\n        } catch (e) {\r\n            throw ClientAuthError.createInvalidStateError(state, e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses properties of server response from url hash\r\n     * @param locationHash Hash from url\r\n     */\r\n    static parseServerResponseFromHash(locationHash: string): ServerAuthorizationCodeResponse {\r\n        if (!locationHash) {\r\n            return {};\r\n        }\r\n        \r\n        const hashUrlString = new UrlString(locationHash);\r\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants, PersistentCacheKeys, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AccountEntity, IdTokenEntity, AccessTokenEntity, RefreshTokenEntity, AppMetadataEntity, CacheManager, ServerTelemetryEntity, ThrottlingEntity, ProtocolUtils, Logger, AuthorityMetadataEntity, DEFAULT_CRYPTO_IMPLEMENTATION, AccountInfo, CcsCredential, CcsCredentialType, IdToken } from \"@azure/msal-common\";\r\nimport { CacheOptions } from \"../config/Configuration\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserCacheLocation, InteractionType, TemporaryCacheKeys, InMemoryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserStorage } from \"./BrowserStorage\";\r\nimport { MemoryStorage } from \"./MemoryStorage\";\r\nimport { IWindowStorage } from \"./IWindowStorage\";\r\nimport { BrowserProtocolUtils } from \"../utils/BrowserProtocolUtils\";\r\n\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nexport class BrowserCacheManager extends CacheManager {\r\n\r\n    // Cache configuration, either set by user or default values.\r\n    private cacheConfig: Required<CacheOptions>;\r\n    // Window storage object (either local or sessionStorage)\r\n    private browserStorage: IWindowStorage;\r\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\r\n    private internalStorage: MemoryStorage;\r\n    // Temporary cache\r\n    private temporaryCacheStorage: IWindowStorage;\r\n    // Client id of application. Used in cache keys to partition cache correctly in the case of multiple instances of MSAL.\r\n    private logger: Logger;\r\n\r\n    // Cookie life calculation (hours * minutes * seconds * ms)\r\n    private readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\n\r\n    constructor(clientId: string, cacheConfig: Required<CacheOptions>, cryptoImpl: ICrypto, logger: Logger) {\r\n        super(clientId, cryptoImpl);\r\n\r\n        this.cacheConfig = cacheConfig;\r\n        this.logger = logger;\r\n        this.internalStorage = new MemoryStorage();\r\n        this.browserStorage = this.setupBrowserStorage(this.cacheConfig.cacheLocation);\r\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(this.cacheConfig.cacheLocation);\r\n\r\n        // Migrate any cache entries from older versions of MSAL.\r\n        this.migrateCacheEntries();\r\n    }\r\n\r\n    /**\r\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\r\n     * @param cacheLocation\r\n     */\r\n    private setupBrowserStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage {\r\n        switch (cacheLocation) {\r\n            case BrowserCacheLocation.LocalStorage:\r\n            case BrowserCacheLocation.SessionStorage:\r\n                try {\r\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\r\n                    return new BrowserStorage(cacheLocation);\r\n                } catch (e) {\r\n                    this.logger.verbose(e);\r\n                    break;\r\n                }\r\n            case BrowserCacheLocation.MemoryStorage:\r\n            default:\r\n                break;\r\n        }\r\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\r\n        return new MemoryStorage();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param cacheLocation\r\n     */\r\n    private setupTemporaryCacheStorage(cacheLocation: BrowserCacheLocation | string): IWindowStorage {\r\n        switch (cacheLocation) {\r\n            case BrowserCacheLocation.LocalStorage:\r\n            case BrowserCacheLocation.SessionStorage:\r\n                try {\r\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\r\n                    return new BrowserStorage(BrowserCacheLocation.SessionStorage);\r\n                } catch (e) {\r\n                    this.logger.verbose(e);\r\n                    return this.internalStorage;\r\n                }\r\n            case BrowserCacheLocation.MemoryStorage:\r\n            default:\r\n                return this.internalStorage;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Migrate all old cache entries to new schema. No rollback supported.\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntries(): void {\r\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\r\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\r\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\r\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\r\n\r\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\r\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\r\n        const errorValue = this.browserStorage.getItem(errorKey);\r\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\r\n\r\n        const values = [idTokenValue, clientInfoValue, errorValue, errorDescValue];\r\n        const keysToMigrate = [PersistentCacheKeys.ID_TOKEN, PersistentCacheKeys.CLIENT_INFO, PersistentCacheKeys.ERROR, PersistentCacheKeys.ERROR_DESC];\r\n\r\n        keysToMigrate.forEach((cacheKey:string, index: number) => this.migrateCacheEntry(cacheKey, values[index]));\r\n    }\r\n\r\n    /**\r\n     * Utility function to help with migration.\r\n     * @param newKey\r\n     * @param value\r\n     * @param storeAuthStateInCookie\r\n     */\r\n    private migrateCacheEntry(newKey: string, value: string|null): void {\r\n        if (value) {\r\n            this.setTemporaryCache(newKey, value, true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\r\n     * @param input\r\n     */\r\n    private validateAndParseJson(jsonValue: string): object | null {\r\n        try {\r\n            const parsedJson = JSON.parse(jsonValue);\r\n            /**\r\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\r\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\r\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\r\n             *\r\n             */\r\n            return (parsedJson && typeof parsedJson === \"object\") ? parsedJson : null;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * fetches the entry from the browser storage based off the key\r\n     * @param key\r\n     */\r\n    getItem(key: string): string | null {\r\n        return this.browserStorage.getItem(key);\r\n    }\r\n\r\n    /**\r\n     * sets the entry in the browser storage\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setItem(key: string, value: string): void {\r\n        this.browserStorage.setItem(key, value);\r\n    }\r\n\r\n    /**\r\n     * fetch the account entity from the platform cache\r\n     * @param accountKey\r\n     */\r\n    getAccount(accountKey: string): AccountEntity | null {\r\n        const account = this.getItem(accountKey);\r\n        if (!account) {\r\n            return null;\r\n        }\r\n\r\n        const parsedAccount = this.validateAndParseJson(account);\r\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\r\n            return null;\r\n        }\r\n\r\n        return CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedAccount);\r\n    }\r\n\r\n    /**\r\n     * set account entity in the platform cache\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setAccount(account: AccountEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\r\n        const key = account.generateAccountKey();\r\n        this.setItem(key, JSON.stringify(account));\r\n    }\r\n\r\n    /**\r\n     * generates idToken entity from a string\r\n     * @param idTokenKey\r\n     */\r\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\r\n        const value = this.getItem(idTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        const parsedIdToken = this.validateAndParseJson(value);\r\n        if (!parsedIdToken || !IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\r\n        return CacheManager.toObject(new IdTokenEntity(), parsedIdToken);\r\n    }\r\n\r\n    /**\r\n     * set IdToken credential to the platform cache\r\n     * @param idToken\r\n     */\r\n    setIdTokenCredential(idToken: IdTokenEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\r\n        const idTokenKey = idToken.generateCredentialKey();\r\n        this.setItem(idTokenKey, JSON.stringify(idToken));\r\n    }\r\n\r\n    /**\r\n     * generates accessToken entity from a string\r\n     * @param key\r\n     */\r\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\r\n        const value = this.getItem(accessTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedAccessToken = this.validateAndParseJson(value);\r\n        if (!parsedAccessToken || !AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\r\n        return CacheManager.toObject(new AccessTokenEntity(), parsedAccessToken);\r\n    }\r\n\r\n    /**\r\n     * set accessToken credential to the platform cache\r\n     * @param accessToken\r\n     */\r\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\r\n        const accessTokenKey = accessToken.generateCredentialKey();\r\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\r\n    }\r\n\r\n    /**\r\n     * generates refreshToken entity from a string\r\n     * @param refreshTokenKey\r\n     */\r\n    getRefreshTokenCredential(refreshTokenKey: string): RefreshTokenEntity | null {\r\n        const value = this.getItem(refreshTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedRefreshToken = this.validateAndParseJson(value);\r\n        if (!parsedRefreshToken || !RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\r\n        return CacheManager.toObject(new RefreshTokenEntity(), parsedRefreshToken);\r\n    }\r\n\r\n    /**\r\n     * set refreshToken credential to the platform cache\r\n     * @param refreshToken\r\n     */\r\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\r\n        const refreshTokenKey = refreshToken.generateCredentialKey();\r\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\r\n    }\r\n\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey\r\n     */\r\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\r\n        const value = this.getItem(appMetadataKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (!parsedMetadata || !AppMetadataEntity.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\r\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\r\n    }\r\n\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata\r\n     */\r\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\r\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\r\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\r\n    }\r\n\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetryKey\r\n     */\r\n    getServerTelemetry(serverTelemetryKey: string): ServerTelemetryEntity | null {\r\n        const value = this.getItem(serverTelemetryKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (!parsedMetadata || !ServerTelemetryEntity.isServerTelemetryEntity(serverTelemetryKey, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\r\n        return CacheManager.toObject(new ServerTelemetryEntity(), parsedMetadata);\r\n    }\r\n\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey\r\n     * @param serverTelemetry\r\n     */\r\n    setServerTelemetry(serverTelemetryKey: string, serverTelemetry: ServerTelemetryEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\r\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadata(key: string) : AuthorityMetadataEntity | null {\r\n        const value = this.internalStorage.getItem(key);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (parsedMetadata && AuthorityMetadataEntity.isAuthorityMetadataEntity(key, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\r\n            return CacheManager.toObject(new AuthorityMetadataEntity(), parsedMetadata);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadataKeys(): Array<string> {\r\n        const allKeys = this.internalStorage.getKeys();\r\n        return allKeys.filter((key) => {\r\n            return this.isAuthorityMetadata(key);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets wrapper metadata in memory\r\n     * @param wrapperSKU \r\n     * @param wrapperVersion \r\n     */\r\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\r\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\r\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\r\n    }\r\n\r\n    /**\r\n     * Returns wrapper metadata from in-memory storage\r\n     */\r\n    getWrapperMetadata(): [string, string] {\r\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) || \"\";\r\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) || \"\";\r\n        return [sku, version];\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\r\n        this.internalStorage.setItem(key, JSON.stringify(entity));\r\n    }\r\n\r\n    /**\r\n     * Gets the active account\r\n     */\r\n    getActiveAccount(): AccountInfo | null {\r\n        const activeAccountIdKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\r\n        const activeAccountId = this.browserStorage.getItem(activeAccountIdKey);\r\n        if (!activeAccountId) {\r\n            return null;\r\n        }\r\n        return this.getAccountInfoByFilter({localAccountId: activeAccountId})[0] || null;\r\n    }\r\n\r\n    /**\r\n     * Sets the active account's localAccountId in cache\r\n     * @param account \r\n     */\r\n    setActiveAccount(account: AccountInfo | null): void {\r\n        const activeAccountIdKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT);\r\n        if (account) {\r\n            this.logger.verbose(\"setActiveAccount: Active account set\");\r\n            this.browserStorage.setItem(activeAccountIdKey, account.localAccountId);\r\n        } else {\r\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\r\n            this.browserStorage.removeItem(activeAccountIdKey);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a list of accounts that match all of the filters provided\r\n     * @param account \r\n     */\r\n    getAccountInfoByFilter(accountFilter: Partial<Omit<AccountInfo, \"idTokenClaims\"|\"name\">>): AccountInfo[] {\r\n        const allAccounts = this.getAllAccounts();\r\n        return allAccounts.filter((accountObj) => {\r\n            if (accountFilter.username && accountFilter.username.toLowerCase() !== accountObj.username.toLowerCase()) {\r\n                return false;\r\n            }\r\n\r\n            if (accountFilter.homeAccountId && accountFilter.homeAccountId !== accountObj.homeAccountId) {\r\n                return false;\r\n            }\r\n\r\n            if (accountFilter.localAccountId && accountFilter.localAccountId !== accountObj.localAccountId) {\r\n                return false;\r\n            }\r\n\r\n            if (accountFilter.tenantId && accountFilter.tenantId !== accountObj.tenantId) {\r\n                return false;\r\n            }\r\n\r\n            if (accountFilter.environment && accountFilter.environment !== accountObj.environment) {\r\n                return false;\r\n            }\r\n            \r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey\r\n     */\r\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\r\n        const value = this.getItem(throttlingCacheKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        const parsedThrottlingCache = this.validateAndParseJson(value);\r\n        if (!parsedThrottlingCache || !ThrottlingEntity.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n\r\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\r\n        return CacheManager.toObject(new ThrottlingEntity(), parsedThrottlingCache);\r\n    }\r\n\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey\r\n     * @param throttlingCache\r\n     */\r\n    setThrottlingCache(throttlingCacheKey: string, throttlingCache: ThrottlingEntity): void {\r\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\r\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\r\n    }\r\n\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            const itemCookie = this.getItemCookie(key);\r\n            if (itemCookie) {\r\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\r\n                return itemCookie;\r\n            }\r\n        }\r\n\r\n        const value = this.temporaryCacheStorage.getItem(key);\r\n        if (!value) {\r\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\r\n            if (this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage) {\r\n                const item = this.browserStorage.getItem(key);\r\n                if (item) {\r\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\r\n                    return item;\r\n                }\r\n            }\r\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\r\n        return value;\r\n    }\r\n\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setTemporaryCache(cacheKey: string, value: string, generateKey?: boolean): void {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n\r\n        this.temporaryCacheStorage.setItem(key, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\r\n            this.setItemCookie(key, value);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeItem(key: string): boolean {\r\n        this.browserStorage.removeItem(key);\r\n        this.temporaryCacheStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\r\n            this.clearItemCookie(key);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Checks whether key is in cache.\r\n     * @param key\r\n     */\r\n    containsKey(key: string): boolean {\r\n        return this.browserStorage.containsKey(key) || this.temporaryCacheStorage.containsKey(key);\r\n    }\r\n\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys(): string[] {\r\n        return [\r\n            ...this.browserStorage.getKeys(),\r\n            ...this.temporaryCacheStorage.getKeys()\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Clears all cache entries created by MSAL.\r\n     */\r\n    async clear(): Promise<void> {\r\n        // Removes all accounts and their credentials\r\n        await this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n\r\n        // Removes all remaining MSAL cache items\r\n        this.getKeys().forEach((cacheKey: string) => {\r\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\r\n            if ((this.browserStorage.containsKey(cacheKey) || this.temporaryCacheStorage.containsKey(cacheKey)) && ((cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1) || (cacheKey.indexOf(this.clientId) !== -1))) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n\r\n        this.internalStorage.clear();\r\n    }\r\n\r\n    /**\r\n     * Add value to cookies\r\n     * @param cookieName\r\n     * @param cookieValue\r\n     * @param expires\r\n     */\r\n    setItemCookie(cookieName: string, cookieValue: string, expires?: number): void {\r\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(cookieValue)};path=/;`;\r\n        if (expires) {\r\n            const expireTime = this.getCookieExpirationTime(expires);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n\r\n        if (this.cacheConfig.secureCookies) {\r\n            cookieStr += \"Secure;\";\r\n        }\r\n        \r\n        document.cookie = cookieStr;\r\n    }\r\n\r\n    /**\r\n     * Get one item by key from cookies\r\n     * @param cookieName\r\n     */\r\n    getItemCookie(cookieName: string): string {\r\n        const name = `${encodeURIComponent(cookieName)}=`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i: number = 0; i < cookieList.length; i++) {\r\n            let cookie = cookieList[i];\r\n            while (cookie.charAt(0) === \" \") {\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(name) === 0) {\r\n                return decodeURIComponent(cookie.substring(name.length, cookie.length));\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\r\n     */\r\n    clearMsalCookies(): void {\r\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        cookieList.forEach((cookie: string): void => {\r\n            while (cookie.charAt(0) === \" \") {\r\n                // eslint-disable-next-line no-param-reassign\r\n                cookie = cookie.substring(1);\r\n            }\r\n            if (cookie.indexOf(cookiePrefix) === 0) {\r\n                const cookieKey = cookie.split(\"=\")[0];\r\n                this.clearItemCookie(cookieKey);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Clear an item in the cookies by key\r\n     * @param cookieName\r\n     */\r\n    clearItemCookie(cookieName: string): void {\r\n        this.setItemCookie(cookieName, \"\", -1);\r\n    }\r\n\r\n    /**\r\n     * Get cookie expiration time\r\n     * @param cookieLifeDays\r\n     */\r\n    getCookieExpirationTime(cookieLifeDays: number): string {\r\n        const today = new Date();\r\n        const expr = new Date(today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER);\r\n        return expr.toUTCString();\r\n    }\r\n\r\n    /**\r\n     * Gets the cache object referenced by the browser\r\n     */\r\n    getCache(): object {\r\n        return this.browserStorage;\r\n    }\r\n\r\n    /**\r\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\r\n     */\r\n    setCache(): void {\r\n        // sets nothing\r\n    }\r\n\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key: string): string {\r\n        const generatedKey = this.validateAndParseJson(key);\r\n        if (!generatedKey) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX) || StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)) {\r\n                return key;\r\n            }\r\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n\r\n        return JSON.stringify(key);\r\n    }\r\n\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(stateString: string): string {\r\n        const {\r\n            libraryState: {\r\n                id: stateId\r\n            }\r\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n\r\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\r\n    }\r\n\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(stateString: string): string {\r\n        const {\r\n            libraryState: {\r\n                id: stateId\r\n            }\r\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n\r\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\r\n    }\r\n\r\n    /**\r\n     * Creates full cache key for the request state\r\n     * @param stateString State string for the request\r\n     */\r\n    generateStateKey(stateString: string): string {\r\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\r\n        const {\r\n            libraryState: {\r\n                id: stateId\r\n            }\r\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\r\n    } \r\n\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(cachedState: string): string | null {\r\n        const stateCacheKey = this.generateStateKey(cachedState);\r\n        const state = this.getTemporaryCache(stateCacheKey);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        return this.getTemporaryCache(authorityCacheKey);\r\n    }\r\n\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(state: string, nonce: string, authorityInstance: string, loginHint: string, account: AccountInfo|null): void {\r\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\r\n        // Cache the request state\r\n        const stateCacheKey = this.generateStateKey(state);\r\n        this.setTemporaryCache(stateCacheKey, state, false);\r\n\r\n        // Cache the nonce\r\n        const nonceCacheKey = this.generateNonceKey(state);\r\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\r\n\r\n        // Cache authorityKey\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\r\n\r\n        if (account) {\r\n            const ccsCredential: CcsCredential = {\r\n                credential: account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID\r\n            };\r\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        } else if (!StringUtils.isEmpty(loginHint)) {\r\n            const ccsCredential: CcsCredential = {\r\n                credential: loginHint,\r\n                type: CcsCredentialType.UPN\r\n            };\r\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state: string): void {\r\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\r\n        // check state and remove associated cache items\r\n        if (!StringUtils.isEmpty(state)) {\r\n            this.getKeys().forEach(key => {\r\n                if (key.indexOf(state) !== -1) {\r\n                    this.removeItem(key);\r\n                }\r\n            });\r\n        }\r\n\r\n        // delete generic interactive request parameters\r\n        if (state) {\r\n            this.removeItem(this.generateStateKey(state));\r\n            this.removeItem(this.generateNonceKey(state));\r\n            this.removeItem(this.generateAuthorityKey(state));\r\n        }\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\r\n        this.setInteractionInProgress(false);\r\n    }\r\n\r\n    /**\r\n     * Removes temporary cache for the provided state\r\n     * @param stateString \r\n     */\r\n    cleanRequestByState(stateString: string): void {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\r\n        // Interaction is completed - remove interaction status.\r\n        if (stateString) {\r\n            const stateKey = this.generateStateKey(stateString);\r\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\r\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\r\n            this.resetRequestCache(cachedState || \"\");\r\n        }\r\n        this.clearMsalCookies();\r\n    }\r\n\r\n    /**\r\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\r\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\r\n     * @param interactionType \r\n     */\r\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\r\n        // Loop through all keys to find state key\r\n        this.getKeys().forEach((key) => {\r\n            // If this key is not the state key, move on\r\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\r\n                return;\r\n            }\r\n            \r\n            // Retrieve state value, return if not a valid value\r\n            const stateValue = this.temporaryCacheStorage.getItem(key);\r\n            if (!stateValue) {\r\n                return;\r\n            }\r\n            // Extract state and ensure it matches given InteractionType, then clean request cache\r\n            const parsedState = BrowserProtocolUtils.extractBrowserRequestState(this.cryptoImpl, stateValue);\r\n            if (parsedState && parsedState.interactionType === interactionType) {\r\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\r\n                this.resetRequestCache(stateValue);\r\n            }\r\n        });\r\n        this.clearMsalCookies();\r\n    }\r\n\r\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest, browserCrypto: ICrypto): void {\r\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\r\n\r\n        const encodedValue = browserCrypto.base64Encode(JSON.stringify(authCodeRequest));\r\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\r\n    }\r\n\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state: string, browserCrypto: ICrypto): CommonAuthorizationCodeRequest {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\r\n        // Get token request from cache and parse as TokenExchangeParameters.\r\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\r\n        if (!encodedTokenRequest) {\r\n            throw BrowserAuthError.createNoTokenRequestCacheError();\r\n        }\r\n\r\n        const parsedRequest = this.validateAndParseJson(browserCrypto.base64Decode(encodedTokenRequest)) as CommonAuthorizationCodeRequest;\r\n        if (!parsedRequest) {\r\n            throw BrowserAuthError.createUnableToParseTokenRequestCacheError();\r\n        }\r\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n\r\n        // Get cached authority and use if no authority is cached with request.\r\n        if (StringUtils.isEmpty(parsedRequest.authority)) {\r\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\r\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\r\n            if (!cachedAuthority) {\r\n                throw BrowserAuthError.createNoCachedAuthorityError();\r\n            }\r\n            parsedRequest.authority = cachedAuthority;\r\n        }\r\n\r\n        return parsedRequest;\r\n    }\r\n\r\n    isInteractionInProgress(matchClientId?: boolean): boolean {\r\n        const clientId = this.getInteractionInProgress();\r\n\r\n        if (matchClientId) {\r\n            return clientId === this.clientId;\r\n        } else {\r\n            return !!clientId;\r\n        }\r\n    }\r\n\r\n    getInteractionInProgress(): string | null {\r\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        return this.getTemporaryCache(key, false);\r\n    }\r\n\r\n    setInteractionInProgress(inProgress: boolean): void {\r\n        const clientId = this.getInteractionInProgress();\r\n        // Ensure we don't overwrite interaction in progress for a different clientId\r\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        if (inProgress && !clientId) {\r\n            // No interaction is in progress\r\n            this.setTemporaryCache(key, this.clientId, false);\r\n        } else if (!inProgress && clientId === this.clientId) {\r\n            this.removeItem(key);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns username retrieved from ADAL or MSAL v1 idToken\r\n     */\r\n    getLegacyLoginHint(): string | null {\r\n        // Only check for adal/msal token if no SSO params are being used\r\n        const adalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n        if (adalIdTokenString) {\r\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\r\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\r\n        }\r\n\r\n        // Check for cached MSAL v1 id token\r\n        const msalIdTokenString = this.getTemporaryCache(PersistentCacheKeys.ID_TOKEN, true);\r\n        if (msalIdTokenString) {\r\n            this.removeItem(this.generateCacheKey(PersistentCacheKeys.ID_TOKEN));\r\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\r\n        }\r\n\r\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\r\n        if (cachedIdTokenString) {\r\n            const cachedIdToken = new IdToken(cachedIdTokenString, this.cryptoImpl);\r\n            if (cachedIdToken.claims && cachedIdToken.claims.preferred_username) {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\");\r\n                return cachedIdToken.claims.preferred_username;\r\n            }\r\n            else if (cachedIdToken.claims && cachedIdToken.claims.upn) {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\");\r\n                return cachedIdToken.claims.upn;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\");\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (clientId: string, logger: Logger): BrowserCacheManager => {\r\n    const cacheOptions = {\r\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false\r\n    };\r\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger);\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nexport class FetchClient implements INetworkModule {\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        let response;\r\n        try {\r\n            response = await fetch(url, {\r\n                method: HTTP_REQUEST_TYPE.GET,\r\n                headers: this.getFetchHeaders(options)\r\n            });\r\n        } catch (e) {\r\n            if (window.navigator.onLine) {\r\n                throw BrowserAuthError.createGetRequestFailedError(e, url);\r\n            } else {\r\n                throw BrowserAuthError.createNoNetworkConnectivityError();\r\n            }\r\n        }\r\n\r\n        try {\r\n            return {\r\n                headers: this.getHeaderDict(response.headers),\r\n                body: await response.json() as T,\r\n                status: response.status\r\n            };\r\n        } catch (e) {\r\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        const reqBody = (options && options.body) || \"\";\r\n\r\n        let response;\r\n        try {\r\n            response = await fetch(url, {\r\n                method: HTTP_REQUEST_TYPE.POST,\r\n                headers: this.getFetchHeaders(options),\r\n                body: reqBody\r\n            });\r\n        } catch (e) {\r\n            if (window.navigator.onLine) {\r\n                throw BrowserAuthError.createPostRequestFailedError(e, url);\r\n            } else {\r\n                throw BrowserAuthError.createNoNetworkConnectivityError();\r\n            }\r\n        }\r\n\r\n        try {\r\n            return {\r\n                headers: this.getHeaderDict(response.headers),\r\n                body: await response.json() as T,\r\n                status: response.status\r\n            };\r\n        } catch (e) {\r\n            throw BrowserAuthError.createFailedToParseNetworkResponseError(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get Fetch API Headers object from string map\r\n     * @param inputHeaders \r\n     */\r\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        const optionsHeaders = options.headers;\r\n        Object.keys(optionsHeaders).forEach((key) => {\r\n            headers.append(key, optionsHeaders[key]);\r\n        });\r\n        return headers;\r\n    }\r\n\r\n    private getHeaderDict(headers: Headers): Record<string, string> {\r\n        const headerDict: Record<string, string> = {};\r\n        headers.forEach((value: string, key: string) => {\r\n            headerDict[key] = value;\r\n        });\r\n        return headerDict;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INetworkModule, NetworkRequestOptions, NetworkResponse } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\r\n\r\n/**\r\n * This client implements the XMLHttpRequest class to send GET and POST requests.\r\n */\r\nexport class XhrClient implements INetworkModule {\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Get request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendGetRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.GET, options);\r\n    }\r\n\r\n    /**\r\n     * XhrClient for REST endpoints - Post request\r\n     * @param url \r\n     * @param headers \r\n     * @param body \r\n     */\r\n    async sendPostRequestAsync<T>(url: string, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return this.sendRequestAsync(url, HTTP_REQUEST_TYPE.POST, options);\r\n    }\r\n\r\n    /**\r\n     * Helper for XhrClient requests.\r\n     * @param url \r\n     * @param method \r\n     * @param options \r\n     */\r\n    private sendRequestAsync<T>(url: string, method: HTTP_REQUEST_TYPE, options?: NetworkRequestOptions): Promise<NetworkResponse<T>> {\r\n        return new Promise<NetworkResponse<T>>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n            xhr.open(method, url, /* async: */ true);\r\n            this.setXhrHeaders(xhr, options);\r\n            xhr.onload = (): void => {\r\n                if (xhr.status < 200 || xhr.status >= 300) {\r\n                    if (method === HTTP_REQUEST_TYPE.POST) {\r\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\r\n                    } else {\r\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\r\n                    }\r\n                }\r\n                try {\r\n                    const jsonResponse = JSON.parse(xhr.responseText) as T;\r\n                    const networkResponse: NetworkResponse<T> = {\r\n                        headers: this.getHeaderDict(xhr),\r\n                        body: jsonResponse,\r\n                        status: xhr.status\r\n                    };\r\n                    resolve(networkResponse);\r\n                } catch (e) {\r\n                    reject(BrowserAuthError.createFailedToParseNetworkResponseError(url));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = (): void => {\r\n                if (window.navigator.onLine) {\r\n                    if (method === HTTP_REQUEST_TYPE.POST) {\r\n                        reject(BrowserAuthError.createPostRequestFailedError(`Failed with status ${xhr.status}`, url));\r\n                    } else {\r\n                        reject(BrowserAuthError.createGetRequestFailedError(`Failed with status ${xhr.status}`, url));\r\n                    }\r\n                } else {\r\n                    reject(BrowserAuthError.createNoNetworkConnectivityError());\r\n                }\r\n            };\r\n\r\n            if (method === HTTP_REQUEST_TYPE.POST && options && options.body) {\r\n                xhr.send(options.body);\r\n            } else if (method === HTTP_REQUEST_TYPE.GET) {\r\n                xhr.send();\r\n            } else {\r\n                throw BrowserAuthError.createHttpMethodNotImplementedError(method);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Helper to set XHR headers for request.\r\n     * @param xhr \r\n     * @param options \r\n     */\r\n    private setXhrHeaders(xhr: XMLHttpRequest, options?: NetworkRequestOptions): void {\r\n        if (options && options.headers) {\r\n            const headers = options.headers;\r\n            Object.keys(headers).forEach((key: string) => {\r\n                xhr.setRequestHeader(key, headers[key]);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a string map of the headers received in the response.\r\n     * \r\n     * Algorithm comes from https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders\r\n     * @param xhr \r\n     */\r\n    private getHeaderDict(xhr: XMLHttpRequest): Record<string, string> {\r\n        const headerString = xhr.getAllResponseHeaders();\r\n        const headerArr = headerString.trim().split(/[\\r\\n]+/);\r\n        const headerDict: Record<string, string> = {};\r\n        headerArr.forEach((value: string) => {\r\n            const parts = value.split(\": \");\r\n            const headerName = parts.shift();\r\n            const headerVal = parts.join(\": \");\r\n            if (headerName && headerVal) {\r\n                headerDict[headerName] = headerVal;\r\n            }\r\n        });\r\n\r\n        return headerDict;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { Constants, INetworkModule, UrlString } from \"@azure/msal-common\";\r\nimport { FetchClient } from \"../network/FetchClient\";\r\nimport { XhrClient } from \"../network/XhrClient\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { InteractionType, BrowserConstants } from \"./BrowserConstants\";\r\n\r\n/**\r\n * Utility class for browser specific functions\r\n */\r\nexport class BrowserUtils {\r\n\r\n    // #region Window Navigation and URL management\r\n\r\n    /**\r\n     * Clears hash from window url.\r\n     */\r\n    static clearHash(contentWindow: Window): void {\r\n        // Office.js sets history.replaceState to null\r\n        contentWindow.location.hash = Constants.EMPTY_STRING;\r\n        if (typeof contentWindow.history.replaceState === \"function\") {\r\n            // Full removes \"#\" from url\r\n            contentWindow.history.replaceState(null, Constants.EMPTY_STRING, `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Replaces current hash with hash from provided url\r\n     */\r\n    static replaceHash(url: string): void {\r\n        const urlParts = url.split(\"#\");\r\n        urlParts.shift(); // Remove part before the hash\r\n        window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether the current window is in an iframe or not.\r\n     */\r\n    static isInIframe(): boolean {\r\n        return window.parent !== window;\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether or not the current window is a popup opened by msal\r\n     */\r\n    static isInPopup(): boolean {\r\n        return typeof window !== \"undefined\" && !!window.opener && \r\n            window.opener !== window && \r\n            typeof window.name === \"string\" && \r\n            window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0;\r\n    }\r\n\r\n    // #endregion\r\n\r\n    /**\r\n     * Returns current window URL as redirect uri\r\n     */\r\n    static getCurrentUri(): string {\r\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\r\n    }\r\n\r\n    /**\r\n     * Gets the homepage url for the current window location.\r\n     */\r\n    static getHomepage(): string {\r\n        const currentUrl = new UrlString(window.location.href);\r\n        const urlComponents = currentUrl.getUrlComponents();\r\n        return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\r\n    }\r\n\r\n    /**\r\n     * Returns best compatible network client object. \r\n     */\r\n    static getBrowserNetworkClient(): INetworkModule {\r\n        if (window.fetch && window.Headers) {\r\n            return new FetchClient();\r\n        } else {\r\n            return new XhrClient();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Throws error if we have completed an auth and are \r\n     * attempting another auth request inside an iframe.\r\n     */\r\n    static blockReloadInHiddenIframes(): void {\r\n        const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n        // return an error if called from the hidden iframe created by the msal js silent calls\r\n        if (isResponseHash && BrowserUtils.isInIframe()) {\r\n            throw BrowserAuthError.createBlockReloadInHiddenIframeError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Block redirect operations in iframes unless explicitly allowed\r\n     * @param interactionType Interaction type for the request\r\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n     */\r\n    static blockRedirectInIframe(interactionType: InteractionType, allowRedirectInIframe: boolean): void {\r\n        const isIframedApp = BrowserUtils.isInIframe();\r\n        if (interactionType === InteractionType.Redirect && isIframedApp && !allowRedirectInIframe) {\r\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n            throw BrowserAuthError.createRedirectInIframeError(isIframedApp);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n     */\r\n    static blockAcquireTokenInPopups(): void {\r\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n        if (BrowserUtils.isInPopup()) {\r\n            throw BrowserAuthError.createBlockAcquireTokenInPopupsError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Throws error if token requests are made in non-browser environment\r\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n     */\r\n    static blockNonBrowserEnvironment(isBrowserEnvironment: boolean): void {\r\n        if (!isBrowserEnvironment) {\r\n            throw BrowserAuthError.createNonBrowserEnvironmentError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns boolean of whether current browser is an Internet Explorer or Edge browser.\r\n     */\r\n    static detectIEOrEdge(): boolean {\r\n        const ua = window.navigator.userAgent;\r\n        const msie = ua.indexOf(\"MSIE \");\r\n        const msie11 = ua.indexOf(\"Trident/\");\r\n        const msedge = ua.indexOf(\"Edge/\");\r\n        const isIE = msie > 0 || msie11 > 0;\r\n        const isEdge = msedge > 0;\r\n        return isIE || isEdge;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { INavigationClient } from \"./INavigationClient\";\r\nimport { NavigationOptions } from \"./NavigationOptions\";\r\n\r\nexport class NavigationClient implements INavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url \r\n     * @param options \r\n     */\r\n    navigateInternal(url: string, options: NavigationOptions): Promise<boolean>{\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url \r\n     * @param options \r\n     */\r\n    navigateExternal(url: string, options: NavigationOptions): Promise<boolean> {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url \r\n     * @param options \r\n     */\r\n    private static defaultNavigateWindow(url: string, options: NavigationOptions): Promise<boolean> {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        } else {\r\n            window.location.assign(url);\r\n        }\r\n\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { SystemOptions, LoggerOptions, INetworkModule, DEFAULT_SYSTEM_OPTIONS, Constants, ProtocolMode, LogLevel, StubbedNetworkModule } from \"@azure/msal-common\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { NavigationClient } from \"../navigation/NavigationClient\";\r\n\r\n// Default timeout for popup windows and iframes in milliseconds\r\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 6000;\r\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\r\n\r\n/**\r\n * Use this to configure the auth options in the Configuration object\r\n *\r\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\r\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\r\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\r\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\r\n * - redirectUri                - The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\r\n * - postLogoutRedirectUri      - The redirect URI where the window navigates after a successful logout.\r\n * - navigateToLoginRequestUrl  - Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\r\n * - clientCapabilities         - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\r\n * - protocolMode               - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\r\n */\r\nexport type BrowserAuthOptions = {\r\n    clientId: string;\r\n    authority?: string;\r\n    knownAuthorities?: Array<string>;\r\n    cloudDiscoveryMetadata?: string;\r\n    authorityMetadata?: string;\r\n    redirectUri?: string;\r\n    postLogoutRedirectUri?: string | null;\r\n    navigateToLoginRequestUrl?: boolean;\r\n    clientCapabilities?: Array<string>;\r\n    protocolMode?: ProtocolMode;\r\n};\r\n\r\n/**\r\n * Use this to configure the below cache configuration options:\r\n *\r\n * - cacheLocation            - Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\" and \"sessionStorage\"\r\n * - storeAuthStateInCookie   - If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\r\n * - secureCookies            - If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\r\n */\r\nexport type CacheOptions = {\r\n    cacheLocation?: BrowserCacheLocation | string;\r\n    storeAuthStateInCookie?: boolean;\r\n    secureCookies?: boolean;\r\n};\r\n\r\n/**\r\n * Library Specific Options\r\n *\r\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\r\n * - loggerOptions                - Used to initialize the Logger object (See ClientConfiguration.ts)\r\n * - networkClient                - Network interface implementation\r\n * - windowHashTimeout            - Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\r\n * - iframeHashTimeout            - Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\r\n * - loadFrameTimeout             - Sets the timeout for waiting for a response hash in an iframe or popup\r\n * - navigateFrameWait            - Maximum time the library should wait for a frame to load\r\n * - redirectNavigationTimeout    - Time to wait for redirection to occur before resolving promise\r\n * - asyncPopups                  - Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\r\n * - allowRedirectInIframe        - Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\r\n */\r\nexport type BrowserSystemOptions = SystemOptions & {\r\n    loggerOptions?: LoggerOptions;\r\n    networkClient?: INetworkModule;\r\n    navigationClient?: INavigationClient;\r\n    windowHashTimeout?: number;\r\n    iframeHashTimeout?: number;\r\n    loadFrameTimeout?: number;\r\n    navigateFrameWait?: number;\r\n    redirectNavigationTimeout?: number;\r\n    asyncPopups?: boolean;\r\n    allowRedirectInIframe?: boolean;\r\n};\r\n\r\n/**\r\n * Use the configuration object to configure MSAL and initialize the UserAgentApplication.\r\n *\r\n * This object allows you to configure important elements of MSAL functionality:\r\n * - auth: this is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\r\n * - cache: this is where you configure cache location and whether to store cache in cookies\r\n * - system: this is where you can configure the network client, logger, token renewal offset\r\n */\r\nexport type Configuration = {\r\n    auth: BrowserAuthOptions,\r\n    cache?: CacheOptions,\r\n    system?: BrowserSystemOptions\r\n};\r\n\r\nexport type BrowserConfiguration = {\r\n    auth: Required<BrowserAuthOptions>,\r\n    cache: Required<CacheOptions>,\r\n    system: Required<BrowserSystemOptions>\r\n};\r\n\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nexport function buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem }: Configuration, isBrowserEnvironment: boolean): BrowserConfiguration {\r\n\r\n    // Default auth options for browser\r\n    const DEFAULT_AUTH_OPTIONS: Required<BrowserAuthOptions> = {\r\n        clientId: \"\",\r\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\r\n        knownAuthorities: [],\r\n        cloudDiscoveryMetadata: \"\",\r\n        authorityMetadata: \"\",\r\n        redirectUri: \"\",\r\n        postLogoutRedirectUri: \"\",\r\n        navigateToLoginRequestUrl: true,\r\n        clientCapabilities: [],\r\n        protocolMode: ProtocolMode.AAD\r\n    };\r\n\r\n    // Default cache options for browser\r\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\r\n        cacheLocation: BrowserCacheLocation.SessionStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false\r\n    };\r\n\r\n    // Default logger options for browser\r\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        loggerCallback: (): void => {},\r\n        logLevel: LogLevel.Info,\r\n        piiLoggingEnabled: false\r\n    };\r\n\r\n    // Default system options for browser\r\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\r\n        ...DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n        networkClient: isBrowserEnvironment ? BrowserUtils.getBrowserNetworkClient() : StubbedNetworkModule,\r\n        navigationClient: new NavigationClient(),\r\n        loadFrameTimeout: 0,\r\n        // If loadFrameTimeout is provided, use that as default.\r\n        windowHashTimeout: (userInputSystem && userInputSystem.loadFrameTimeout) || DEFAULT_POPUP_TIMEOUT_MS,\r\n        iframeHashTimeout: (userInputSystem && userInputSystem.loadFrameTimeout) || DEFAULT_IFRAME_TIMEOUT_MS,\r\n        navigateFrameWait: isBrowserEnvironment && BrowserUtils.detectIEOrEdge() ? 500 : 0,\r\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\r\n        asyncPopups: false,\r\n        allowRedirectInIframe: false\r\n    };\r\n\r\n    const overlayedConfig: BrowserConfiguration = {\r\n        auth: { ...DEFAULT_AUTH_OPTIONS, ...userInputAuth },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: { ...DEFAULT_BROWSER_SYSTEM_OPTIONS, ...userInputSystem }\r\n    };\r\n    return overlayedConfig;\r\n}\r\n","/* eslint-disable header/header */\r\nexport const name = \"@azure/msal-browser\";\r\nexport const version = \"2.18.0\";\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nexport enum EventType {\r\n    ACCOUNT_ADDED = \"msal:accountAdded\",\r\n    ACCOUNT_REMOVED = \"msal:accountRemoved\",\r\n    LOGIN_START = \"msal:loginStart\",\r\n    LOGIN_SUCCESS = \"msal:loginSuccess\",\r\n    LOGIN_FAILURE = \"msal:loginFailure\",\r\n    ACQUIRE_TOKEN_START = \"msal:acquireTokenStart\",\r\n    ACQUIRE_TOKEN_SUCCESS = \"msal:acquireTokenSuccess\",\r\n    ACQUIRE_TOKEN_FAILURE = \"msal:acquireTokenFailure\",\r\n    ACQUIRE_TOKEN_NETWORK_START = \"msal:acquireTokenFromNetworkStart\",\r\n    SSO_SILENT_START = \"msal:ssoSilentStart\",\r\n    SSO_SILENT_SUCCESS = \"msal:ssoSilentSuccess\",\r\n    SSO_SILENT_FAILURE = \"msal:ssoSilentFailure\",\r\n    HANDLE_REDIRECT_START = \"msal:handleRedirectStart\",\r\n    HANDLE_REDIRECT_END = \"msal:handleRedirectEnd\",\r\n    POPUP_OPENED = \"msal:popupOpened\",\r\n    LOGOUT_START = \"msal:logoutStart\",\r\n    LOGOUT_SUCCESS = \"msal:logoutSuccess\",\r\n    LOGOUT_FAILURE = \"msal:logoutFailure\",\r\n    LOGOUT_END = \"msal:logoutEnd\"\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICrypto, Logger, AccountEntity, CacheManager } from \"@azure/msal-common\";\r\nimport { InteractionType } from \"../utils/BrowserConstants\";\r\nimport { EventCallbackFunction, EventError, EventMessage, EventPayload } from \"./EventMessage\";\r\nimport { EventType } from \"./EventType\";\r\n\r\nexport class EventHandler {\r\n    // Callback for subscribing to events\r\n    private eventCallbacks: Map<string, EventCallbackFunction>;\r\n    private logger: Logger;\r\n    private browserCrypto: ICrypto;\r\n    private listeningToStorageEvents: boolean;\r\n\r\n    constructor(logger: Logger, browserCrypto: ICrypto) {\r\n        this.eventCallbacks = new Map();\r\n        this.logger = logger;\r\n        this.browserCrypto = browserCrypto;\r\n        this.listeningToStorageEvents = false;\r\n        this.handleAccountCacheChange = this.handleAccountCacheChange.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback: EventCallbackFunction): string | null {\r\n        if (typeof window !== \"undefined\") {\r\n            const callbackId = this.browserCrypto.createNewGuid();\r\n            this.eventCallbacks.set(callbackId, callback);\r\n            this.logger.verbose(`Event callback registered with id: ${callbackId}`);\r\n    \r\n            return callbackId;\r\n        }\r\n        \r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId: string): void {\r\n        this.eventCallbacks.delete(callbackId);\r\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\r\n    }\r\n\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents(): void {\r\n        if (typeof window === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        if (!this.listeningToStorageEvents) {\r\n            this.logger.verbose(\"Adding account storage listener.\");\r\n            this.listeningToStorageEvents = true;\r\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\r\n        } else {\r\n            this.logger.verbose(\"Account storage listener already registered.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents(): void {\r\n        if (typeof window === \"undefined\") {\r\n            return;\r\n        }\r\n\r\n        if (this.listeningToStorageEvents) {\r\n            this.logger.verbose(\"Removing account storage listener.\");\r\n            window.removeEventListener(\"storage\", this.handleAccountCacheChange);\r\n            this.listeningToStorageEvents = false;\r\n        } else {\r\n            this.logger.verbose(\"No account storage listener registered.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emits events by calling callback with event message\r\n     * @param eventType\r\n     * @param interactionType\r\n     * @param payload\r\n     * @param error\r\n     */\r\n    emitEvent(eventType: EventType, interactionType?: InteractionType, payload?: EventPayload, error?: EventError): void {\r\n        if (typeof window !== \"undefined\") {\r\n            const message: EventMessage = {\r\n                eventType: eventType,\r\n                interactionType: interactionType || null,\r\n                payload: payload || null,\r\n                error: error || null,\r\n                timestamp: Date.now()\r\n            };\r\n\r\n            this.logger.info(`Emitting event: ${eventType}`);\r\n\r\n            this.eventCallbacks.forEach((callback: EventCallbackFunction, callbackId: string) => {\r\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${eventType}`);\r\n                callback.apply(null, [message]);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\r\n     */\r\n    private handleAccountCacheChange(e: StorageEvent): void {\r\n        try {\r\n            const cacheValue = e.newValue || e.oldValue;\r\n            if (!cacheValue) {\r\n                return;\r\n            }\r\n            const parsedValue = JSON.parse(cacheValue);\r\n            if (typeof parsedValue !== \"object\" || !AccountEntity.isAccountEntity(parsedValue)) {\r\n                return;\r\n            }\r\n            const accountEntity = CacheManager.toObject<AccountEntity>(new AccountEntity(), parsedValue);\r\n            const accountInfo = accountEntity.getAccountInfo();\r\n            if (!e.oldValue && e.newValue) {\r\n                this.logger.info(\"Account was added to cache in a different window\");\r\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\r\n            } else if (!e.newValue && e.oldValue) {\r\n                this.logger.info(\"Account was removed from cache in a different window\");\r\n                this.emitEvent(EventType.ACCOUNT_REMOVED, undefined, accountInfo);\r\n            }\r\n        } catch (e) {\r\n            return;\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICrypto, INetworkModule, Logger, AuthenticationResult, AccountInfo, AccountEntity, BaseAuthRequest, AuthenticationScheme, UrlString, ServerTelemetryManager, ServerTelemetryRequest } from \"@azure/msal-common\";\r\nimport { BrowserConfiguration } from \"../config/Configuration\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { EventHandler } from \"../event/EventHandler\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\nimport { version } from \"../packageMetadata\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\n\r\nexport abstract class BaseInteractionClient {\r\n\r\n    protected config: BrowserConfiguration;\r\n    protected browserStorage: BrowserCacheManager;\r\n    protected browserCrypto: ICrypto;\r\n    protected networkClient: INetworkModule;\r\n    protected logger: Logger;\r\n    protected eventHandler: EventHandler;\r\n    protected correlationId: string;\r\n\r\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, correlationId?: string) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.correlationId = correlationId || this.browserCrypto.createNewGuid();\r\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\r\n    }\r\n\r\n    abstract acquireToken(request: RedirectRequest|PopupRequest|SsoSilentRequest): Promise<AuthenticationResult|void>;\r\n\r\n    abstract logout(request: EndSessionRequest): Promise<void>;\r\n\r\n    protected async clearCacheOnLogout(account?: AccountInfo| null): Promise<void> {\r\n        if (account) {\r\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\r\n                this.logger.verbose(\"Setting active account to null\");\r\n                this.browserStorage.setActiveAccount(null);\r\n            }\r\n            // Clear given account.\r\n            try {\r\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\r\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\r\n            } catch (error) {\r\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\r\n            }\r\n        } else {\r\n            try {\r\n                // Clear all accounts and tokens\r\n                await this.browserStorage.clear();\r\n                // Clear any stray keys from IndexedDB\r\n                await this.browserCrypto.clearKeystore();\r\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\");\r\n            } catch(e) {\r\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initializer function for all request APIs\r\n     * @param request\r\n     */\r\n    protected initializeBaseRequest(request: Partial<BaseAuthRequest>): BaseAuthRequest {\r\n        this.logger.verbose(\"Initializing BaseAuthRequest\");\r\n        const authority = request.authority || this.config.auth.authority;\r\n\r\n        const scopes = [...((request && request.scopes) || [])];\r\n\r\n        // Set authenticationScheme to BEARER if not explicitly set in the request\r\n        if (!request.authenticationScheme) {\r\n            request.authenticationScheme = AuthenticationScheme.BEARER;\r\n            this.logger.verbose(\"Authentication Scheme wasn't explicitly set in request, defaulting to \\\"Bearer\\\" request\");\r\n        } else {\r\n            this.logger.verbose(`Authentication Scheme set to \"${request.authenticationScheme}\" as configured in Auth request`);\r\n        }\r\n\r\n        const validatedRequest: BaseAuthRequest = {\r\n            ...request,\r\n            correlationId: this.correlationId,\r\n            authority,\r\n            scopes\r\n        };\r\n\r\n        return validatedRequest;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    protected getRedirectUri(requestRedirectUri?: string): string {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri || BrowserUtils.getCurrentUri();\r\n        return UrlString.getAbsoluteUrl(redirectUri, BrowserUtils.getCurrentUri());\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    protected initializeServerTelemetryManager(apiId: number, forceRefresh?: boolean): ServerTelemetryManager {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        const telemetryPayload: ServerTelemetryRequest = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1]\r\n        };\r\n\r\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { ICrypto, Logger, ServerTelemetryManager, CommonAuthorizationCodeRequest, Constants, AuthorizationCodeClient, ClientConfiguration, AuthorityOptions, Authority, AuthorityFactory, ServerAuthorizationCodeResponse, UrlString, CommonEndSessionRequest, ProtocolUtils, ResponseMode, StringUtils } from \"@azure/msal-common\";\r\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\r\nimport { BrowserConfiguration } from \"../config/Configuration\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { EventHandler } from \"../event/EventHandler\";\r\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\r\nimport { version } from \"../packageMetadata\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserProtocolUtils, BrowserStateObject } from \"../utils/BrowserProtocolUtils\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\n\r\n/**\r\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\r\n */\r\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\r\n    protected navigationClient: INavigationClient;\r\n\r\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, correlationId?: string) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, correlationId);\r\n        this.navigationClient = navigationClient;\r\n    }\r\n    \r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     */\r\n    protected async initializeAuthorizationCodeRequest(request: AuthorizationUrlRequest): Promise<CommonAuthorizationCodeRequest> {\r\n        this.logger.verbose(\"initializeAuthorizationRequest called\", request.correlationId);\r\n        const generatedPkceParams = await this.browserCrypto.generatePkceCodes();\r\n\r\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: \"\",\r\n            codeVerifier: generatedPkceParams.verifier\r\n        };\r\n\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n\r\n        return authCodeRequest;\r\n    }\r\n\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    protected initializeLogoutRequest(logoutRequest?: EndSessionRequest): CommonEndSessionRequest {\r\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\r\n\r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.browserStorage.isInteractionInProgress()) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n\r\n        const validLogoutRequest: CommonEndSessionRequest = {\r\n            correlationId: this.browserCrypto.createNewGuid(),\r\n            ...logoutRequest\r\n        };\r\n\r\n        /*\r\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\r\n         * Otherwise, use passed uri, config, or current page.\r\n         */\r\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\r\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\r\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\r\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\r\n            } else if (this.config.auth.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, BrowserUtils.getCurrentUri());\r\n            } else {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri = UrlString.getAbsoluteUrl(BrowserUtils.getCurrentUri(), BrowserUtils.getCurrentUri());\r\n            }\r\n        } else {\r\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\r\n        }\r\n\r\n        return validLogoutRequest;\r\n    }\r\n\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param serverTelemetryManager\r\n     * @param authorityUrl\r\n     */\r\n    protected async createAuthCodeClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string): Promise<AuthorizationCodeClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl);\r\n        return new AuthorizationCodeClient(clientConfig);\r\n    }\r\n\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param serverTelemetryManager\r\n     * @param requestAuthority\r\n     * @param requestCorrelationId\r\n     */\r\n    protected async getClientConfiguration(serverTelemetryManager: ServerTelemetryManager, requestAuthority?: string): Promise<ClientConfiguration> {\r\n        this.logger.verbose(\"getClientConfiguration called\");\r\n        const discoveredAuthority = await this.getDiscoveredAuthority(requestAuthority);\r\n\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                clientCapabilities: this.config.auth.clientCapabilities\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                preventCorsPreflight: true\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: this.config.system.loggerOptions.loggerCallback,\r\n                piiLoggingEnabled: this.config.system.loggerOptions.piiLoggingEnabled,\r\n                logLevel: this.config.system.loggerOptions.logLevel,\r\n                correlationId: this.correlationId\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            serverTelemetryManager: serverTelemetryManager,\r\n            libraryInfo: {\r\n                sku: BrowserConstants.MSAL_SKU,\r\n                version: version,\r\n                cpu: \"\",\r\n                os: \"\"\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @param hash\r\n     * @param interactionType\r\n     */\r\n    protected validateAndExtractStateFromHash(hash: string, interactionType: InteractionType, requestCorrelationId?: string): string {\r\n        this.logger.verbose(\"validateAndExtractStateFromHash called\", requestCorrelationId);\r\n        // Deserialize hash fragment response parameters.\r\n        const serverParams: ServerAuthorizationCodeResponse = UrlString.getDeserializedHash(hash);\r\n        if (!serverParams.state) {\r\n            throw BrowserAuthError.createHashDoesNotContainStateError();\r\n        }\r\n\r\n        const platformStateObj = BrowserProtocolUtils.extractBrowserRequestState(this.browserCrypto, serverParams.state);\r\n        if (!platformStateObj) {\r\n            throw BrowserAuthError.createUnableToParseStateError();\r\n        }\r\n\r\n        if (platformStateObj.interactionType !== interactionType) {\r\n            throw BrowserAuthError.createStateInteractionTypeMismatchError();\r\n        }\r\n\r\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\r\n        return serverParams.state;\r\n    }\r\n\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param requestAuthority\r\n     * @param requestCorrelationId\r\n     */\r\n    protected async getDiscoveredAuthority(requestAuthority?: string): Promise<Authority> {\r\n        this.logger.verbose(\"getDiscoveredAuthority called\");\r\n        const authorityOptions: AuthorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata\r\n        };\r\n\r\n        if (requestAuthority) {\r\n            this.logger.verbose(\"Creating discovered authority with request authority\");\r\n            return await AuthorityFactory.createDiscoveredInstance(requestAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions);\r\n        }\r\n\r\n        this.logger.verbose(\"Creating discovered authority with configured authority\");\r\n        return await AuthorityFactory.createDiscoveredInstance(this.config.auth.authority, this.config.system.networkClient, this.browserStorage, authorityOptions);\r\n    }\r\n\r\n    /**\r\n     * Helper to validate app environment before making a request.\r\n     * @param request\r\n     * @param interactionType\r\n     */\r\n    protected preflightInteractiveRequest(request: RedirectRequest|PopupRequest, interactionType: InteractionType): AuthorizationUrlRequest {\r\n        this.logger.verbose(\"preflightInteractiveRequest called, validating app environment\", request?.correlationId);\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n    \r\n        // Check if interaction is in progress. Throw error if true.\r\n        if (this.browserStorage.isInteractionInProgress(false)) {\r\n            throw BrowserAuthError.createInteractionInProgressError();\r\n        }\r\n    \r\n        return this.initializeAuthorizationRequest(request, interactionType);\r\n    }\r\n\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     * @param interactionType\r\n     */\r\n    protected initializeAuthorizationRequest(request: RedirectRequest|PopupRequest|SsoSilentRequest, interactionType: InteractionType): AuthorizationUrlRequest {\r\n        this.logger.verbose(\"initializeAuthorizationRequest called\");\r\n        const redirectUri = this.getRedirectUri(request.redirectUri);\r\n        const browserState: BrowserStateObject = {\r\n            interactionType: interactionType\r\n        };\r\n\r\n        const state = ProtocolUtils.setRequestState(\r\n            this.browserCrypto,\r\n            (request && request.state) || \"\",\r\n            browserState\r\n        );\r\n\r\n        const validatedRequest: AuthorizationUrlRequest = {\r\n            ...this.initializeBaseRequest(request),\r\n            redirectUri: redirectUri,\r\n            state: state,\r\n            nonce: request.nonce || this.browserCrypto.createNewGuid(),\r\n            responseMode: ResponseMode.FRAGMENT\r\n        };\r\n\r\n        const account = request.account || this.browserStorage.getActiveAccount();\r\n        if (account) {\r\n            this.logger.verbose(\"Setting validated request account\");\r\n            this.logger.verbosePii(`Setting validated request account: ${account}`);\r\n            validatedRequest.account = account;\r\n        }\r\n\r\n        // Check for ADAL/MSAL v1 SSO\r\n        if (StringUtils.isEmpty(validatedRequest.loginHint) && !account) {\r\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\r\n            if (legacyLoginHint) {\r\n                validatedRequest.loginHint = legacyLoginHint;\r\n            }\r\n        }\r\n\r\n        this.browserStorage.updateCacheEntries(validatedRequest.state, validatedRequest.nonce, validatedRequest.authority, validatedRequest.loginHint || \"\", validatedRequest.account || null);\r\n\r\n        return validatedRequest;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CommonEndSessionRequest, Constants, Logger, StringUtils } from \"@azure/msal-common\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { PopupParams } from \"../interaction_handler/PopupHandler\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\r\nimport { BrowserConstants, InteractionType } from \"./BrowserConstants\";\r\n\r\n/**\r\n * Popup configurations for setting dimensions and position of popup window\r\n */\r\nexport type PopupWindowAttributes = {\r\n    popupSize?: PopupSize,\r\n    popupPosition?: PopupPosition\r\n};\r\n\r\nexport type PopupSize = {\r\n    height: number;\r\n    width: number;\r\n};\r\n\r\nexport type PopupPosition = {\r\n    top: number;\r\n    left: number;\r\n};\r\n\r\nexport class PopupUtils {\r\n    private browserStorage: BrowserCacheManager;\r\n    private logger: Logger;\r\n    private currentWindow: Window|undefined;\r\n\r\n    constructor(storageImpl: BrowserCacheManager, logger: Logger) {\r\n        this.browserStorage = storageImpl;\r\n        this.logger = logger;\r\n\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @param popupWindowAttributes\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\r\n        try {\r\n            let popupWindow;\r\n            // Popup window passed in, setting url to navigate to\r\n            if (popupParams.popup) {\r\n                popupWindow = popupParams.popup;\r\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\r\n                popupWindow.location.assign(urlNavigate);\r\n            } else if (typeof popupParams.popup === \"undefined\") {\r\n                // Popup will be undefined if it was not passed in\r\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\r\n                popupWindow = PopupUtils.openSizedPopup(urlNavigate, popupParams.popupName, popupParams.popupWindowAttributes, this.logger);\r\n            }\r\n\r\n            // Popup will be null if popups are blocked\r\n            if (!popupWindow) {\r\n                throw BrowserAuthError.createEmptyWindowCreatedError();\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n            return popupWindow;\r\n        } catch (e) {\r\n            this.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw BrowserAuthError.createPopupWindowError(e.toString());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to set popup window dimensions and position\r\n     * @param urlNavigate \r\n     * @param popupName \r\n     * @param popupWindowAttributes \r\n     * @returns \r\n     */\r\n    static openSizedPopup(urlNavigate: string, popupName: string, popupWindowAttributes: PopupWindowAttributes, logger: Logger): Window|null {\r\n        /**\r\n         * adding winLeft and winTop to account for dual monitor\r\n         * using screenLeft and screenTop for IE8 and earlier\r\n         */\r\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\r\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\r\n        /**\r\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n         * using document.documentElement.clientWidth for IE8 and earlier\r\n         */\r\n        const winWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\r\n        const winHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\r\n\r\n        let width = popupWindowAttributes.popupSize?.width;\r\n        let height = popupWindowAttributes.popupSize?.height;\r\n        let top = popupWindowAttributes.popupPosition?.top;\r\n        let left = popupWindowAttributes.popupPosition?.left;\r\n\r\n        if (!width || width < 0 || width > winWidth) {\r\n            logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\r\n            width = BrowserConstants.POPUP_WIDTH;\r\n        }\r\n\r\n        if (!height || height < 0 || height > winHeight) {\r\n            logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\r\n            height = BrowserConstants.POPUP_HEIGHT;\r\n        }\r\n\r\n        if (!top || top < 0 || top > winHeight) {\r\n            logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\r\n            top = Math.max(0, ((winHeight / 2) - (BrowserConstants.POPUP_HEIGHT / 2)) + winTop);\r\n        }\r\n\r\n        if (!left || left < 0 || left > winWidth) {\r\n            logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\r\n            left = Math.max(0, ((winWidth / 2) - (BrowserConstants.POPUP_WIDTH / 2)) + winLeft);\r\n        }\r\n\r\n        return window.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\r\n    }\r\n\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e: Event): void {\r\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\r\n        if (this.currentWindow) {\r\n            this.currentWindow.close();\r\n        }\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        e.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    cleanPopup(popupWindow?: Window): void {\r\n        if (popupWindow) {\r\n            // Close window.\r\n            popupWindow.close();\r\n        }\r\n        // Remove window unload function\r\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n    }\r\n\r\n    /**\r\n     * Monitors a window until it loads a url with the same origin.\r\n     * @param popupWindow - window that is being monitored\r\n     */\r\n    monitorPopupForSameOrigin(popupWindow: Window): Promise<void> {\r\n        return new Promise((resolve, reject) => {\r\n            const intervalId = setInterval(() => {\r\n                if (popupWindow.closed) {\r\n                    // Window is closed\r\n                    this.cleanPopup();\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createUserCancelledError());\r\n                    return;\r\n                }\r\n\r\n                let href: string = Constants.EMPTY_STRING;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                } catch (e) {}\r\n\r\n                // Don't process blank pages or cross domain\r\n                if (StringUtils.isEmpty(href) || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n\r\n                clearInterval(intervalId);\r\n                resolve();\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Generates the name for the popup based on the client id and request\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    static generatePopupName(clientId: string, request: AuthorizationUrlRequest): string {\r\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${clientId}.${request.scopes.join(\"-\")}.${request.authority}.${request.correlationId}`;\r\n    }\r\n\r\n    /**\r\n     * Generates the name for the popup based on the client id and request for logouts\r\n     * @param clientId \r\n     * @param request \r\n     */\r\n    static generateLogoutPopupName(clientId: string, request: CommonEndSessionRequest): string {\r\n        const homeAccountId = request.account && request.account.homeAccountId;\r\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${clientId}.${homeAccountId}.${request.correlationId}`;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StringUtils, CommonAuthorizationCodeRequest, AuthenticationResult, AuthorizationCodeClient, AuthorityFactory, Authority, INetworkModule, ClientAuthError, CcsCredential, Logger } from \"@azure/msal-common\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\n\r\nexport type InteractionParams = {};\r\n\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nexport abstract class InteractionHandler {\r\n\r\n    protected authModule: AuthorizationCodeClient;\r\n    protected browserStorage: BrowserCacheManager;\r\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\r\n    protected browserRequestLogger: Logger;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.browserRequestLogger = browserRequestLogger;\r\n    }\r\n\r\n    /**\r\n     * Function to enable user interaction.\r\n     * @param requestUrl\r\n     */\r\n    abstract initiateAuthRequest(requestUrl: string, params: InteractionParams): Window | Promise<HTMLIFrameElement> | Promise<void>;\r\n\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule): Promise<AuthenticationResult> {\r\n        this.browserRequestLogger.verbose(\"InteractionHandler.handleCodeResponse called\");\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Handle code response.\r\n        const stateKey = this.browserStorage.generateStateKey(state);\r\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n        if (!requestState) {\r\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\r\n        }\r\n        const authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n\r\n        // Get cached items\r\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\r\n        }\r\n\r\n        authCodeResponse.nonce = cachedNonce || undefined;\r\n        authCodeResponse.state = requestState;\r\n\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        } else {\r\n            const cachedCcsCred = this.checkCcsCredentials();\r\n            if (cachedCcsCred) {\r\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n            }\r\n        }\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\r\n        this.browserStorage.cleanRequestByState(state);\r\n        return tokenResponse;\r\n    }\r\n\r\n    /**\r\n     * Updates authority based on cloudInstanceHostname\r\n     * @param cloudInstanceHostname \r\n     * @param authority \r\n     * @param networkModule \r\n     */\r\n    protected async updateTokenEndpointAuthority(cloudInstanceHostname: string, authority: Authority, networkModule: INetworkModule): Promise<void> {\r\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\r\n        const cloudInstanceAuthority = await AuthorityFactory.createDiscoveredInstance(cloudInstanceAuthorityUri, networkModule, this.browserStorage, authority.options);\r\n        this.authModule.updateAuthority(cloudInstanceAuthority);\r\n    }\r\n\r\n    /**\r\n     * Looks up ccs creds in the cache\r\n     */\r\n    protected checkCcsCredentials(): CcsCredential | null {\r\n        // Look up ccs credential in temp cache\r\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\r\n        if (cachedCcsCred) {\r\n            try {\r\n                return JSON.parse(cachedCcsCred) as CcsCredential;\r\n            } catch (e) {\r\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\r\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Logger } from \"@azure/msal-common\";\r\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { PopupWindowAttributes, PopupUtils } from \"../utils/PopupUtils\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\n\r\nexport type PopupParams = InteractionParams & {\r\n    popup?: Window|null;\r\n    popupName: string;\r\n    popupWindowAttributes: PopupWindowAttributes\r\n};\r\n\r\n/**\r\n * This class implements the interaction handler base class for browsers. It is written specifically for handling\r\n * popup window scenarios. It includes functions for monitoring the popup window for a hash.\r\n */\r\nexport class PopupHandler extends InteractionHandler {\r\n    private popupUtils: PopupUtils;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger) {\r\n        super(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger);\r\n\r\n        // Properly sets this reference for the unload event.\r\n        this.popupUtils = new PopupUtils(storageImpl, browserRequestLogger);\r\n    }\r\n\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\r\n        // Check that request url is not empty.\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            this.browserRequestLogger.infoPii(`Navigate to: ${requestUrl}`);\r\n            // Open the popup window to requestUrl.\r\n            return this.popupUtils.openPopup(requestUrl, params);\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.browserRequestLogger.error(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Monitors a window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - milliseconds until timeout\r\n     */\r\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\r\n        return this.popupUtils.monitorPopupForSameOrigin(popupWindow).then(() => {\r\n            const contentHash = popupWindow.location.hash;\r\n            BrowserUtils.clearHash(popupWindow);\r\n            this.popupUtils.cleanPopup(popupWindow);\r\n\r\n            if (!contentHash) {\r\n                throw BrowserAuthError.createEmptyHashError(popupWindow.location.href);\r\n            }\r\n\r\n            if (UrlString.hashContainsKnownProperties(contentHash)) {\r\n                return contentHash;\r\n            } else {\r\n                throw BrowserAuthError.createHashDoesNotContainKnownPropertiesError();\r\n            }\r\n        }\r\n        );\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, ThrottlingUtils, CommonEndSessionRequest, UrlString, AuthError } from \"@azure/msal-common\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\r\nimport { PopupWindowAttributes, PopupUtils } from \"../utils/PopupUtils\";\r\nimport { EventType } from \"../event/EventType\";\r\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\r\nimport { PopupHandler, PopupParams } from \"../interaction_handler/PopupHandler\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\n\r\nexport class PopupClient extends StandardInteractionClient {\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request \r\n     */\r\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\r\n        try {\r\n            const validRequest = this.preflightInteractiveRequest(request, InteractionType.Popup);\r\n            const popupName = PopupUtils.generatePopupName(this.config.auth.clientId, validRequest);\r\n            const popupWindowAttributes = request.popupWindowAttributes || {};\r\n\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes);\r\n            } else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                const popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\r\n                return this.acquireTokenPopupAsync(validRequest, popupName, popupWindowAttributes, popup);\r\n            }\r\n        } catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest \r\n     */\r\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n\r\n            const popupName = PopupUtils.generateLogoutPopupName(this.config.auth.clientId, validLogoutRequest);\r\n            const authority = logoutRequest && logoutRequest.authority;\r\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            const popupWindowAttributes = logoutRequest?.popupWindowAttributes || {};\r\n\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, undefined, mainWindowRedirectUri);\r\n            } else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                const popup = PopupUtils.openSizedPopup(\"about:blank\", popupName, popupWindowAttributes, this.logger);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupName, popupWindowAttributes, authority, popup, mainWindowRedirectUri);\r\n            }\r\n        } catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param popup\r\n     * @param popupWindowAttributes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    private async acquireTokenPopupAsync(validRequest: AuthorizationUrlRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, popup?: Window|null): Promise<AuthenticationResult> {\r\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\r\n\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority);\r\n            this.logger.verbose(\"Auth code client created\");\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\r\n\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new PopupHandler(authClient, this.browserStorage, authCodeRequest, this.logger);\r\n\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupParameters: PopupParams = {\r\n                popup,\r\n                popupName,\r\n                popupWindowAttributes\r\n            };\r\n            const popupWindow: Window = interactionHandler.initiateAuthRequest(navigateUrl, popupParameters);\r\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\r\n\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const hash = await interactionHandler.monitorPopupForHash(popupWindow);\r\n            const state = this.validateAndExtractStateFromHash(hash, InteractionType.Popup, validRequest.correlationId);\r\n\r\n            // Remove throttle if it exists\r\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n\r\n            // Handle response from hash string.\r\n            const result = await interactionHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient);\r\n\r\n            return result;\r\n        } catch (e) {            \r\n            if (popup) {\r\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                popup.close();\r\n            }\r\n\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            this.browserStorage.cleanRequestByState(validRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param validRequest \r\n     * @param popupName \r\n     * @param requestAuthority\r\n     * @param popup \r\n     * @param mainWindowRedirectUri \r\n     * @param popupWindowAttributes \r\n     */\r\n    private async logoutPopupAsync(validRequest: CommonEndSessionRequest, popupName: string, popupWindowAttributes: PopupWindowAttributes, requestAuthority?: string, popup?: Window|null, mainWindowRedirectUri?: string): Promise<void> {\r\n        this.logger.verbose(\"logoutPopupAsync called\");\r\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\r\n        \r\n        try {\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validRequest.account);\r\n\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            // Initialize the client\r\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, requestAuthority);\r\n            this.logger.verbose(\"Auth code client created\");\r\n\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\r\n\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\r\n\r\n            const popupUtils = new PopupUtils(this.browserStorage, this.logger);\r\n            // Open the popup window to requestUrl.\r\n            const popupWindow = popupUtils.openPopup(logoutUri, {popupName, popupWindowAttributes, popup});\r\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, {popupWindow}, null);\r\n\r\n            try {\r\n                // Don't care if this throws an error (User Cancelled)\r\n                await popupUtils.monitorPopupForSameOrigin(popupWindow);\r\n                this.logger.verbose(\"Popup successfully redirected to postLogoutRedirectUri\");\r\n            } catch (e) {\r\n                this.logger.verbose(`Error occurred while monitoring popup for same origin. Session on server may remain active. Error: ${e}`);\r\n            }\r\n\r\n            popupUtils.cleanPopup(popupWindow);\r\n\r\n            if (mainWindowRedirectUri) {\r\n                const navigationOptions: NavigationOptions = {\r\n                    apiId: ApiId.logoutPopup,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: false\r\n                };\r\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, BrowserUtils.getCurrentUri());\r\n\r\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                this.logger.verbosePii(`Redirecing main window to: ${absoluteUrl}`);\r\n                this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n            } else {\r\n                this.logger.verbose(\"No main window navigation requested\");\r\n            }\r\n\r\n        } catch (e) {\r\n            if (popup) {\r\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n                popup.close();\r\n            }\r\n\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n            \r\n            this.browserStorage.setInteractionInProgress(false);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        }\r\n\r\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthorizationCodeClient, StringUtils, CommonAuthorizationCodeRequest, ICrypto, AuthenticationResult, ThrottlingUtils, Authority, INetworkModule, ClientAuthError, Logger } from \"@azure/msal-common\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\r\n\r\nexport type RedirectParams = InteractionParams & {\r\n    navigationClient: INavigationClient;\r\n    redirectTimeout: number;\r\n    redirectStartPage: string;\r\n    onRedirectNavigate?: (url: string) => void | boolean;\r\n};\r\n\r\nexport class RedirectHandler extends InteractionHandler {\r\n\r\n    private browserCrypto: ICrypto;\r\n\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger, browserCrypto: ICrypto) {\r\n        super(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger);\r\n        this.browserCrypto = browserCrypto;\r\n    }\r\n\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    async initiateAuthRequest(requestUrl: string, params: RedirectParams): Promise<void> {\r\n        this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n        // Navigate if valid URL\r\n        if (!StringUtils.isEmpty(requestUrl)) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (params.redirectStartPage) {\r\n                this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\r\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\r\n            }\r\n\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\r\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest, this.browserCrypto);\r\n            this.browserRequestLogger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\r\n            const navigationOptions: NavigationOptions = {\r\n                apiId: ApiId.acquireTokenRedirect,\r\n                timeout: params.redirectTimeout,\r\n                noHistory: false\r\n            };\r\n            \r\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\r\n            if (typeof params.onRedirectNavigate === \"function\") {\r\n                this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\r\n                const navigate = params.onRedirectNavigate(requestUrl);\r\n\r\n                // Returning false from onRedirectNavigate will stop navigation\r\n                if (navigate !== false) {\r\n                    this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\r\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                    return;\r\n                } else {\r\n                    this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\r\n                    return;\r\n                }\r\n            } else {\r\n                // Navigate window to request URL\r\n                this.browserRequestLogger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\r\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                return;\r\n            }\r\n        } else {\r\n            // Throw error if request URL is empty.\r\n            this.browserRequestLogger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(locationHash: string, state: string, authority: Authority, networkModule: INetworkModule, clientId?: string): Promise<AuthenticationResult> {\r\n        this.browserRequestLogger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n\r\n        // Check that location hash isn't empty.\r\n        if (StringUtils.isEmpty(locationHash)) {\r\n            throw BrowserAuthError.createEmptyHashError(locationHash);\r\n        }\r\n\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n\r\n        // Handle code response.\r\n        const stateKey = this.browserStorage.generateStateKey(state);\r\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n        if (!requestState) {\r\n            throw ClientAuthError.createStateNotFoundError(\"Cached State\");\r\n        }\r\n        const authCodeResponse = this.authModule.handleFragmentResponse(locationHash, requestState);\r\n\r\n        // Get cached items\r\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await this.updateTokenEndpointAuthority(authCodeResponse.cloud_instance_host_name, authority, networkModule);\r\n        }\r\n\r\n        authCodeResponse.nonce = cachedNonce || undefined;\r\n        authCodeResponse.state = requestState;\r\n\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        } else {\r\n            const cachedCcsCred = this.checkCcsCredentials();\r\n            if (cachedCcsCred) {\r\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n            }\r\n        }\r\n\r\n        // Remove throttle if it exists\r\n        if (clientId) {\r\n            ThrottlingUtils.removeThrottle(this.browserStorage, clientId, this.authCodeRequest);\r\n        }\r\n\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse);\r\n\r\n        this.browserStorage.cleanRequestByState(state);\r\n        return tokenResponse;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, CommonAuthorizationCodeRequest, AuthorizationCodeClient, UrlString, AuthError, ServerTelemetryManager } from \"@azure/msal-common\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\r\nimport { ApiId, InteractionType, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport { EventType } from \"../event/EventType\";\r\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\n\r\nexport class RedirectClient extends StandardInteractionClient {   \r\n    /**\r\n     * Redirects the page to the /authorize endpoint of the IDP\r\n     * @param request \r\n     */\r\n    async acquireToken(request: RedirectRequest): Promise<void> {\r\n        const validRequest: AuthorizationUrlRequest = this.preflightInteractiveRequest(request, InteractionType.Redirect);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\r\n\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(validRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, validRequest.authority);\r\n            this.logger.verbose(\"Auth code client created\");\r\n\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.browserCrypto);\r\n\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl(validRequest);\r\n\r\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\r\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\r\n\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\r\n                navigationClient: this.navigationClient,\r\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\r\n                redirectStartPage: redirectStartPage,\r\n                onRedirectNavigate: request.onRedirectNavigate\r\n            });\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            this.browserStorage.cleanRequestByState(validRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     * @param hash\r\n     */\r\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\r\n        try {\r\n            if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n                return null;\r\n            }\r\n\r\n            const responseHash = this.getRedirectResponseHash(hash || window.location.hash);\r\n            if (!responseHash) {\r\n                // Not a recognized server response hash or hash not associated with a redirect request\r\n                this.logger.info(\"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\");\r\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\r\n                return null;\r\n            }\r\n\r\n            let state: string;\r\n            try {\r\n                state = this.validateAndExtractStateFromHash(responseHash, InteractionType.Redirect);\r\n                BrowserUtils.clearHash(window);\r\n                this.logger.verbose(\"State extracted from hash\");\r\n            } catch (e) {\r\n                this.logger.info(`handleRedirectPromise was unable to extract state due to: ${e}`);\r\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\r\n                return null;\r\n            }\r\n\r\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\r\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || \"\";\r\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\r\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\r\n\r\n            if (loginRequestUrlNormalized === currentUrlNormalized && this.config.auth.navigateToLoginRequestUrl) {\r\n                // We are on the page we need to navigate to - handle hash\r\n                this.logger.verbose(\"Current page is loginRequestUrl, handling hash\");\r\n                const handleHashResult = await this.handleHash(responseHash, state, serverTelemetryManager);\r\n\r\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                    // Replace current hash with non-msal hash, if present\r\n                    BrowserUtils.replaceHash(loginRequestUrl);\r\n                }\r\n\r\n                return handleHashResult;\r\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling hash\");\r\n                return this.handleHash(responseHash, state, serverTelemetryManager);\r\n            } else if (!BrowserUtils.isInIframe()) {\r\n                /*\r\n                 * Returned from authority using redirect - need to perform navigation before processing response\r\n                 * Cache the hash to be retrieved after the next redirect\r\n                 */\r\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseHash, true);\r\n                const navigationOptions: NavigationOptions = {\r\n                    apiId: ApiId.handleRedirectPromise,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: true\r\n                };\r\n\r\n                /**\r\n                 * Default behavior is to redirect to the start page and not process the hash now. \r\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\r\n                 */  \r\n                let processHashOnRedirect: boolean = true;\r\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                    // Redirect to home page if login request url is null (real null or the string null)\r\n                    const homepage = BrowserUtils.getHomepage();\r\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\r\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(homepage, navigationOptions);\r\n                } else {\r\n                    // Navigate to page that initiated the redirect request\r\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\r\n                    processHashOnRedirect = await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\r\n                }\r\n\r\n                // If navigateInternal implementation returns false, handle the hash now\r\n                if (!processHashOnRedirect) {\r\n                    return this.handleHash(responseHash, state, serverTelemetryManager);\r\n                }\r\n            }\r\n\r\n            return null;\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @param hash\r\n     */\r\n    private getRedirectResponseHash(hash: string): string | null {\r\n        this.logger.verbose(\"getRedirectResponseHash called\");\r\n        // Get current location hash from window or cache.\r\n        const isResponseHash: boolean = UrlString.hashContainsKnownProperties(hash);\r\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n\r\n        if (isResponseHash) {\r\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\r\n            return hash;\r\n        }\r\n\r\n        this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\r\n        return cachedHash;\r\n    }\r\n\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param hash\r\n     * @param state\r\n     */\r\n    private async handleHash(hash: string, state: string, serverTelemetryManager: ServerTelemetryManager): Promise<AuthenticationResult> {\r\n        const cachedRequest = this.browserStorage.getCachedRequest(state, this.browserCrypto);\r\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\r\n\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\r\n        if (!currentAuthority) {\r\n            throw BrowserAuthError.createNoCachedAuthorityError();\r\n        }\r\n\r\n        const authClient = await this.createAuthCodeClient(serverTelemetryManager, currentAuthority);\r\n        this.logger.verbose(\"Auth code client created\");\r\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.browserCrypto);\r\n        return await interactionHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient, this.config.auth.clientId);\r\n    }\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\r\n\r\n        try {\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\r\n                        \r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validLogoutRequest.account);\r\n            \r\n            const navigationOptions: NavigationOptions = {\r\n                apiId: ApiId.logout,\r\n                timeout: this.config.system.redirectNavigationTimeout,\r\n                noHistory: false\r\n            };\r\n            const authClient = await this.createAuthCodeClient(serverTelemetryManager, logoutRequest && logoutRequest.authority);\r\n            this.logger.verbose(\"Auth code client created\");\r\n\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri: string = authClient.getLogoutUri(validLogoutRequest);\r\n            \r\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\r\n            // Check if onRedirectNavigate is implemented, and invoke it if so\r\n            if (logoutRequest && typeof logoutRequest.onRedirectNavigate === \"function\") {\r\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\r\n\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\r\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                    return;\r\n                } else {\r\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\r\n                }\r\n            } else {\r\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                return;\r\n            }\r\n        } catch(e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n\r\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\r\n    }\r\n\r\n    /**\r\n     * Use to get the redirectStartPage either from request or use current window\r\n     * @param requestStartPage\r\n     */\r\n    protected getRedirectStartPage(requestStartPage?: string): string {\r\n        const redirectStartPage = requestStartPage || window.location.href;\r\n        return UrlString.getAbsoluteUrl(redirectStartPage, BrowserUtils.getCurrentUri());\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { UrlString, StringUtils, CommonAuthorizationCodeRequest, AuthorizationCodeClient, Constants, Logger } from \"@azure/msal-common\";\r\nimport { InteractionHandler } from \"./InteractionHandler\";\r\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from \"../config/Configuration\";\r\n\r\nexport class SilentHandler extends InteractionHandler {\r\n\r\n    private navigateFrameWait: number;\r\n    constructor(authCodeModule: AuthorizationCodeClient, storageImpl: BrowserCacheManager, authCodeRequest: CommonAuthorizationCodeRequest, browserRequestLogger: Logger, navigateFrameWait: number) {\r\n        super(authCodeModule, storageImpl, authCodeRequest, browserRequestLogger);\r\n        this.navigateFrameWait = navigateFrameWait;\r\n    }\r\n\r\n    /**\r\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n     * @param urlNavigate\r\n     * @param userRequestScopes\r\n     */\r\n    async initiateAuthRequest(requestUrl: string): Promise<HTMLIFrameElement> {\r\n        if (StringUtils.isEmpty(requestUrl)) {\r\n            // Throw error if request URL is empty.\r\n            this.browserRequestLogger.info(\"Navigate url is empty\");\r\n            throw BrowserAuthError.createEmptyNavigationUriError();\r\n        }\r\n\r\n        return this.navigateFrameWait ? await this.loadFrame(requestUrl) : this.loadFrameSync(requestUrl);\r\n    }\r\n\r\n    /**\r\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n     * @param iframe\r\n     * @param timeout\r\n     */\r\n    monitorIframeForHash(iframe: HTMLIFrameElement, timeout: number): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\r\n                this.browserRequestLogger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\r\n            }\r\n\r\n            /*\r\n             * Polling for iframes can be purely timing based,\r\n             * since we don't need to account for interaction.\r\n             */\r\n            const nowMark = window.performance.now();\r\n            const timeoutMark = nowMark + timeout;\r\n\r\n            const intervalId = setInterval(() => {\r\n                if (window.performance.now() > timeoutMark) {\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    reject(BrowserAuthError.createMonitorIframeTimeoutError());\r\n                    return;\r\n                }\r\n\r\n                let href: string = Constants.EMPTY_STRING;\r\n                const contentWindow = iframe.contentWindow;\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = contentWindow ? contentWindow.location.href : Constants.EMPTY_STRING;\r\n                } catch (e) {}\r\n\r\n                if (StringUtils.isEmpty(href)) {\r\n                    return;\r\n                }\r\n\r\n                const contentHash = contentWindow ? contentWindow.location.hash: Constants.EMPTY_STRING;\r\n                if (UrlString.hashContainsKnownProperties(contentHash)) {\r\n                    // Success case\r\n                    this.removeHiddenIframe(iframe);\r\n                    clearInterval(intervalId);\r\n                    resolve(contentHash);\r\n                    return;\r\n                }\r\n            }, BrowserConstants.POLL_INTERVAL_MS);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads iframe with authorization endpoint URL\r\n     * @ignore\r\n     */\r\n    private loadFrame(urlNavigate: string): Promise<HTMLIFrameElement> {\r\n        /*\r\n         * This trick overcomes iframe navigation in IE\r\n         * IE does not load the page consistently in iframe\r\n         */\r\n\r\n        return new Promise((resolve, reject) => {\r\n            const frameHandle = this.createHiddenIframe();\r\n\r\n            setTimeout(() => {\r\n                if (!frameHandle) {\r\n                    reject(\"Unable to load iframe\");\r\n                    return;\r\n                }\r\n\r\n                frameHandle.src = urlNavigate;\r\n\r\n                resolve(frameHandle);\r\n            }, this.navigateFrameWait);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n     * @param urlNavigate\r\n     * @param frameName\r\n     * @param logger\r\n     */\r\n    private loadFrameSync(urlNavigate: string): HTMLIFrameElement{\r\n        const frameHandle = this.createHiddenIframe();\r\n\r\n        frameHandle.src = urlNavigate;\r\n\r\n        return frameHandle;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n     * @ignore\r\n     */\r\n    private createHiddenIframe(): HTMLIFrameElement {\r\n        const authFrame = document.createElement(\"iframe\");\r\n\r\n        authFrame.style.visibility = \"hidden\";\r\n        authFrame.style.position = \"absolute\";\r\n        authFrame.style.width = authFrame.style.height = \"0\";\r\n        authFrame.style.border = \"0\";\r\n        authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\r\n\r\n        return authFrame;\r\n    }\r\n\r\n    /**\r\n     * @hidden\r\n     * Removes a hidden iframe from the page.\r\n     * @ignore\r\n     */\r\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\r\n        if (document.body === iframe.parentNode) {\r\n            document.body.removeChild(iframe);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, ICrypto, Logger, StringUtils, PromptValue, CommonAuthorizationCodeRequest, AuthorizationCodeClient, AuthError } from \"@azure/msal-common\";\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\r\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\r\nimport { BrowserConfiguration } from \"../config/Configuration\";\r\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\r\nimport { EventHandler } from \"../event/EventHandler\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\r\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\n\r\nexport class SilentIframeClient extends StandardInteractionClient {\r\n    private apiId: ApiId;\r\n\r\n    constructor(config: BrowserConfiguration, storageImpl: BrowserCacheManager, browserCrypto: ICrypto, logger: Logger, eventHandler: EventHandler, navigationClient: INavigationClient, apiId: ApiId, correlationId?: string) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, correlationId);\r\n        this.apiId = apiId;\r\n    }\r\n    \r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none\r\n     * @param request \r\n     */\r\n    async acquireToken(request: SsoSilentRequest): Promise<AuthenticationResult> {\r\n        this.logger.verbose(\"acquireTokenByIframe called\");\r\n        // Check that we have some SSO data\r\n        if (StringUtils.isEmpty(request.loginHint) && StringUtils.isEmpty(request.sid) && (!request.account || StringUtils.isEmpty(request.account.username))) {\r\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\r\n        }\r\n\r\n        // Check that prompt is set to none, throw error if it is set to anything else.\r\n        if (request.prompt && request.prompt !== PromptValue.NONE) {\r\n            throw BrowserAuthError.createSilentPromptValueError(request.prompt);\r\n        }\r\n\r\n        // Create silent request\r\n        const silentRequest: AuthorizationUrlRequest = this.initializeAuthorizationRequest({\r\n            ...request,\r\n            prompt: PromptValue.NONE\r\n        }, InteractionType.Silent);\r\n\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest: CommonAuthorizationCodeRequest = await this.initializeAuthorizationCodeRequest(silentRequest);\r\n\r\n            // Initialize the client\r\n            const authClient: AuthorizationCodeClient = await this.createAuthCodeClient(serverTelemetryManager, silentRequest.authority);\r\n            this.logger.verbose(\"Auth code client created\");\r\n\r\n            // Create authorize request url\r\n            const navigateUrl = await authClient.getAuthCodeUrl(silentRequest);\r\n\r\n            return await this.silentTokenHelper(navigateUrl, authCodeRequest, authClient, this.logger);\r\n        } catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            this.browserStorage.cleanRequestByState(silentRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout(): Promise<void> {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\r\n    }\r\n\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    private async silentTokenHelper(navigateUrl: string, authCodeRequest: CommonAuthorizationCodeRequest, authClient: AuthorizationCodeClient, browserRequestLogger: Logger): Promise<AuthenticationResult> {\r\n        // Create silent handler\r\n        const silentHandler = new SilentHandler(authClient, this.browserStorage, authCodeRequest, browserRequestLogger, this.config.system.navigateFrameWait);\r\n        // Get the frame handle for the silent request\r\n        const msalFrame = await silentHandler.initiateAuthRequest(navigateUrl);\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const hash = await silentHandler.monitorIframeForHash(msalFrame, this.config.system.iframeHashTimeout);\r\n        const state = this.validateAndExtractStateFromHash(hash, InteractionType.Silent, authCodeRequest.correlationId);\r\n\r\n        // Handle response from hash string\r\n        return silentHandler.handleCodeResponse(hash, state, authClient.authority, this.networkClient);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\r\nimport { CommonSilentFlowRequest, AuthenticationResult, ServerTelemetryManager, RefreshTokenClient, AuthError } from \"@azure/msal-common\";\r\nimport { ApiId } from \"../utils/BrowserConstants\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\nexport class SilentRefreshClient extends StandardInteractionClient {\r\n    /**\r\n     * Exchanges the refresh token for new tokens\r\n     * @param request \r\n     */\r\n    async acquireToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\r\n        const silentRequest: CommonSilentFlowRequest = {\r\n            ...request,\r\n            ...this.initializeBaseRequest(request)\r\n        };\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\r\n        const refreshTokenClient = await this.createRefreshTokenClient(serverTelemetryManager, silentRequest.authority);\r\n        this.logger.verbose(\"Refresh token client created\");\r\n        \r\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n        return refreshTokenClient.acquireTokenByRefreshToken(silentRequest).catch(e => {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n            }\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout(): Promise<void> {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\r\n    }\r\n\r\n    /**\r\n     * Creates a Refresh Client with the given authority, or the default authority.\r\n     * @param serverTelemetryManager\r\n     * @param authorityUrl\r\n     */\r\n    protected async createRefreshTokenClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string): Promise<RefreshTokenClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl);\r\n        return new RefreshTokenClient(clientConfig);\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AccessTokenEntity, ICrypto, IdTokenEntity, Logger, ScopeSet, Authority, AuthorityOptions, ExternalTokenResponse, AccountEntity, AuthToken } from \"@azure/msal-common\";\r\nimport { BrowserConfiguration } from \"../config/Configuration\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\r\nimport { ITokenCache } from \"./ITokenCache\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\n\r\nexport type LoadTokenOptions = {\r\n    clientInfo?: string,\r\n    extendedExpiresOn?: number\r\n};\r\n\r\n/**\r\n * Token cache manager\r\n */\r\nexport class TokenCache implements ITokenCache {\r\n    // Flag to indicate if in browser environment\r\n    public isBrowserEnvironment: boolean;\r\n    // Input configuration by developer/user\r\n    protected config: BrowserConfiguration;\r\n    // Browser cache storage\r\n    private storage: BrowserCacheManager;\r\n    // Logger\r\n    private logger: Logger;\r\n    // Crypto class\r\n    private cryptoObj: ICrypto;\r\n\r\n    constructor(configuration: BrowserConfiguration, storage: BrowserCacheManager, logger: Logger, cryptoObj: ICrypto) {\r\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\r\n        this.config = configuration;\r\n        this.storage = storage;\r\n        this.logger = logger;\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    \r\n    // Move getAllAccounts here and cache utility APIs\r\n\r\n    /**\r\n     * API to load tokens to msal-browser cache. \r\n     * @param request \r\n     * @param response\r\n     * @param options\r\n     */\r\n    loadExternalTokens(request: SilentRequest, response: ExternalTokenResponse, options: LoadTokenOptions): void {\r\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\r\n\r\n        if (!response.id_token) {\r\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes id token.\");\r\n        }\r\n\r\n        if (request.account) {\r\n            this.loadIdToken(response.id_token, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\r\n            this.loadAccessToken(request, response, request.account.homeAccountId, request.account.environment, request.account.tenantId, options);\r\n        } else if (request.authority) {\r\n\r\n            const authorityOptions: AuthorityOptions = {\r\n                protocolMode: this.config.auth.protocolMode,\r\n                knownAuthorities: this.config.auth.knownAuthorities,\r\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n                authorityMetadata: this.config.auth.authorityMetadata\r\n            };\r\n            const authority = new Authority(request.authority, this.config.system.networkClient, this.storage, authorityOptions);\r\n\r\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\r\n            if (options.clientInfo) {\r\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\r\n                this.loadIdToken(response.id_token, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\r\n                this.loadAccessToken(request, response, options.clientInfo, authority.hostnameAndPort, authority.tenant, options);\r\n            } else if (response.client_info) {\r\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\r\n                this.loadIdToken(response.id_token, response.client_info, authority.hostnameAndPort, authority.tenant, options);\r\n                this.loadAccessToken(request, response, response.client_info, authority.hostnameAndPort, authority.tenant, options);\r\n            } else {\r\n                throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide clientInfo in the response or options.\");\r\n            }\r\n        } else {\r\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide a request with an account or a request with authority.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to load id tokens to msal-browser cache\r\n     * @param idToken \r\n     * @param homeAccountId \r\n     * @param environment \r\n     * @param tenantId \r\n     * @param options \r\n     */\r\n    private loadIdToken(idToken: string, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\r\n\r\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(homeAccountId, environment, idToken, this.config.auth.clientId, tenantId);\r\n        const idAuthToken = new AuthToken(idToken, this.cryptoObj);\r\n        const accountEntity = options.clientInfo ?\r\n            AccountEntity.createAccount(options.clientInfo, homeAccountId, idAuthToken, undefined, undefined, undefined, undefined, environment) :\r\n            AccountEntity.createGenericAccount(homeAccountId, idAuthToken, undefined, undefined, undefined, undefined, environment);\r\n\r\n        if (this.isBrowserEnvironment) {\r\n            this.logger.verbose(\"TokenCache - loading id token\");\r\n            this.storage.setAccount(accountEntity);\r\n            this.storage.setIdTokenCredential(idTokenEntity);\r\n        } else {\r\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Helper function to load access tokens to msal-browser cache\r\n     * @param request \r\n     * @param response \r\n     * @param options \r\n     * @param homeAccountId \r\n     * @param environment \r\n     * @param tenantId \r\n     * @returns \r\n     */\r\n    private loadAccessToken(request: SilentRequest, response: ExternalTokenResponse, homeAccountId: string, environment: string, tenantId: string, options: LoadTokenOptions): void {\r\n\r\n        if (!response.access_token) {\r\n            this.logger.verbose(\"TokenCache - No access token provided for caching\");\r\n            return;\r\n        }\r\n\r\n        if (!response.expires_in) {\r\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please ensure server response includes expires_in value.\");\r\n        }\r\n\r\n        if (!options.extendedExpiresOn) {\r\n            throw BrowserAuthError.createUnableToLoadTokenError(\"Please provide an extendedExpiresOn value in the options.\");\r\n        }\r\n        \r\n        const scopes = new ScopeSet(request.scopes).printScopes();\r\n        const expiresOn = response.expires_in;\r\n        const extendedExpiresOn = options.extendedExpiresOn;\r\n\r\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes, expiresOn, extendedExpiresOn, this.cryptoObj);\r\n\r\n        if (this.isBrowserEnvironment) {\r\n            this.logger.verbose(\"TokenCache - loading access token\");\r\n            this.storage.setAccessTokenCredential(accessTokenEntity);\r\n        } else {\r\n            throw BrowserAuthError.createUnableToLoadTokenError(\"loadExternalTokens is designed to work in browser environments only.\");\r\n        }\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CryptoOps } from \"../crypto/CryptoOps\";\r\nimport { StringUtils, ServerError, InteractionRequiredAuthError, AccountInfo, Constants, INetworkModule, AuthenticationResult, Logger, CommonSilentFlowRequest, ICrypto, DEFAULT_CRYPTO_IMPLEMENTATION } from \"@azure/msal-common\";\r\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from \"../cache/BrowserCacheManager\";\r\nimport { BrowserConfiguration, buildConfiguration, Configuration } from \"../config/Configuration\";\r\nimport { InteractionType, ApiId, BrowserConstants, BrowserCacheLocation, WrapperSKU, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\r\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\nimport { version, name } from \"../packageMetadata\";\r\nimport { EventCallbackFunction } from \"../event/EventMessage\";\r\nimport { EventType } from \"../event/EventType\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { EventHandler } from \"../event/EventHandler\";\r\nimport { PopupClient } from \"../interaction_client/PopupClient\";\r\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\r\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\r\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\r\nimport { TokenCache } from \"../cache/TokenCache\";\r\nimport { ITokenCache } from \"../cache/ITokenCache\";\r\n\r\nexport abstract class ClientApplication {\r\n\r\n    // Crypto interface implementation\r\n    protected readonly browserCrypto: ICrypto;\r\n\r\n    // Storage interface implementation\r\n    protected readonly browserStorage: BrowserCacheManager;\r\n\r\n    // Network interface implementation\r\n    protected readonly networkClient: INetworkModule;\r\n\r\n    // Navigation interface implementation\r\n    protected navigationClient: INavigationClient;\r\n\r\n    // Input configuration by developer/user\r\n    protected config: BrowserConfiguration;\r\n\r\n    // Token cache implementation\r\n    private tokenCache: TokenCache;\r\n\r\n    // Logger\r\n    protected logger: Logger;\r\n\r\n    // Flag to indicate if in browser environment\r\n    protected isBrowserEnvironment: boolean;\r\n\r\n    protected eventHandler: EventHandler;\r\n\r\n    // Redirect Response Object\r\n    private redirectResponse: Map<string, Promise<AuthenticationResult | null>>;\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(configuration: Configuration) {\r\n        /*\r\n         * If loaded in an environment where window is not available,\r\n         * set internal flag to false so that further requests fail.\r\n         * This is to support server-side rendering environments.\r\n         */\r\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\r\n        // Set the configuration.\r\n        this.config = buildConfiguration(configuration, this.isBrowserEnvironment);\r\n\r\n        // Initialize logger\r\n        this.logger = new Logger(this.config.system.loggerOptions, name, version);\r\n        \r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        \r\n        // Initialize the navigation client class.\r\n        this.navigationClient = this.config.system.navigationClient;\r\n        \r\n        // Initialize redirectResponse Map\r\n        this.redirectResponse = new Map();\r\n        \r\n        // Initialize the crypto class.\r\n        this.browserCrypto = this.isBrowserEnvironment ? new CryptoOps() : DEFAULT_CRYPTO_IMPLEMENTATION;\r\n\r\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\r\n\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.isBrowserEnvironment ? \r\n            new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger) : \r\n            DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger);\r\n\r\n        // Initialize the token cache\r\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\r\n    }\r\n\r\n    // #region Redirect Flow\r\n\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null> {\r\n        this.logger.verbose(\"handleRedirectPromise called\");\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        if (this.isBrowserEnvironment) {\r\n            /**\r\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\r\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\r\n             * several times concurrently.\r\n             */\r\n            const redirectResponseKey = hash || Constants.EMPTY_STRING;\r\n            let response = this.redirectResponse.get(redirectResponseKey);\r\n            if (typeof response === \"undefined\") {\r\n                this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\r\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\r\n                const correlationId = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || \"\";\r\n                const redirectClient = new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, correlationId);\r\n                response = redirectClient.handleRedirectPromise(hash)\r\n                    .then((result: AuthenticationResult | null) => {\r\n                        if (result) {\r\n                            // Emit login event if number of accounts change\r\n                            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n                            if (isLoggingIn) {\r\n                                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\r\n                                this.logger.verbose(\"handleRedirectResponse returned result, login success\");\r\n                            } else {\r\n                                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\r\n                                this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\r\n                            }\r\n                        }\r\n                        this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\r\n\r\n                        return result;\r\n                    })\r\n                    .catch((e) => {\r\n                    // Emit login event if there is an account\r\n                        if (loggedInAccounts.length > 0) {\r\n                            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\r\n                        } else {\r\n                            this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\r\n                        }\r\n                        this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\r\n\r\n                        throw e;\r\n                    });\r\n                this.redirectResponse.set(redirectResponseKey, response);\r\n            } else {\r\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\r\n            }\r\n            \r\n            return response;\r\n        }\r\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\r\n        // Preflight request\r\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\r\n        this.logger.verbose(\"acquireTokenRedirect called\");\r\n\r\n        // If logged in, emit acquire token events\r\n        const isLoggedIn = this.getAllAccounts().length > 0;\r\n        if (isLoggedIn) {\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\r\n        } else {\r\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\r\n        }\r\n        \r\n        const redirectClient = new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\r\n        return redirectClient.acquireToken(request).catch((e) => {\r\n            // If logged in, emit acquire token events\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\r\n            } else {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Popup Flow\r\n\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\r\n        try {\r\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\r\n            this.logger.verbose(\"acquireTokenPopup called\", request.correlationId);\r\n        } catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n\r\n        // If logged in, emit acquire token events\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        if (loggedInAccounts.length > 0) {\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\r\n        } else {\r\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\r\n        }\r\n\r\n        const popupClient = new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\r\n\r\n        return popupClient.acquireToken(request).then((result) => {\r\n            // If logged in, emit acquire token events\r\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n            if (isLoggingIn) {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\r\n            } else {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\r\n            }\r\n\r\n            return result;\r\n        }).catch((e) => {\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\r\n            } else {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\r\n            }\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Silent Flow\r\n\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\r\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\r\n        this.logger.verbose(\"ssoSilent called\", request.correlationId);\r\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, request);\r\n\r\n        try {\r\n            const silentIframeClient = new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, request.correlationId);\r\n            const silentTokenResult = await silentIframeClient.acquireToken(request);\r\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, silentTokenResult);\r\n            return silentTokenResult;\r\n        } catch (e) {\r\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this function to obtain a token before every call to the API / resource provider\r\n     *\r\n     * MSAL return's a cached token when available\r\n     * Or it send's a request to the STS to obtain a new token using a refresh token.\r\n     *\r\n     * @param {@link SilentRequest}\r\n     *\r\n     * To renew idToken, please pass clientId as the only scope in the Authentication Parameters\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    protected async acquireTokenByRefreshToken(request: CommonSilentFlowRequest): Promise<AuthenticationResult> {\r\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, request);\r\n        // block the reload if it occurred inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n\r\n        const silentRefreshClient = new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, request.correlationId);\r\n\r\n        return silentRefreshClient.acquireToken(request).catch(e => {\r\n            const isServerError = e instanceof ServerError;\r\n            const isInteractionRequiredError = e instanceof InteractionRequiredAuthError;\r\n            const isInvalidGrantError = (e.errorCode === BrowserConstants.INVALID_GRANT_ERROR);\r\n            if (isServerError && isInvalidGrantError && !isInteractionRequiredError) {\r\n                this.logger.verbose(\"Refresh token expired or invalid, attempting acquire token by iframe\", request.correlationId);\r\n\r\n                const silentIframeClient = new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenSilent_authCode);\r\n                return silentIframeClient.acquireToken(request);\r\n            }\r\n            throw e;\r\n        });\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Logout\r\n\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest \r\n     * @deprecated\r\n     */\r\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\");\r\n        return this.logoutRedirect(logoutRequest);\r\n    }\r\n\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\r\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\r\n        const redirectClient = new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, logoutRequest?.correlationId);\r\n        return redirectClient.logout(logoutRequest);\r\n    }\r\n\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest \r\n     */\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\r\n        try{\r\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\r\n            const popupClient = new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, logoutRequest?.correlationId);\r\n            return popupClient.logout(logoutRequest);\r\n        } catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Account APIs\r\n\r\n    /**\r\n     * Returns all accounts that MSAL currently has data for.\r\n     * (the account object is created at the time of successful login)\r\n     * or empty array when no accounts are found\r\n     * @returns Array of account objects in cache\r\n     */\r\n    getAllAccounts(): AccountInfo[] {\r\n        this.logger.verbose(\"getAllAccounts called\");\r\n        return this.isBrowserEnvironment ? this.browserStorage.getAllAccounts() : [];\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param userName\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(userName: string): AccountInfo|null {\r\n        const allAccounts = this.getAllAccounts();\r\n        if (!StringUtils.isEmpty(userName) && allAccounts && allAccounts.length) {\r\n            this.logger.verbose(\"Account matching username found, returning\");\r\n            this.logger.verbosePii(`Returning signed-in accounts matching username: ${userName}`);\r\n            return allAccounts.filter(accountObj => accountObj.username.toLowerCase() === userName.toLowerCase())[0] || null;\r\n        } else {\r\n            this.logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo|null {\r\n        const allAccounts = this.getAllAccounts();\r\n        if (!StringUtils.isEmpty(homeAccountId) && allAccounts && allAccounts.length) {\r\n            this.logger.verbose(\"Account matching homeAccountId found, returning\");\r\n            this.logger.verbosePii(`Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\r\n            return allAccounts.filter(accountObj => accountObj.homeAccountId === homeAccountId)[0] || null;\r\n        } else {\r\n            this.logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\r\n        const allAccounts = this.getAllAccounts();\r\n        if (!StringUtils.isEmpty(localAccountId) && allAccounts && allAccounts.length) {\r\n            this.logger.verbose(\"Account matching localAccountId found, returning\");\r\n            this.logger.verbosePii(`Returning signed-in accounts matching localAccountId: ${localAccountId}`);\r\n            return allAccounts.filter(accountObj => accountObj.localAccountId === localAccountId)[0] || null;\r\n        } else {\r\n            this.logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account: AccountInfo | null): void {\r\n        this.browserStorage.setActiveAccount(account);\r\n    }\r\n\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount(): AccountInfo | null {\r\n        return this.browserStorage.getActiveAccount();\r\n    }\r\n\r\n    // #endregion\r\n\r\n    // #region Helpers\r\n\r\n    /**\r\n     * Helper to validate app environment before making an auth request\r\n     * * @param interactionType\r\n     */\r\n    protected preflightBrowserEnvironmentCheck(interactionType: InteractionType): void {\r\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\r\n        // Block request if not in browser environment\r\n        BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\r\n\r\n        // Block redirects if in an iframe\r\n        BrowserUtils.blockRedirectInIframe(interactionType, this.config.system.allowRedirectInIframe);\r\n\r\n        // Block auth requests inside a hidden iframe\r\n        BrowserUtils.blockReloadInHiddenIframes();\r\n\r\n        // Block redirectUri opened in a popup from calling MSAL APIs\r\n        BrowserUtils.blockAcquireTokenInPopups();\r\n\r\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\r\n        if (interactionType === InteractionType.Redirect &&\r\n            this.config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\r\n            !this.config.cache.storeAuthStateInCookie) {\r\n            throw BrowserConfigurationAuthError.createInMemoryRedirectUnavailableError();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback: EventCallbackFunction): string | null {\r\n        return this.eventHandler.addEventCallback(callback);\r\n    }\r\n\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId: string): void {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents(): void {\r\n        this.eventHandler.enableAccountStorageEvents();\r\n    }\r\n\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents(): void {\r\n        this.eventHandler.disableAccountStorageEvents();\r\n    }\r\n\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache(): ITokenCache {\r\n        return this.tokenCache;\r\n    }\r\n\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger(): Logger {\r\n        return this.logger;\r\n    }\r\n\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger: Logger): void {\r\n        this.logger = logger;\r\n    }\r\n\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\r\n        // Validate the SKU passed in is one we expect\r\n        this.browserStorage.setWrapperMetadata(sku, version);\r\n    }\r\n\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient: INavigationClient): void {\r\n        this.navigationClient = navigationClient;\r\n    }\r\n    // #endregion\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\r\nimport { CommonSilentFlowRequest, AuthenticationResult, SilentFlowClient, ServerTelemetryManager, AccountInfo } from \"@azure/msal-common\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\nimport { EventType } from \"../event/EventType\";\r\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\r\nimport { BrowserAuthError, BrowserAuthErrorMessage } from \"../error/BrowserAuthError\";\r\n\r\nexport class SilentCacheClient extends StandardInteractionClient {\r\n    /**\r\n     * Returns unexpired tokens from the cache, if available\r\n     * @param silentRequest \r\n     */\r\n    async acquireToken(silentRequest: CommonSilentFlowRequest): Promise<AuthenticationResult> {\r\n        // Telemetry manager only used to increment cacheHits here\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\r\n        const silentAuthClient = await this.createSilentFlowClient(serverTelemetryManager, silentRequest.authority);\r\n        this.logger.verbose(\"Silent auth client created\");\r\n        \r\n        try {\r\n            const cachedToken = await silentAuthClient.acquireCachedToken(silentRequest);\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, cachedToken);\r\n            return cachedToken;\r\n        } catch (error) {\r\n            if (error instanceof BrowserAuthError && error.errorCode === BrowserAuthErrorMessage.signingKeyNotFoundInStorage.code) {\r\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout(): Promise<void> {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(BrowserAuthError.createSilentLogoutUnsupportedError());\r\n    }\r\n\r\n    /**\r\n     * Creates an Silent Flow Client with the given authority, or the default authority.\r\n     * @param serverTelemetryManager\r\n     * @param authorityUrl\r\n     */\r\n    protected async createSilentFlowClient(serverTelemetryManager: ServerTelemetryManager, authorityUrl?: string): Promise<SilentFlowClient> {\r\n        // Create auth module.\r\n        const clientConfig = await this.getClientConfiguration(serverTelemetryManager, authorityUrl);\r\n        return new SilentFlowClient(clientConfig);\r\n    }\r\n\r\n    initializeSilentRequest(request: SilentRequest, account: AccountInfo): CommonSilentFlowRequest {\r\n        return {\r\n            ...request,\r\n            ...this.initializeBaseRequest(request),\r\n            account: account,\r\n            forceRefresh: request.forceRefresh || false\r\n        };\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AccountInfo, AuthenticationResult, RequestThumbprint } from \"@azure/msal-common\";\r\nimport { Configuration } from \"../config/Configuration\";\r\nimport { DEFAULT_REQUEST, InteractionType } from \"../utils/BrowserConstants\";\r\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { ClientApplication } from \"./ClientApplication\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\nimport { EventType } from \"../event/EventType\";\r\nimport { BrowserAuthError } from \"../error/BrowserAuthError\";\r\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\r\n\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nexport class PublicClientApplication extends ClientApplication implements IPublicClientApplication {\r\n\r\n    // Active requests\r\n    private activeSilentTokenRequests: Map<string, Promise<AuthenticationResult>>;\r\n\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(configuration: Configuration) {\r\n        super(configuration);\r\n\r\n        this.activeSilentTokenRequests = new Map();\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\r\n        this.logger.verbose(\"loginRedirect called\");\r\n        return this.acquireTokenRedirect(request || DEFAULT_REQUEST);\r\n    }\r\n\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\r\n        this.logger.verbose(\"loginPopup called\");\r\n        return this.acquireTokenPopup(request || DEFAULT_REQUEST);\r\n    }\r\n\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenSilent(request: SilentRequest): Promise<AuthenticationResult> {\r\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\r\n        this.logger.verbose(\"acquireTokenSilent called\", request.correlationId);\r\n        const account = request.account || this.getActiveAccount();\r\n        if (!account) {\r\n            throw BrowserAuthError.createNoAccountError();\r\n        }\r\n        const thumbprint: RequestThumbprint = {\r\n            clientId: this.config.auth.clientId,\r\n            authority: request.authority || \"\",\r\n            scopes: request.scopes,\r\n            homeAccountIdentifier: account.homeAccountId,\r\n            authenticationScheme: request.authenticationScheme,\r\n            resourceRequestMethod: request.resourceRequestMethod,\r\n            resourceRequestUri: request.resourceRequestUri,\r\n            shrClaims: request.shrClaims\r\n        };\r\n        const silentRequestKey = JSON.stringify(thumbprint);\r\n        const cachedResponse = this.activeSilentTokenRequests.get(silentRequestKey);\r\n        if (typeof cachedResponse === \"undefined\") {\r\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", request.correlationId);\r\n            const response = this.acquireTokenSilentAsync(request, account)\r\n                .then((result) => {\r\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                    return result;\r\n                })\r\n                .catch((error) => {\r\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\r\n                    throw error;\r\n                });\r\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\r\n            return response;\r\n        } else {\r\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", request.correlationId);\r\n            return cachedResponse;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\r\n     * @param {@link (SilentRequest:type)}\r\n     * @param {@link (AccountInfo:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} \r\n     */\r\n    private async acquireTokenSilentAsync(request: SilentRequest, account: AccountInfo): Promise<AuthenticationResult>{\r\n        const silentCacheClient = new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient);\r\n        const silentRequest = silentCacheClient.initializeSilentRequest(request, account);\r\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\r\n\r\n        return silentCacheClient.acquireToken(silentRequest).catch(async () => {\r\n            try {\r\n                const tokenRenewalResult = await this.acquireTokenByRefreshToken(silentRequest);\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, tokenRenewalResult);\r\n                return tokenRenewalResult;\r\n            } catch (tokenRenewalError) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\r\n                throw tokenRenewalError;\r\n            }\r\n        });\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, AccountInfo, Logger } from \"@azure/msal-common\";\r\nimport { RedirectRequest } from \"../request/RedirectRequest\";\r\nimport { PopupRequest } from \"../request/PopupRequest\";\r\nimport { SilentRequest } from \"../request/SilentRequest\";\r\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\r\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\r\nimport { BrowserConfigurationAuthError } from \"../error/BrowserConfigurationAuthError\";\r\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\r\nimport { INavigationClient } from \"../navigation/INavigationClient\";\r\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\r\nimport { ITokenCache } from \"../cache/ITokenCache\";\r\n\r\nexport interface IPublicClientApplication {\r\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult>;\r\n    acquireTokenRedirect(request: RedirectRequest): Promise<void>;\r\n    acquireTokenSilent(silentRequest: SilentRequest): Promise<AuthenticationResult>;\r\n    addEventCallback(callback: Function): string | null;\r\n    removeEventCallback(callbackId: string): void;\r\n    enableAccountStorageEvents(): void;\r\n    disableAccountStorageEvents(): void;\r\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null;\r\n    getAccountByLocalId(localId: string): AccountInfo | null;\r\n    getAccountByUsername(userName: string): AccountInfo | null;\r\n    getAllAccounts(): AccountInfo[];\r\n    handleRedirectPromise(hash?: string): Promise<AuthenticationResult | null>;\r\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult>;\r\n    loginRedirect(request?: RedirectRequest): Promise<void>;\r\n    logout(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void>;\r\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void>;\r\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult>;\r\n    getTokenCache(): ITokenCache;\r\n    getLogger(): Logger;\r\n    setLogger(logger: Logger): void;\r\n    setActiveAccount(account: AccountInfo | null): void;\r\n    getActiveAccount(): AccountInfo | null;\r\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void;\r\n    setNavigationClient(navigationClient: INavigationClient): void;\r\n}\r\n\r\nexport const stubbedPublicClientApplication: IPublicClientApplication = {\r\n    acquireTokenPopup: () => {\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\r\n    },\r\n    acquireTokenRedirect: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    acquireTokenSilent: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    getAllAccounts: () => {\r\n        return [];\t\r\n    },\t\r\n    getAccountByHomeId: () => {\r\n        return null;\r\n    },\r\n    getAccountByUsername: () => {\t\r\n        return null;\t\r\n    },\t\r\n    getAccountByLocalId: () => {\r\n        return null;\r\n    },\r\n    handleRedirectPromise: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    loginPopup: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    loginRedirect: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    logout: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\t\r\n    logoutRedirect: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    logoutPopup: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    ssoSilent: () => {\t\r\n        return Promise.reject(BrowserConfigurationAuthError.createStubPcaInstanceCalledError());\t\r\n    },\r\n    addEventCallback: () => {\r\n        return null;\r\n    },\r\n    removeEventCallback: () => {\r\n        return;\r\n    },\r\n    enableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    disableAccountStorageEvents: () => {\r\n        return;\r\n    },\r\n    getTokenCache: () => {\r\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\r\n    },\r\n    getLogger: () => {\r\n        throw BrowserConfigurationAuthError.createStubPcaInstanceCalledError();\r\n    },\r\n    setLogger: () => {\r\n        return;\r\n    },\r\n    setActiveAccount: () => {\r\n        return;\r\n    },\r\n    getActiveAccount: () => {\r\n        return null;\r\n    },\r\n    initializeWrapperLibrary: () => {\r\n        return;\r\n    },\r\n    setNavigationClient: () => {\r\n        return;\r\n    }\r\n};\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { AuthenticationResult, AuthError, AccountInfo } from \"@azure/msal-common\";\r\nimport { EventType } from \"./EventType\";\r\nimport { InteractionStatus, InteractionType } from \"../utils/BrowserConstants\";\r\nimport { PopupRequest, RedirectRequest, SilentRequest, SsoSilentRequest, EndSessionRequest } from \"..\";\r\n\r\nexport type EventMessage = {\r\n    eventType: EventType;\r\n    interactionType: InteractionType | null;\r\n    payload: EventPayload;\r\n    error: EventError;\r\n    timestamp: number;\r\n};\r\n\r\nexport type PopupEvent = {\r\n    popupWindow: Window;\r\n};\r\n\r\nexport type EventPayload = AccountInfo | PopupRequest | RedirectRequest | SilentRequest | SsoSilentRequest | EndSessionRequest | AuthenticationResult | PopupEvent | null;\r\n\r\nexport type EventError = AuthError | Error | null;\r\n\r\nexport type EventCallbackFunction = (message: EventMessage) => void;\r\n\r\nexport class EventMessageUtils {\r\n\r\n    /**\r\n     * Gets interaction status from event message\r\n     * @param message\r\n     * @param currentStatus\r\n     */\r\n    static getInteractionStatusFromEvent(message: EventMessage, currentStatus?: InteractionStatus): InteractionStatus|null {\r\n        switch (message.eventType) {\r\n            case EventType.LOGIN_START:\r\n                return InteractionStatus.Login;\r\n            case EventType.SSO_SILENT_START:\r\n                return InteractionStatus.SsoSilent;\r\n            case EventType.ACQUIRE_TOKEN_START:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    return InteractionStatus.AcquireToken;\r\n                }\r\n                break;\r\n            case EventType.HANDLE_REDIRECT_START:\r\n                return InteractionStatus.HandleRedirect;\r\n            case EventType.LOGOUT_START:\r\n                return InteractionStatus.Logout;\r\n            case EventType.SSO_SILENT_SUCCESS:\r\n            case EventType.SSO_SILENT_FAILURE:\r\n                if (currentStatus && currentStatus !== InteractionStatus.SsoSilent) {\r\n                    // Prevent this event from clearing any status other than ssoSilent\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGOUT_END:\r\n                if (currentStatus && currentStatus !== InteractionStatus.Logout) {\r\n                    // Prevent this event from clearing any status other than logout\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.HANDLE_REDIRECT_END:\r\n                if (currentStatus && currentStatus !== InteractionStatus.HandleRedirect) {\r\n                    // Prevent this event from clearing any status other than handleRedirect\r\n                    break;\r\n                }\r\n                return InteractionStatus.None;\r\n            case EventType.LOGIN_SUCCESS:\r\n            case EventType.LOGIN_FAILURE:\r\n            case EventType.ACQUIRE_TOKEN_SUCCESS:\r\n            case EventType.ACQUIRE_TOKEN_FAILURE:\r\n                if (message.interactionType === InteractionType.Redirect || message.interactionType === InteractionType.Popup) {\r\n                    if (currentStatus && currentStatus !== InteractionStatus.Login && currentStatus !== InteractionStatus.AcquireToken) {\r\n                        // Prevent this event from clearing any status other than login or acquireToken\r\n                        break;\r\n                    }\r\n                    return InteractionStatus.None;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n\r\nimport { CryptoOps } from \"./CryptoOps\";\r\nimport { PopTokenGenerator, SignedHttpRequestParameters } from \"@azure/msal-common\";\r\n\r\nexport class SignedHttpRequest {\r\n    private popTokenGenerator: PopTokenGenerator;\r\n    private cryptoOps: CryptoOps;\r\n    private shrParameters: SignedHttpRequestParameters;\r\n\r\n    constructor(shrParameters: SignedHttpRequestParameters) {\r\n        this.cryptoOps = new CryptoOps();\r\n        this.popTokenGenerator = new PopTokenGenerator(this.cryptoOps);\r\n        this.shrParameters = shrParameters;\r\n    }\r\n\r\n    /**\r\n     * Generates and caches a keypair for the given request options.\r\n     * @returns Public key digest, which should be sent to the token issuer.\r\n     */\r\n    async generatePublicKeyThumbprint(): Promise<string> {\r\n        const { kid } = await this.popTokenGenerator.generateKid(this.shrParameters);\r\n\r\n        return kid;\r\n    }\r\n\r\n    /**\r\n     * Generates a signed http request for the given payload with the given key.\r\n     * @param payload Payload to sign (e.g. access token)\r\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n     * @param claims Additional claims to include/override in the signed JWT \r\n     * @returns Pop token signed with the corresponding private key\r\n     */\r\n    async signRequest(payload: string, publicKeyThumbprint: string, claims?: object): Promise<string> {\r\n        return this.popTokenGenerator.signPayload(\r\n            payload, \r\n            publicKeyThumbprint,\r\n            this.shrParameters, \r\n            claims\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Removes cached keys from browser for given public key thumbprint\r\n     * @param publicKeyThumbprint Public key digest (from generatePublicKeyThumbprint API)\r\n     * @returns If keys are properly deleted\r\n     */\r\n    async removeKeys(publicKeyThumbprint: string): Promise<boolean> {\r\n        return this.cryptoOps.removeTokenBindingKey(publicKeyThumbprint);\r\n    }\r\n}\r\n"],"names":["extendStatics","__extends","__assign","__awaiter","__generator","AuthenticationScheme","LogLevel","name","version","ProtocolMode","BrowserCacheLocation","ApiId","InteractionType","InteractionStatus","WrapperSKU","IdToken","EventType"],"mappings":"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"}