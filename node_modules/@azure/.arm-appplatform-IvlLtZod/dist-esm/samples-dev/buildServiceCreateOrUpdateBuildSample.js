/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { AppPlatformManagementClient } from "@azure/arm-appplatform";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Create or update a KPack build.
 *
 * @summary Create or update a KPack build.
 * x-ms-original-file: specification/appplatform/resource-manager/Microsoft.AppPlatform/preview/2022-09-01-preview/examples/BuildService_CreateOrUpdateBuild.json
 */
function buildServiceCreateOrUpdateBuild() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-0000-0000-0000-000000000000";
        const resourceGroupName = "myResourceGroup";
        const serviceName = "myservice";
        const buildServiceName = "default";
        const buildName = "mybuild";
        const build = {
            properties: {
                agentPool: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/buildServices/default/agentPools/default",
                builder: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myResourceGroup/providers/Microsoft.AppPlatform/Spring/myservice/buildServices/default/builders/default",
                env: { environmentVariable: "test" },
                relativePath: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855-20210601-3ed9f4a2-986b-4bbd-b833-a42dccb2f777",
                resourceRequests: { cpu: "1", memory: "2Gi" }
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new AppPlatformManagementClient(credential, subscriptionId);
        const result = yield client.buildServiceOperations.createOrUpdateBuild(resourceGroupName, serviceName, buildServiceName, buildName, build);
        console.log(result);
    });
}
buildServiceCreateOrUpdateBuild().catch(console.error);
//# sourceMappingURL=buildServiceCreateOrUpdateBuildSample.js.map